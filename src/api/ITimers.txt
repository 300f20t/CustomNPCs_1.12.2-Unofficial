Раздел noppes.npcs.[[Custom NPCs/Unoficial_API_1.12.2/api|api]]<br>
'''Интерфейс''' [https://github.com/BetaZavr/CustomNPCs_1.12.2-Unofficial/tree/master/src/main/java/noppes/npcs/api/ITimers.java ITimers]<br><br>
=== Получить из ===
[[Custom NPCs/Unoficial_API_1.12.2/api/block/IBlockScripted#getTimers|IBlockScripted]], [[Custom NPCs/Unoficial_API_1.12.2/api/block/IBlockScriptedDoor#getTimers|IBlockScriptedDoor]], [[Custom NPCs/Unoficial_API_1.12.2/api/entity/ICustomNpc#getTimers|ICustomNpc]], [[Custom NPCs/Unoficial_API_1.12.2/api/entity/IPlayer#getTimers|IPlayer]]<br>
=== Реализации ===
[https://github.com/BetaZavr/CustomNPCs_1.12.2-Unofficial/tree/master/src/main/java/noppes/npcs/entity/data/DataTimers.java DataTimers]<br>
=== Список методов ===
{| class="wikitable" style="text-align:left"
! Возвращает: !! Название метода: !! Описание:
|-
| [https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void]
| [[Custom NPCs/Unoficial_API_1.12.2/api/ITimers#clear|clear]]()
| ''Удалить все текущие таймеры''
|-
| [https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void]
| [[Custom NPCs/Unoficial_API_1.12.2/api/ITimers#forceStart|forceStart]]([https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] id, [https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] ticks, [https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html boolean] repeat)
| ''Запустить таймер<br>Если таймер уже активен, то перезапустит его''
|-
| [https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html boolean]
| [[Custom NPCs/Unoficial_API_1.12.2/api/ITimers#has|has]]([https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] id)
| ''Возвращает имеется ли таймер у объекта''
|-
| [https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void]
| [[Custom NPCs/Unoficial_API_1.12.2/api/ITimers#readFromNBT|readFromNBT]]([https://nekoyue.github.io/ForgeJavaDocs-NG/javadoc/1.12.2/net/minecraft/nbt/NBTTagCompound.html NBTTagCompound] compound)
| ''Переписать все таймеры через набор тегов NBT''
|-
| [https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void]
| [[Custom NPCs/Unoficial_API_1.12.2/api/ITimers#reset|reset]]([https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] id)
| ''Перезапускает таймер у объекта''
|-
| [https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void]
| [[Custom NPCs/Unoficial_API_1.12.2/api/ITimers#start|start]]([https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] id, [https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] ticks, [https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html boolean] repeat)
| ''Запустить таймер<br>Если таймер уже активен, то выдаст ошибку''
|-
| [https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html boolean]
| [[Custom NPCs/Unoficial_API_1.12.2/api/ITimers#stop|stop]]([https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] id)
| ''Останавливает и возвращает был ли остановлен таймер''
|-
| [https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void]
| [[Custom NPCs/Unoficial_API_1.12.2/api/ITimers#update|update]]()
| ''Используется для работы таймера''
|-
| [https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void]
| [[Custom NPCs/Unoficial_API_1.12.2/api/ITimers#writeToNBT|writeToNBT]]([https://nekoyue.github.io/ForgeJavaDocs-NG/javadoc/1.12.2/net/minecraft/nbt/NBTTagCompound.html NBTTagCompound] compound)
| ''Записать все таймеры в набор тегов NBT''
|}
=== Описание методов ===

==== clear ====
{| class="wikitable" style="text-align:left; width:100%";
|-
| ''[https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void] clear()''<br>'''Действие:'''<br>Удалить все текущие таймеры
|}
==== forceStart ====
{| class="wikitable" style="text-align:left; width:100%";
|-
| ''[https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void] forceStart(id, ticks, repeat)''<br>'''Действие:'''<br>Запустить таймер<br>Если таймер уже активен, то перезапустит его<br><br>'''Параметры:'''<br>[https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] '''id''' = parametr.api.datatimers.forceStart.id<br>[https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] '''ticks''' = parametr.api.datatimers.forceStart.ticks<br>[https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html boolean] '''repeat''' = parametr.api.datatimers.forceStart.repeat
|}
==== has ====
{| class="wikitable" style="text-align:left; width:100%";
|-
| ''[https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html boolean] has(id)''<br>'''Действие:'''<br>Возвращает имеется ли таймер у объекта<br><br>'''Параметры:'''<br>[https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] '''id''' = parametr.api.datatimers.has.id
|}
==== readFromNBT ====
{| class="wikitable" style="text-align:left; width:100%";
|-
| ''[https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void] readFromNBT(compound)''<br>'''Действие:'''<br>Переписать все таймеры через набор тегов NBT<br><br>'''Параметры:'''<br>[https://nekoyue.github.io/ForgeJavaDocs-NG/javadoc/1.12.2/net/minecraft/nbt/NBTTagCompound.html NBTTagCompound] '''compound''' = набор тегов NBT
|}
==== reset ====
{| class="wikitable" style="text-align:left; width:100%";
|-
| ''[https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void] reset(id)''<br>'''Действие:'''<br>Перезапускает таймер у объекта<br><br>'''Параметры:'''<br>[https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] '''id''' = parametr.api.datatimers.reset.id
|}
==== start ====
{| class="wikitable" style="text-align:left; width:100%";
|-
| ''[https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void] start(id, ticks, repeat)''<br>'''Действие:'''<br>Запустить таймер<br>Если таймер уже активен, то выдаст ошибку<br><br>'''Параметры:'''<br>[https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] '''id''' = parametr.api.datatimers.start.id<br>[https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] '''ticks''' = parametr.api.datatimers.start.ticks<br>[https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html boolean] '''repeat''' = parametr.api.datatimers.start.repeat
|}
==== stop ====
{| class="wikitable" style="text-align:left; width:100%";
|-
| ''[https://docs.oracle.com/javase/8/docs/api/java/lang/Boolean.html boolean] stop(id)''<br>'''Действие:'''<br>Останавливает и возвращает был ли остановлен таймер<br><br>'''Параметры:'''<br>[https://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html int] '''id''' = parametr.api.datatimers.stop.id
|}
==== update ====
{| class="wikitable" style="text-align:left; width:100%";
|-
| ''[https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void] update()''<br>'''Действие:'''<br>Используется для работы таймера
|}
==== writeToNBT ====
{| class="wikitable" style="text-align:left; width:100%";
|-
| ''[https://docs.oracle.com/javase/8/docs/api/java/lang/Void.html void] writeToNBT(compound)''<br>'''Действие:'''<br>Записать все таймеры в набор тегов NBT<br><br>'''Параметры:'''<br>[https://nekoyue.github.io/ForgeJavaDocs-NG/javadoc/1.12.2/net/minecraft/nbt/NBTTagCompound.html NBTTagCompound] '''compound''' = набор тегов NBT
|}