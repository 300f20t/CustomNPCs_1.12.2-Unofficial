package noppes.npcs.util;

import java.util.HashMap;
import java.util.Map;

public class ObfuscationPart1 {
	public static Map<String, String> map = new HashMap<String, String>();

	static {
		ObfuscationPart1.map.put("func_175968_a", "create");
		ObfuscationPart1.map.put("func_175969_a", "fits");
		ObfuscationPart1.map.put("func_175970_a", "registerOceanMonumentPieces");
		ObfuscationPart1.map.put("func_176052_a", "getMapPacket");
		ObfuscationPart1.map.put("func_176053_a", "updateMapData");
		ObfuscationPart1.map.put("func_176054_a", "calculateMapCenter");
		ObfuscationPart1.map.put("func_176055_c", "checkDoorExistence");
		ObfuscationPart1.map.put("func_176056_a", "getNearestVillage");
		ObfuscationPart1.map.put("func_176057_e", "positionInList");
		ObfuscationPart1.map.put("func_176058_f", "isWoodDoor");
		ObfuscationPart1.map.put("func_176059_d", "addToNewDoorsList");
		ObfuscationPart1.map.put("func_176060_a", "addToVillagerPositionList");
		ObfuscationPart1.map.put("func_176061_a", "countBlocksCanSeeSky");
		ObfuscationPart1.map.put("func_176062_a", "fileNameForProvider");
		ObfuscationPart1.map.put("func_176065_a", "findAndCreateComponentFactory");
		ObfuscationPart1.map.put("func_176066_d", "generateAndAddComponent");
		ObfuscationPart1.map.put("func_176067_c", "generateComponent");
		ObfuscationPart1.map.put("func_176069_e", "generateAndAddRoadPiece");
		ObfuscationPart1.map.put("func_176071_a", "glBufferData");
		ObfuscationPart1.map.put("func_176072_g", "glBindBuffer");
		ObfuscationPart1.map.put("func_176073_e", "glGenBuffers");
		ObfuscationPart1.map.put("func_176074_g", "glDeleteBuffers");
		ObfuscationPart1.map.put("func_176075_f", "useVbo");
		ObfuscationPart1.map.put("func_176101_a", "getPacket");
		ObfuscationPart1.map.put("func_176102_a", "update");
		ObfuscationPart1.map.put("func_176110_a", "getImage");
		ObfuscationPart1.map.put("func_176111_d", "getRotation");
		ObfuscationPart1.map.put("func_176112_b", "getX");
		ObfuscationPart1.map.put("func_176113_c", "getY");
		ObfuscationPart1.map.put("func_176118_b", "setBorderLerpTarget");
		ObfuscationPart1.map.put("func_176119_g", "setHardcore");
		ObfuscationPart1.map.put("func_176120_C", "getBorderCenterX");
		ObfuscationPart1.map.put("func_176121_c", "setAllowCommands");
		ObfuscationPart1.map.put("func_176122_j", "setBorderWarningDistance");
		ObfuscationPart1.map.put("func_176123_z", "isDifficultyLocked");
		ObfuscationPart1.map.put("func_176124_d", "getBorderCenterX");
		ObfuscationPart1.map.put("func_176125_f", "setBorderDamagePerBlock");
		ObfuscationPart1.map.put("func_176126_D", "getBorderCenterZ");
		ObfuscationPart1.map.put("func_176127_a", "populateFromWorldSettings");
		ObfuscationPart1.map.put("func_176128_f", "setMapFeaturesEnabled");
		ObfuscationPart1.map.put("func_176129_e", "setBorderSafeZone");
		ObfuscationPart1.map.put("func_176130_y", "getDifficulty");
		ObfuscationPart1.map.put("func_176131_J", "getBorderWarningDistance");
		ObfuscationPart1.map.put("func_176132_G", "getBorderLerpTarget");
		ObfuscationPart1.map.put("func_176133_A", "getCleanWeatherTime");
		ObfuscationPart1.map.put("func_176134_F", "getBorderLerpTime");
		ObfuscationPart1.map.put("func_176135_e", "setBorderLerpTime");
		ObfuscationPart1.map.put("func_176136_k", "setBorderWarningTime");
		ObfuscationPart1.map.put("func_176137_E", "getBorderSize");
		ObfuscationPart1.map.put("func_176138_H", "getBorderSafeZone");
		ObfuscationPart1.map.put("func_176139_K", "getBorderWarningTime");
		ObfuscationPart1.map.put("func_176140_I", "getBorderDamagePerBlock");
		ObfuscationPart1.map.put("func_176141_c", "getBorderCenterZ");
		ObfuscationPart1.map.put("func_176142_i", "setCleanWeatherTime");
		ObfuscationPart1.map.put("func_176143_a", "setSpawn");
		ObfuscationPart1.map.put("func_176144_a", "setDifficulty");
		ObfuscationPart1.map.put("func_176145_a", "setBorderSize");
		ObfuscationPart1.map.put("func_176159_a", "openPoint");
		ObfuscationPart1.map.put("func_176163_a", "postProcess");
		ObfuscationPart1.map.put("func_176194_O", "getBlockState");
		ObfuscationPart1.map.put("func_176195_g", "getBlockHardness");
		ObfuscationPart1.map.put("func_176196_c", "canPlaceBlockAt");
		ObfuscationPart1.map.put("func_176197_a", "modifyAcceleration");
		ObfuscationPart1.map.put("func_176198_a", "canPlaceBlockOnSide");
		ObfuscationPart1.map.put("func_176199_a", "onEntityWalk");
		ObfuscationPart1.map.put("func_176200_f", "isReplaceable");
		ObfuscationPart1.map.put("func_176201_c", "getMetaFromState");
		ObfuscationPart1.map.put("func_176203_a", "getStateFromMeta");
		ObfuscationPart1.map.put("func_176205_b", "isPassable");
		ObfuscationPart1.map.put("func_176206_d", "onPlayerDestroy");
		ObfuscationPart1.map.put("func_176208_a", "onBlockHarvested");
		ObfuscationPart1.map.put("func_176209_a", "canCollideCheck");
		ObfuscationPart1.map.put("func_176210_f", "getStateId");
		ObfuscationPart1.map.put("func_176211_b", "getStrongPower");
		ObfuscationPart1.map.put("func_176212_b", "causesDownwardCurrent");
		ObfuscationPart1.map.put("func_176213_c", "onBlockAdded");
		ObfuscationPart1.map.put("func_176214_u", "causesSuffocation");
		ObfuscationPart1.map.put("func_176215_a", "registerBlock");
		ObfuscationPart1.map.put("func_176216_a", "onLanded");
		ObfuscationPart1.map.put("func_176218_Q", "getOffsetType");
		ObfuscationPart1.map.put("func_176219_a", "registerBlock");
		ObfuscationPart1.map.put("func_176220_d", "getStateById");
		ObfuscationPart1.map.put("func_176221_a", "getActualState");
		ObfuscationPart1.map.put("func_176223_P", "getDefaultState");
		ObfuscationPart1.map.put("func_176224_k", "fillWithRain");
		ObfuscationPart1.map.put("func_176225_a", "shouldSideBeRendered");
		ObfuscationPart1.map.put("func_176226_b", "dropBlockAsItem");
		ObfuscationPart1.map.put("func_176232_d", "getSaplingDropChance");
		ObfuscationPart1.map.put("func_176233_b", "getWoodType");
		ObfuscationPart1.map.put("func_176234_a", "dropApple");
		ObfuscationPart1.map.put("func_176235_d", "destroy");
		ObfuscationPart1.map.put("func_176253_e", "canConnectTo");
		ObfuscationPart1.map.put("func_176260_a", "calculateState");
		ObfuscationPart1.map.put("func_176261_e", "checkForDrop");
		ObfuscationPart1.map.put("func_176262_b", "notifyNeighbors");
		ObfuscationPart1.map.put("func_176267_a", "getPropertyFor");
		ObfuscationPart1.map.put("func_176268_d", "getNumGrownFaces");
		ObfuscationPart1.map.put("func_176269_e", "recheckGrownSides");
		ObfuscationPart1.map.put("func_176281_b", "getFacing");
		ObfuscationPart1.map.put("func_176282_a", "getMetaForFacing");
		ObfuscationPart1.map.put("func_176286_e", "notifyHook");
		ObfuscationPart1.map.put("func_176287_c", "isConnectedTo");
		ObfuscationPart1.map.put("func_176288_d", "updateState");
		ObfuscationPart1.map.put("func_176311_e", "tryAbsorb");
		ObfuscationPart1.map.put("func_176312_d", "absorb");
		ObfuscationPart1.map.put("func_176314_e", "checkAndDropBlock");
		ObfuscationPart1.map.put("func_176316_e", "checkForMove");
		ObfuscationPart1.map.put("func_176317_b", "getFacing");
		ObfuscationPart1.map.put("func_176318_b", "shouldBeExtended");
		ObfuscationPart1.map.put("func_176319_a", "doMove");
		ObfuscationPart1.map.put("func_176322_b", "getFacing");
		ObfuscationPart1.map.put("func_176328_e", "checkForDrop");
		ObfuscationPart1.map.put("func_176329_d", "canBlockStay");
		ObfuscationPart1.map.put("func_176337_b", "colorMultiplier");
		ObfuscationPart1.map.put("func_176338_e", "updateSurroundingRedstone");
		ObfuscationPart1.map.put("func_176339_d", "isPowerSourceAt");
		ObfuscationPart1.map.put("func_176340_e", "canConnectUpwardsTo");
		ObfuscationPart1.map.put("func_176341_c", "getAttachPosition");
		ObfuscationPart1.map.put("func_176342_a", "getMaxCurrentStrength");
		ObfuscationPart1.map.put("func_176343_a", "canConnectTo");
		ObfuscationPart1.map.put("func_176344_d", "notifyWireNeighborsOfStateChange");
		ObfuscationPart1.map.put("func_176345_a", "calculateCurrentChanges");
		ObfuscationPart1.map.put("func_176346_d", "canConnectUpwardsTo");
		ObfuscationPart1.map.put("func_176352_d", "activate");
		ObfuscationPart1.map.put("func_176353_e", "checkForDrop");
		ObfuscationPart1.map.put("func_176354_d", "canBlockStay");
		ObfuscationPart1.map.put("func_176361_a", "getFlowingBlock");
		ObfuscationPart1.map.put("func_176363_b", "getStaticBlock");
		ObfuscationPart1.map.put("func_176364_g", "shouldRenderSides");
		ObfuscationPart1.map.put("func_176365_e", "checkForMixing");
		ObfuscationPart1.map.put("func_176368_m", "getCanBlockBurn");
		ObfuscationPart1.map.put("func_176369_e", "isSurroundingBlockFlammable");
		ObfuscationPart1.map.put("func_176370_f", "updateLiquid");
		ObfuscationPart1.map.put("func_176371_a", "checkAdjacentBlock");
		ObfuscationPart1.map.put("func_176372_g", "isBlocked");
		ObfuscationPart1.map.put("func_176373_h", "canFlowInto");
		ObfuscationPart1.map.put("func_176374_a", "getSlopeDistance");
		ObfuscationPart1.map.put("func_176375_a", "tryFlowInto");
		ObfuscationPart1.map.put("func_176376_e", "getPossibleFlowDirections");
		ObfuscationPart1.map.put("func_176377_d", "canContainSilverfish");
		ObfuscationPart1.map.put("func_176388_T", "getGolemPattern");
		ObfuscationPart1.map.put("func_176389_S", "getGolemBasePattern");
		ObfuscationPart1.map.put("func_176390_d", "canDispenserPlace");
		ObfuscationPart1.map.put("func_176391_l", "getSnowmanPattern");
		ObfuscationPart1.map.put("func_176392_j", "getSnowmanBasePattern");
		ObfuscationPart1.map.put("func_176397_f", "calculateInputStrength");
		ObfuscationPart1.map.put("func_176398_g", "updateState");
		ObfuscationPart1.map.put("func_176399_m", "getTickDelay");
		ObfuscationPart1.map.put("func_176400_h", "notifyNeighbors");
		ObfuscationPart1.map.put("func_176401_c", "getPowerOnSide");
		ObfuscationPart1.map.put("func_176402_i", "isFacingTowardsRepeater");
		ObfuscationPart1.map.put("func_176403_d", "getDelay");
		ObfuscationPart1.map.put("func_176404_e", "shouldBePowered");
		ObfuscationPart1.map.put("func_176405_b", "isLocked");
		ObfuscationPart1.map.put("func_176406_l", "isPowered");
		ObfuscationPart1.map.put("func_176407_c", "getPowerOnSides");
		ObfuscationPart1.map.put("func_176408_a", "getActiveSignal");
		ObfuscationPart1.map.put("func_176409_d", "canBlockStay");
		ObfuscationPart1.map.put("func_176414_j", "getWitherBasePattern");
		ObfuscationPart1.map.put("func_176415_b", "canDispenserPlace");
		ObfuscationPart1.map.put("func_176416_l", "getWitherPattern");
		ObfuscationPart1.map.put("func_176427_e", "updateState");
		ObfuscationPart1.map.put("func_176428_b", "getFacing");
		ObfuscationPart1.map.put("func_176431_a", "insertRecord");
		ObfuscationPart1.map.put("func_176438_e", "setDefaultDirection");
		ObfuscationPart1.map.put("func_176439_d", "dispense");
		ObfuscationPart1.map.put("func_176442_d", "getTileEntity");
		ObfuscationPart1.map.put("func_176445_e", "setDefaultFacing");
		ObfuscationPart1.map.put("func_176446_a", "setState");
		ObfuscationPart1.map.put("func_176450_d", "updateColorAsync");
		ObfuscationPart1.map.put("func_176453_o", "isOcelotSittingOnChest");
		ObfuscationPart1.map.put("func_176454_e", "isDoubleChest");
		ObfuscationPart1.map.put("func_176455_e", "checkForSurroundingChests");
		ObfuscationPart1.map.put("func_176456_n", "isBelowSolidBlock");
		ObfuscationPart1.map.put("func_176457_m", "isBlocked");
		ObfuscationPart1.map.put("func_176458_f", "correctFacing");
		ObfuscationPart1.map.put("func_176460_j", "calculateOutput");
		ObfuscationPart1.map.put("func_176461_a", "findItemFrame");
		ObfuscationPart1.map.put("func_176462_k", "onStateChange");
		ObfuscationPart1.map.put("func_176468_a", "getSafeExitLocation");
		ObfuscationPart1.map.put("func_176469_d", "hasRoomForPlayer");
		ObfuscationPart1.map.put("func_176470_e", "getPlayerInBed");
		ObfuscationPart1.map.put("func_176473_a", "canGrow");
		ObfuscationPart1.map.put("func_176474_b", "grow");
		ObfuscationPart1.map.put("func_176475_e", "checkAndDropBlock");
		ObfuscationPart1.map.put("func_176476_e", "generateTree");
		ObfuscationPart1.map.put("func_176477_a", "isTypeAt");
		ObfuscationPart1.map.put("func_176478_d", "grow");
		ObfuscationPart1.map.put("func_176481_j", "getSeedItem");
		ObfuscationPart1.map.put("func_176482_g", "growStem");
		ObfuscationPart1.map.put("func_176485_d", "generateBigMushroom");
		ObfuscationPart1.map.put("func_176487_g", "grow");
		ObfuscationPart1.map.put("func_176489_b", "onHarvest");
		ObfuscationPart1.map.put("func_176491_a", "placeAt");
		ObfuscationPart1.map.put("func_176494_l", "getTypeProperty");
		ObfuscationPart1.map.put("func_176495_j", "getBlockType");
		ObfuscationPart1.map.put("func_176499_e", "canBlockStay");
		ObfuscationPart1.map.put("func_176500_f", "dropBlock");
		ObfuscationPart1.map.put("func_176502_a_", "onEndFalling");
		ObfuscationPart1.map.put("func_176503_e", "checkFallable");
		ObfuscationPart1.map.put("func_176509_j", "getItem");
		ObfuscationPart1.map.put("func_176510_b", "removeHalfBit");
		ObfuscationPart1.map.put("func_176511_f", "getFacing");
		ObfuscationPart1.map.put("func_176512_a", "toggleDoor");
		ObfuscationPart1.map.put("func_176514_f", "isOpen");
		ObfuscationPart1.map.put("func_176515_e", "combineMetadata");
		ObfuscationPart1.map.put("func_176516_g", "isOpen");
		ObfuscationPart1.map.put("func_176517_h", "getFacing");
		ObfuscationPart1.map.put("func_176518_i", "isTop");
		ObfuscationPart1.map.put("func_176524_e", "canConnectTo");
		ObfuscationPart1.map.put("func_176529_d", "hasCrops");
		ObfuscationPart1.map.put("func_176530_e", "hasWater");
		ObfuscationPart1.map.put("func_176532_c", "getFlammability");
		ObfuscationPart1.map.put("func_176533_e", "canNeighborCatchFire");
		ObfuscationPart1.map.put("func_176534_d", "getEncouragement");
		ObfuscationPart1.map.put("func_176535_e", "canCatchFire");
		ObfuscationPart1.map.put("func_176536_a", "catchOnFire");
		ObfuscationPart1.map.put("func_176537_d", "canDie");
		ObfuscationPart1.map.put("func_176538_m", "getNeighborEncouragement");
		ObfuscationPart1.map.put("func_176548_d", "trySpawnPortal");
		ObfuscationPart1.map.put("func_176549_a", "getMetaForAxis");
		ObfuscationPart1.map.put("func_176551_l", "getVariantProperty");
		ObfuscationPart1.map.put("func_176552_j", "isDouble");
		ObfuscationPart1.map.put("func_176560_l", "getShapeProperty");
		ObfuscationPart1.map.put("func_176562_d", "isRailBlock");
		ObfuscationPart1.map.put("func_176563_d", "isRailBlock");
		ObfuscationPart1.map.put("func_176564_a", "updateDir");
		ObfuscationPart1.map.put("func_176566_a", "findPoweredRailSignal");
		ObfuscationPart1.map.put("func_176567_a", "isSameRailWithPower");
		ObfuscationPart1.map.put("func_176570_e", "updatePoweredState");
		ObfuscationPart1.map.put("func_176571_a", "findMinecarts");
		ObfuscationPart1.map.put("func_176572_a", "getDectectionBox");
		ObfuscationPart1.map.put("func_176575_a", "setRedstoneStrength");
		ObfuscationPart1.map.put("func_176576_e", "getRedstoneStrength");
		ObfuscationPart1.map.put("func_176577_m", "canBePlacedOn");
		ObfuscationPart1.map.put("func_176578_d", "updateNeighbors");
		ObfuscationPart1.map.put("func_176582_b", "notifyNeighbors");
		ObfuscationPart1.map.put("func_176583_e", "checkForDrop");
		ObfuscationPart1.map.put("func_176586_d", "canBlockStay");
		ObfuscationPart1.map.put("func_176588_d", "canBlockStay");
		ObfuscationPart1.map.put("func_176590_a", "setWaterLevel");
		ObfuscationPart1.map.put("func_176592_e", "onNeighborChangeInternal");
		ObfuscationPart1.map.put("func_176593_f", "checkForDrop");
		ObfuscationPart1.map.put("func_176594_d", "canPlaceOn");
		ObfuscationPart1.map.put("func_176595_b", "canPlaceAt");
		ObfuscationPart1.map.put("func_176597_g", "shouldBeOff");
		ObfuscationPart1.map.put("func_176598_a", "isBurnedOut");
		ObfuscationPart1.map.put("func_176604_a", "makeAtlasSprite");
		ObfuscationPart1.map.put("func_176610_l", "getName");
		ObfuscationPart1.map.put("func_176612_a", "getMetadata");
		ObfuscationPart1.map.put("func_176613_a", "byMetadata");
		ObfuscationPart1.map.put("func_176614_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176624_a", "getMetadata");
		ObfuscationPart1.map.put("func_176625_a", "byMetadata");
		ObfuscationPart1.map.put("func_176627_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176642_a", "getMetadata");
		ObfuscationPart1.map.put("func_176643_a", "byMetadata");
		ObfuscationPart1.map.put("func_176644_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176657_a", "getMetadata");
		ObfuscationPart1.map.put("func_176659_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176660_a", "byMetadata");
		ObfuscationPart1.map.put("func_176673_a", "byMetadata");
		ObfuscationPart1.map.put("func_176675_a", "getMetadata");
		ObfuscationPart1.map.put("func_176676_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176685_d", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176686_a", "byMetadata");
		ObfuscationPart1.map.put("func_176687_c", "getMapColor");
		ObfuscationPart1.map.put("func_176688_a", "getMetadata");
		ObfuscationPart1.map.put("func_176716_d", "getPlane");
		ObfuscationPart1.map.put("func_176717_a", "byName");
		ObfuscationPart1.map.put("func_176719_a", "getName2");
		ObfuscationPart1.map.put("func_176720_b", "isVertical");
		ObfuscationPart1.map.put("func_176722_c", "isHorizontal");
		ObfuscationPart1.map.put("func_176730_m", "getDirectionVec");
		ObfuscationPart1.map.put("func_176731_b", "byHorizontalIndex");
		ObfuscationPart1.map.put("func_176732_a", "rotateAround");
		ObfuscationPart1.map.put("func_176733_a", "fromAngle");
		ObfuscationPart1.map.put("func_176734_d", "getOpposite");
		ObfuscationPart1.map.put("func_176735_f", "rotateYCCW");
		ObfuscationPart1.map.put("func_176736_b", "getHorizontalIndex");
		ObfuscationPart1.map.put("func_176737_a", "getFacingFromVector");
		ObfuscationPart1.map.put("func_176738_p", "rotateZ");
		ObfuscationPart1.map.put("func_176739_a", "byName");
		ObfuscationPart1.map.put("func_176740_k", "getAxis");
		ObfuscationPart1.map.put("func_176741_a", "random");
		ObfuscationPart1.map.put("func_176742_j", "getName2");
		ObfuscationPart1.map.put("func_176743_c", "getAxisDirection");
		ObfuscationPart1.map.put("func_176744_n", "rotateX");
		ObfuscationPart1.map.put("func_176745_a", "getIndex");
		ObfuscationPart1.map.put("func_176746_e", "rotateY");
		ObfuscationPart1.map.put("func_176762_d", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176764_b", "byMetadata");
		ObfuscationPart1.map.put("func_176765_a", "getMetadata");
		ObfuscationPart1.map.put("func_176766_a", "byDyeDamage");
		ObfuscationPart1.map.put("func_176767_b", "getDyeDamage");
		ObfuscationPart1.map.put("func_176794_a", "byMetadata");
		ObfuscationPart1.map.put("func_176796_a", "getMetadata");
		ObfuscationPart1.map.put("func_176807_a", "getMetadata");
		ObfuscationPart1.map.put("func_176809_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176810_a", "byMetadata");
		ObfuscationPart1.map.put("func_176825_a", "byMetadata");
		ObfuscationPart1.map.put("func_176827_a", "getMetadata");
		ObfuscationPart1.map.put("func_176828_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176837_a", "byMetadata");
		ObfuscationPart1.map.put("func_176839_a", "getMetadata");
		ObfuscationPart1.map.put("func_176840_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176852_c", "getFacing");
		ObfuscationPart1.map.put("func_176853_a", "byMetadata");
		ObfuscationPart1.map.put("func_176855_a", "getMetadata");
		ObfuscationPart1.map.put("func_176856_a", "forFacings");
		ObfuscationPart1.map.put("func_176870_a", "fromFacingAxis");
		ObfuscationPart1.map.put("func_176878_a", "forModelBlock");
		ObfuscationPart1.map.put("func_176879_a", "byMetadata");
		ObfuscationPart1.map.put("func_176881_a", "getMetadata");
		ObfuscationPart1.map.put("func_176882_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176883_d", "getModelBlock");
		ObfuscationPart1.map.put("func_176895_a", "byMetadata");
		ObfuscationPart1.map.put("func_176896_a", "getMetadata");
		ObfuscationPart1.map.put("func_176915_a", "getMetadata");
		ObfuscationPart1.map.put("func_176916_a", "byMetadata");
		ObfuscationPart1.map.put("func_176918_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176924_a", "byMetadata");
		ObfuscationPart1.map.put("func_176925_a", "getMetadata");
		ObfuscationPart1.map.put("func_176927_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176936_a", "getMeta");
		ObfuscationPart1.map.put("func_176938_a", "byMetadata");
		ObfuscationPart1.map.put("func_176939_c", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176963_d", "getUnlocalizedName");
		ObfuscationPart1.map.put("func_176964_a", "getBlockType");
		ObfuscationPart1.map.put("func_176966_a", "getTypes");
		ObfuscationPart1.map.put("func_176967_a", "getType");
		ObfuscationPart1.map.put("func_176968_b", "getMeta");
		ObfuscationPart1.map.put("func_177015_a", "getMetadata");
		ObfuscationPart1.map.put("func_177016_a", "byMetadata");
		ObfuscationPart1.map.put("func_177018_c", "isAscending");
		ObfuscationPart1.map.put("func_177044_a", "getMeta");
		ObfuscationPart1.map.put("func_177045_a", "byMetadata");
		ObfuscationPart1.map.put("func_177053_a", "readBufferedImage");
		ObfuscationPart1.map.put("func_177054_c", "anaglyphColor");
		ObfuscationPart1.map.put("func_177059_a", "registerSprites");
		ObfuscationPart1.map.put("func_177066_a", "getFramebufferRaw");
		ObfuscationPart1.map.put("func_177067_a", "renderName");
		ObfuscationPart1.map.put("func_177068_d", "getRenderManager");
		ObfuscationPart1.map.put("func_177070_b", "canRenderName");
		ObfuscationPart1.map.put("func_177071_a", "shouldRender");
		ObfuscationPart1.map.put("func_177077_a", "transformModelCount");
		ObfuscationPart1.map.put("func_177078_a", "getModelCount");
		ObfuscationPart1.map.put("func_177082_d", "getStackToRender");
		ObfuscationPart1.map.put("func_177087_b", "getMainModel");
		ObfuscationPart1.map.put("func_177088_c", "setScoreTeamColor");
		ObfuscationPart1.map.put("func_177090_c", "setDoRenderBrightness");
		ObfuscationPart1.map.put("func_177091_f", "unsetBrightness");
		ObfuscationPart1.map.put("func_177092_a", "setBrightness");
		ObfuscationPart1.map.put("func_177093_a", "renderLayers");
		ObfuscationPart1.map.put("func_177094_a", "addLayer");
		ObfuscationPart1.map.put("func_177105_a", "setLightmap");
		ObfuscationPart1.map.put("func_177110_a", "getPosition");
		ObfuscationPart1.map.put("func_177137_d", "setModelVisibilities");
		ObfuscationPart1.map.put("func_177138_b", "renderRightArm");
		ObfuscationPart1.map.put("func_177139_c", "renderLeftArm");
		ObfuscationPart1.map.put("func_177141_a", "doRenderLayer");
		ObfuscationPart1.map.put("func_177142_b", "shouldCombineTextures");
		ObfuscationPart1.map.put("func_177177_a", "initArmor");
		ObfuscationPart1.map.put("func_177178_a", "getArmorResource");
		ObfuscationPart1.map.put("func_177181_a", "getArmorResource");
		ObfuscationPart1.map.put("func_177194_a", "setModelVisible");
		ObfuscationPart1.map.put("func_177219_e", "isInterpolate");
		ObfuscationPart1.map.put("func_177221_b", "getSpawnerPosition");
		ObfuscationPart1.map.put("func_177222_d", "getMobRotation");
		ObfuscationPart1.map.put("func_177223_e", "getPrevMobRotation");
		ObfuscationPart1.map.put("func_177226_a", "withProperty");
		ObfuscationPart1.map.put("func_177227_a", "getPropertyKeys");
		ObfuscationPart1.map.put("func_177228_b", "getProperties");
		ObfuscationPart1.map.put("func_177229_b", "getValue");
		ObfuscationPart1.map.put("func_177230_c", "getBlock");
		ObfuscationPart1.map.put("func_177231_a", "cycleProperty");
		ObfuscationPart1.map.put("func_177232_a", "cyclePropertyValue");
		ObfuscationPart1.map.put("func_177235_a", "buildPropertyValueTable");
		ObfuscationPart1.map.put("func_177236_b", "getPropertiesWithValue");
		ObfuscationPart1.map.put("func_177240_d", "getResourcePackName");
		ObfuscationPart1.map.put("func_177241_a", "getResourceLocation");
		ObfuscationPart1.map.put("func_177245_a", "getInputStream");
		ObfuscationPart1.map.put("func_177250_b", "addBranchingBlocks");
		ObfuscationPart1.map.put("func_177251_a", "addBlockLine");
		ObfuscationPart1.map.put("func_177252_d", "getBlocksToDestroy");
		ObfuscationPart1.map.put("func_177253_a", "canMove");
		ObfuscationPart1.map.put("func_177254_c", "getBlocksToMove");
		ObfuscationPart1.map.put("func_177255_a", "reorderListAtCollision");
		ObfuscationPart1.map.put("func_177262_a", "incrementHeight");
		ObfuscationPart1.map.put("func_177263_b", "getColors");
		ObfuscationPart1.map.put("func_177264_c", "getHeight");
		ObfuscationPart1.map.put("func_177319_a", "setServerResourcePack");
		ObfuscationPart1.map.put("func_177332_b", "getSkinType");
		ObfuscationPart1.map.put("func_177333_c", "isSlimSkin");
		ObfuscationPart1.map.put("func_177334_a", "getDefaultSkin");
		ObfuscationPart1.map.put("func_177335_a", "getDefaultSkinLegacy");
		ObfuscationPart1.map.put("func_177338_f", "getSize");
		ObfuscationPart1.map.put("func_177339_a", "clear");
		ObfuscationPart1.map.put("func_177340_e", "getColorOffset");
		ObfuscationPart1.map.put("func_177341_i", "hasPosition");
		ObfuscationPart1.map.put("func_177342_c", "getNormalOffset");
		ObfuscationPart1.map.put("func_177343_g", "getElements");
		ObfuscationPart1.map.put("func_177344_b", "getUvOffsetById");
		ObfuscationPart1.map.put("func_177345_h", "getElementCount");
		ObfuscationPart1.map.put("func_177346_d", "hasColor");
		ObfuscationPart1.map.put("func_177347_a", "hasUvOffset");
		ObfuscationPart1.map.put("func_177348_c", "getElement");
		ObfuscationPart1.map.put("func_177350_b", "hasNormal");
		ObfuscationPart1.map.put("func_177358_a", "drawArrays");
		ObfuscationPart1.map.put("func_177359_a", "bindBuffer");
		ObfuscationPart1.map.put("func_177361_b", "unbindBuffer");
		ObfuscationPart1.map.put("func_177362_c", "deleteGlBuffers");
		ObfuscationPart1.map.put("func_177367_b", "getType");
		ObfuscationPart1.map.put("func_177368_f", "getSize");
		ObfuscationPart1.map.put("func_177369_e", "getIndex");
		ObfuscationPart1.map.put("func_177370_d", "getElementCount");
		ObfuscationPart1.map.put("func_177372_a", "isFirstOrUV");
		ObfuscationPart1.map.put("func_177374_g", "isPositionElement");
		ObfuscationPart1.map.put("func_177375_c", "getUsage");
		ObfuscationPart1.map.put("func_177384_a", "getDisplayName");
		ObfuscationPart1.map.put("func_177395_a", "getSize");
		ObfuscationPart1.map.put("func_177396_b", "getDisplayName");
		ObfuscationPart1.map.put("func_177397_c", "getGlConstant");
		ObfuscationPart1.map.put("func_177409_g", "setHasEntities");
		ObfuscationPart1.map.put("func_177410_o", "isLoaded");
		ObfuscationPart1.map.put("func_177411_a", "getBiome");
		ObfuscationPart1.map.put("func_177412_p", "getWorld");
		ObfuscationPart1.map.put("func_177413_a", "getLightFor");
		ObfuscationPart1.map.put("func_177414_a", "getEntitiesWithinAABBForEntity");
		ObfuscationPart1.map.put("func_177415_c", "setInhabitedTime");
		ObfuscationPart1.map.put("func_177416_w", "getInhabitedTime");
		ObfuscationPart1.map.put("func_177417_c", "markLoaded");
		ObfuscationPart1.map.put("func_177419_t", "isTerrainPopulated");
		ObfuscationPart1.map.put("func_177420_a", "setHeightMap");
		ObfuscationPart1.map.put("func_177421_e", "setLightPopulated");
		ObfuscationPart1.map.put("func_177422_i", "createNewTileEntity");
		ObfuscationPart1.map.put("func_177423_u", "isLightPopulated");
		ObfuscationPart1.map.put("func_177424_a", "getTileEntity");
		ObfuscationPart1.map.put("func_177425_e", "removeTileEntity");
		ObfuscationPart1.map.put("func_177426_a", "addTileEntity");
		ObfuscationPart1.map.put("func_177427_f", "setModified");
		ObfuscationPart1.map.put("func_177429_s", "getEntityLists");
		ObfuscationPart1.map.put("func_177430_a", "getEntitiesOfTypeWithinAABB");
		ObfuscationPart1.map.put("func_177431_a", "setLightFor");
		ObfuscationPart1.map.put("func_177432_b", "setLastSaveTime");
		ObfuscationPart1.map.put("func_177433_f", "getHeight");
		ObfuscationPart1.map.put("func_177434_r", "getTileEntityMap");
		ObfuscationPart1.map.put("func_177435_g", "getBlockState");
		ObfuscationPart1.map.put("func_177436_a", "setBlockState");
		ObfuscationPart1.map.put("func_177437_b", "getBlockLightOpacity");
		ObfuscationPart1.map.put("func_177440_h", "getPrecipitationHeight");
		ObfuscationPart1.map.put("func_177441_y", "setSkylightUpdated");
		ObfuscationPart1.map.put("func_177442_v", "getLowestHeight");
		ObfuscationPart1.map.put("func_177443_a", "getLightSubtracted");
		ObfuscationPart1.map.put("func_177444_d", "canSeeSky");
		ObfuscationPart1.map.put("func_177445_q", "getHeightMap");
		ObfuscationPart1.map.put("func_177446_d", "setTerrainPopulated");
		ObfuscationPart1.map.put("func_177451_a", "getPlayerByUUID");
		ObfuscationPart1.map.put("func_177452_b", "sendMessageToTeamOrAllPlayers");
		ObfuscationPart1.map.put("func_177453_a", "sendMessageToAllTeamMembers");
		ObfuscationPart1.map.put("func_177458_a", "getPossibleCreatures");
		ObfuscationPart1.map.put("func_177461_b", "getBlockStateFor");
		ObfuscationPart1.map.put("func_177478_c", "getNibbleIndex");
		ObfuscationPart1.map.put("func_177479_b", "isLowerNibble");
		ObfuscationPart1.map.put("func_177480_a", "getFromIndex");
		ObfuscationPart1.map.put("func_177481_a", "getData");
		ObfuscationPart1.map.put("func_177482_a", "setIndex");
		ObfuscationPart1.map.put("func_177483_b", "getCoordinateIndex");
		ObfuscationPart1.map.put("func_177484_a", "set");
		ObfuscationPart1.map.put("func_177485_a", "get");
		ObfuscationPart1.map.put("func_177495_o", "isNether");
		ObfuscationPart1.map.put("func_177496_h", "getSpawnCoordinate");
		ObfuscationPart1.map.put("func_177497_p", "getLightBrightnessTable");
		ObfuscationPart1.map.put("func_177499_m", "getBiomeProvider");
		ObfuscationPart1.map.put("func_177500_n", "doesWaterVaporize");
		ObfuscationPart1.map.put("func_177501_r", "createWorldBorder");
		ObfuscationPart1.map.put("func_177507_b", "getTileEntity");
		ObfuscationPart1.map.put("func_177508_d", "getPos");
		ObfuscationPart1.map.put("func_177509_a", "getBlockState");
		ObfuscationPart1.map.put("func_177510_a", "hasState");
		ObfuscationPart1.map.put("func_177516_a", "splitObjectName");
		ObfuscationPart1.map.put("func_177517_b", "parsePathString");
		ObfuscationPart1.map.put("func_177518_c", "getVariant");
		ObfuscationPart1.map.put("func_177520_a", "rotateVertex");
		ObfuscationPart1.map.put("func_177521_b", "combineXY");
		ObfuscationPart1.map.put("func_177523_a", "rotateFace");
		ObfuscationPart1.map.put("func_177524_a", "getModelRotation");
		ObfuscationPart1.map.put("func_177525_a", "matrix");
		ObfuscationPart1.map.put("func_177552_f", "getItemCameraTransforms");
		ObfuscationPart1.map.put("func_177554_e", "getParticleTexture");
		ObfuscationPart1.map.put("func_177555_b", "isAmbientOcclusion");
		ObfuscationPart1.map.put("func_177556_c", "isGui3d");
		ObfuscationPart1.map.put("func_177569_a", "registerVariant");
		ObfuscationPart1.map.put("func_177570_a", "setupModelRegistry");
		ObfuscationPart1.map.put("func_177571_k", "getItemsTextureLocations");
		ObfuscationPart1.map.put("func_177572_j", "loadSprites");
		ObfuscationPart1.map.put("func_177573_e", "getParentPath");
		ObfuscationPart1.map.put("func_177574_i", "loadModels");
		ObfuscationPart1.map.put("func_177575_g", "getVariantsTextureLocations");
		ObfuscationPart1.map.put("func_177576_f", "getParentLocation");
		ObfuscationPart1.map.put("func_177577_b", "loadVariantItemModels");
		ObfuscationPart1.map.put("func_177578_a", "bakeModel");
		ObfuscationPart1.map.put("func_177580_d", "getModelLocation");
		ObfuscationPart1.map.put("func_177581_b", "hasItemModel");
		ObfuscationPart1.map.put("func_177582_d", "makeItemModel");
		ObfuscationPart1.map.put("func_177583_a", "getItemLocation");
		ObfuscationPart1.map.put("func_177585_a", "getTextureLocations");
		ObfuscationPart1.map.put("func_177586_a", "getModelBlockDefinition");
		ObfuscationPart1.map.put("func_177587_c", "isCustomRenderer");
		ObfuscationPart1.map.put("func_177588_f", "bakeBlockModels");
		ObfuscationPart1.map.put("func_177589_a", "makeBakedQuad");
		ObfuscationPart1.map.put("func_177590_d", "loadItemModels");
		ObfuscationPart1.map.put("func_177592_e", "registerVariantNames");
		ObfuscationPart1.map.put("func_177593_l", "makeItemModels");
		ObfuscationPart1.map.put("func_177594_c", "loadModel");
		ObfuscationPart1.map.put("func_177595_c", "loadVariantModels");
		ObfuscationPart1.map.put("func_177596_a", "getVariantNames");
		ObfuscationPart1.map.put("func_177597_h", "loadModelsCheck");
		ObfuscationPart1.map.put("func_177619_a", "getValidStates");
		ObfuscationPart1.map.put("func_177620_e", "getAllowedValues");
		ObfuscationPart1.map.put("func_177621_b", "getBaseState");
		ObfuscationPart1.map.put("func_177622_c", "getBlock");
		ObfuscationPart1.map.put("func_177623_d", "getProperties");
		ObfuscationPart1.map.put("func_177637_a", "where");
		ObfuscationPart1.map.put("func_177638_a", "forBlock");
		ObfuscationPart1.map.put("func_177642_a", "forBlock");
		ObfuscationPart1.map.put("func_177645_b", "makeBakedModel");
		ObfuscationPart1.map.put("func_177646_a", "setTexture");
		ObfuscationPart1.map.put("func_177648_a", "addGeneralQuad");
		ObfuscationPart1.map.put("func_177650_a", "addFaceQuad");
		ObfuscationPart1.map.put("func_177657_d", "checkMissingPredicates");
		ObfuscationPart1.map.put("func_177658_c", "makePredicateArray");
		ObfuscationPart1.map.put("func_177659_a", "aisle");
		ObfuscationPart1.map.put("func_177660_a", "start");
		ObfuscationPart1.map.put("func_177661_b", "build");
		ObfuscationPart1.map.put("func_177662_a", "where");
		ObfuscationPart1.map.put("func_177668_c", "getUp");
		ObfuscationPart1.map.put("func_177669_b", "getForwards");
		ObfuscationPart1.map.put("func_177670_a", "translateOffset");
		ObfuscationPart1.map.put("func_177675_b", "first");
		ObfuscationPart1.map.put("func_177676_a", "build");
		ObfuscationPart1.map.put("func_177677_a", "add");
		ObfuscationPart1.map.put("func_177681_a", "match");
		ObfuscationPart1.map.put("func_177682_a", "checkPatternAt");
		ObfuscationPart1.map.put("func_177683_a", "translateOffset");
		ObfuscationPart1.map.put("func_177684_c", "getPalmLength");
		ObfuscationPart1.map.put("func_177685_b", "getThumbLength");
		ObfuscationPart1.map.put("func_177690_b", "onWarningDistanceChanged");
		ObfuscationPart1.map.put("func_177691_a", "onWarningTimeChanged");
		ObfuscationPart1.map.put("func_177692_a", "onTransitionStarted");
		ObfuscationPart1.map.put("func_177693_a", "onCenterChanged");
		ObfuscationPart1.map.put("func_177694_a", "onSizeChanged");
		ObfuscationPart1.map.put("func_177695_c", "onDamageBufferChanged");
		ObfuscationPart1.map.put("func_177696_b", "onDamageAmountChanged");
		ObfuscationPart1.map.put("func_177699_b", "getValueClass");
		ObfuscationPart1.map.put("func_177700_c", "getAllowedValues");
		ObfuscationPart1.map.put("func_177701_a", "getName");
		ObfuscationPart1.map.put("func_177702_a", "getName");
		ObfuscationPart1.map.put("func_177706_a", "create");
		ObfuscationPart1.map.put("func_177707_a", "create");
		ObfuscationPart1.map.put("func_177708_a", "create");
		ObfuscationPart1.map.put("func_177709_a", "create");
		ObfuscationPart1.map.put("func_177712_a", "create");
		ObfuscationPart1.map.put("func_177713_a", "create");
		ObfuscationPart1.map.put("func_177714_a", "create");
		ObfuscationPart1.map.put("func_177716_a", "create");
		ObfuscationPart1.map.put("func_177719_a", "create");
		ObfuscationPart1.map.put("func_177721_g", "getCenterZ");
		ObfuscationPart1.map.put("func_177722_l", "getSize");
		ObfuscationPart1.map.put("func_177723_b", "setWarningTime");
		ObfuscationPart1.map.put("func_177724_b", "setDamageBuffer");
		ObfuscationPart1.map.put("func_177725_a", "setSize");
		ObfuscationPart1.map.put("func_177726_b", "minX");
		ObfuscationPart1.map.put("func_177727_n", "getDamageAmount");
		ObfuscationPart1.map.put("func_177728_d", "maxX");
		ObfuscationPart1.map.put("func_177729_b", "getClosestDistance");
		ObfuscationPart1.map.put("func_177730_a", "contains");
		ObfuscationPart1.map.put("func_177731_f", "getCenterX");
		ObfuscationPart1.map.put("func_177732_i", "getTimeUntilTarget");
		ObfuscationPart1.map.put("func_177733_e", "maxZ");
		ObfuscationPart1.map.put("func_177734_a", "getStatus");
		ObfuscationPart1.map.put("func_177735_k", "getListeners");
		ObfuscationPart1.map.put("func_177736_c", "minZ");
		ObfuscationPart1.map.put("func_177737_a", "addListener");
		ObfuscationPart1.map.put("func_177738_a", "setTransition");
		ObfuscationPart1.map.put("func_177739_c", "setCenter");
		ObfuscationPart1.map.put("func_177740_p", "getWarningTime");
		ObfuscationPart1.map.put("func_177741_h", "getDiameter");
		ObfuscationPart1.map.put("func_177742_m", "getDamageBuffer");
		ObfuscationPart1.map.put("func_177743_a", "contains");
		ObfuscationPart1.map.put("func_177744_c", "setDamageAmount");
		ObfuscationPart1.map.put("func_177745_a", "getClosestDistance");
		ObfuscationPart1.map.put("func_177746_a", "contains");
		ObfuscationPart1.map.put("func_177747_c", "setWarningDistance");
		ObfuscationPart1.map.put("func_177748_q", "getWarningDistance");
		ObfuscationPart1.map.put("func_177749_o", "getResizeSpeed");
		ObfuscationPart1.map.put("func_177750_a", "setTransition");
		ObfuscationPart1.map.put("func_177751_j", "getTargetSize");
		ObfuscationPart1.map.put("func_177766_a", "getColor");
		ObfuscationPart1.map.put("func_177774_c", "getNameForObject");
		ObfuscationPart1.map.put("func_177775_a", "register");
		ObfuscationPart1.map.put("func_177776_a", "validateKey");
		ObfuscationPart1.map.put("func_177855_a", "setBlockState");
		ObfuscationPart1.map.put("func_177856_a", "getBlockState");
		ObfuscationPart1.map.put("func_177863_a", "setDefaults");
		ObfuscationPart1.map.put("func_177864_b", "build");
		ObfuscationPart1.map.put("func_177865_a", "jsonToFactory");
		ObfuscationPart1.map.put("func_177951_i", "distanceSq");
		ObfuscationPart1.map.put("func_177952_p", "getZ");
		ObfuscationPart1.map.put("func_177954_c", "distanceSq");
		ObfuscationPart1.map.put("func_177955_d", "crossProduct");
		ObfuscationPart1.map.put("func_177956_o", "getY");
		ObfuscationPart1.map.put("func_177957_d", "distanceSqToCenter");
		ObfuscationPart1.map.put("func_177958_n", "getX");
		ObfuscationPart1.map.put("func_177963_a", "add");
		ObfuscationPart1.map.put("func_177964_d", "north");
		ObfuscationPart1.map.put("func_177965_g", "east");
		ObfuscationPart1.map.put("func_177967_a", "offset");
		ObfuscationPart1.map.put("func_177968_d", "south");
		ObfuscationPart1.map.put("func_177969_a", "fromLong");
		ObfuscationPart1.map.put("func_177970_e", "south");
		ObfuscationPart1.map.put("func_177971_a", "add");
		ObfuscationPart1.map.put("func_177972_a", "offset");
		ObfuscationPart1.map.put("func_177973_b", "subtract");
		ObfuscationPart1.map.put("func_177974_f", "east");
		ObfuscationPart1.map.put("func_177975_b", "getAllInBoxMutable");
		ObfuscationPart1.map.put("func_177976_e", "west");
		ObfuscationPart1.map.put("func_177977_b", "down");
		ObfuscationPart1.map.put("func_177978_c", "north");
		ObfuscationPart1.map.put("func_177979_c", "down");
		ObfuscationPart1.map.put("func_177980_a", "getAllInBox");
		ObfuscationPart1.map.put("func_177981_b", "up");
		ObfuscationPart1.map.put("func_177982_a", "add");
		ObfuscationPart1.map.put("func_177984_a", "up");
		ObfuscationPart1.map.put("func_177985_f", "west");
		ObfuscationPart1.map.put("func_177986_g", "toLong");
		ObfuscationPart1.map.put("func_177999_q", "getBranchBase");
		ObfuscationPart1.map.put("func_178001_a", "renderChunkLayer");
		ObfuscationPart1.map.put("func_178002_a", "addRenderChunk");
		ObfuscationPart1.map.put("func_178003_a", "preRenderChunk");
		ObfuscationPart1.map.put("func_178004_a", "initialize");
		ObfuscationPart1.map.put("func_178010_a", "setupArrayPointers");
		ObfuscationPart1.map.put("func_178012_a", "drawTextureAt");
		ObfuscationPart1.map.put("func_178013_b", "canJoin");
		ObfuscationPart1.map.put("func_178016_b", "releaseComponent");
		ObfuscationPart1.map.put("func_178018_a", "clickTextField");
		ObfuscationPart1.map.put("func_178019_b", "releaseButton");
		ObfuscationPart1.map.put("func_178021_b", "getComponent2");
		ObfuscationPart1.map.put("func_178022_a", "getComponent1");
		ObfuscationPart1.map.put("func_178023_a", "clickButton");
		ObfuscationPart1.map.put("func_178025_a", "renderLabel");
		ObfuscationPart1.map.put("func_178026_a", "clickComponent");
		ObfuscationPart1.map.put("func_178027_a", "renderTextField");
		ObfuscationPart1.map.put("func_178038_a", "framebufferRenderExt");
		ObfuscationPart1.map.put("func_178039_p", "handleMouseInput");
		ObfuscationPart1.map.put("func_178042_f", "mouseY");
		ObfuscationPart1.map.put("func_178043_a", "renderSelected");
		ObfuscationPart1.map.put("func_178044_e", "width");
		ObfuscationPart1.map.put("func_178045_g", "mouseX");
		ObfuscationPart1.map.put("func_178047_f", "getMouseY");
		ObfuscationPart1.map.put("func_178048_e", "getWidth");
		ObfuscationPart1.map.put("func_178049_g", "getMouseX");
		ObfuscationPart1.map.put("func_178051_a", "blitIcon");
		ObfuscationPart1.map.put("func_178054_a", "renderIcon");
		ObfuscationPart1.map.put("func_178055_t", "populateEntries");
		ObfuscationPart1.map.put("func_178056_g", "getFocusedControl");
		ObfuscationPart1.map.put("func_178057_f", "getPageCount");
		ObfuscationPart1.map.put("func_178058_a", "createEntry");
		ObfuscationPart1.map.put("func_178059_e", "getPage");
		ObfuscationPart1.map.put("func_178060_e", "markVisibility");
		ObfuscationPart1.map.put("func_178061_c", "getComponent");
		ObfuscationPart1.map.put("func_178062_a", "onKeyPressed");
		ObfuscationPart1.map.put("func_178063_a", "createLabel");
		ObfuscationPart1.map.put("func_178064_i", "nextPage");
		ObfuscationPart1.map.put("func_178065_a", "createButton");
		ObfuscationPart1.map.put("func_178066_a", "setComponentVisibility");
		ObfuscationPart1.map.put("func_178067_a", "createSlider");
		ObfuscationPart1.map.put("func_178068_a", "createTextField");
		ObfuscationPart1.map.put("func_178069_s", "populateComponents");
		ObfuscationPart1.map.put("func_178071_h", "previousPage");
		ObfuscationPart1.map.put("func_178080_a", "register");
		ObfuscationPart1.map.put("func_178081_c", "getIndex");
		ObfuscationPart1.map.put("func_178082_a", "getParticleIcon");
		ObfuscationPart1.map.put("func_178083_a", "getModelManager");
		ObfuscationPart1.map.put("func_178084_b", "getMetadata");
		ObfuscationPart1.map.put("func_178085_b", "rebuildCache");
		ObfuscationPart1.map.put("func_178086_a", "register");
		ObfuscationPart1.map.put("func_178087_a", "getParticleIcon");
		ObfuscationPart1.map.put("func_178088_b", "getItemModel");
		ObfuscationPart1.map.put("func_178089_a", "getItemModel");
		ObfuscationPart1.map.put("func_178099_a", "renderItem");
		ObfuscationPart1.map.put("func_178100_c", "getMapAngleFromPitch");
		ObfuscationPart1.map.put("func_178101_a", "rotateArroundXAndY");
		ObfuscationPart1.map.put("func_178108_a", "renderSuffocationOverlay");
		ObfuscationPart1.map.put("func_178113_a", "getModelLocation");
		ObfuscationPart1.map.put("func_178119_d", "registerAllBlocks");
		ObfuscationPart1.map.put("func_178120_a", "getBlockStateMapper");
		ObfuscationPart1.map.put("func_178121_a", "registerBlockWithStateMapper");
		ObfuscationPart1.map.put("func_178122_a", "getTexture");
		ObfuscationPart1.map.put("func_178123_a", "registerBuiltInBlocks");
		ObfuscationPart1.map.put("func_178124_c", "reloadModels");
		ObfuscationPart1.map.put("func_178125_b", "getModelForState");
		ObfuscationPart1.map.put("func_178126_b", "getModelManager");
		ObfuscationPart1.map.put("func_178130_a", "putStateModelLocations");
		ObfuscationPart1.map.put("func_178131_a", "getPropertyString");
		ObfuscationPart1.map.put("func_178132_a", "getModelResourceLocation");
		ObfuscationPart1.map.put("func_178144_a", "calcRedstone");
		ObfuscationPart1.map.put("func_178147_e", "getLapisAmount");
		ObfuscationPart1.map.put("func_178148_a", "getEnchantmentList");
		ObfuscationPart1.map.put("func_178157_a", "getBaseCoordinate");
		ObfuscationPart1.map.put("func_178158_a", "createRenderChunks");
		ObfuscationPart1.map.put("func_178159_a", "setCountChunksXYZ");
		ObfuscationPart1.map.put("func_178160_a", "deleteGlResources");
		ObfuscationPart1.map.put("func_178161_a", "getRenderChunk");
		ObfuscationPart1.map.put("func_178163_a", "updateChunkPositions");
		ObfuscationPart1.map.put("func_178170_b", "getItemStackLimit");
		ObfuscationPart1.map.put("func_178171_c", "getSlotTexture");
		ObfuscationPart1.map.put("func_178173_c_", "isBucket");
		ObfuscationPart1.map.put("func_178175_a", "renderChestBrightness");
		ObfuscationPart1.map.put("func_178176_a", "getInstance");
		ObfuscationPart1.map.put("func_178178_a", "setVertexBuffer");
		ObfuscationPart1.map.put("func_178180_c", "getBuffer");
		ObfuscationPart1.map.put("func_178181_a", "getInstance");
		ObfuscationPart1.map.put("func_178184_a", "getVertexTranslations");
		ObfuscationPart1.map.put("func_178203_a", "getVertexBrightness");
		ObfuscationPart1.map.put("func_178209_a", "getVertexData");
		ObfuscationPart1.map.put("func_178210_d", "getFace");
		ObfuscationPart1.map.put("func_178211_c", "getTintIndex");
		ObfuscationPart1.map.put("func_178212_b", "hasTintIndex");
		ObfuscationPart1.map.put("func_178217_e", "remapQuad");
		ObfuscationPart1.map.put("func_178235_a", "setDefaultUvs");
		ObfuscationPart1.map.put("func_178236_a", "getFaceUvs");
		ObfuscationPart1.map.put("func_178247_d", "parsePositionTo");
		ObfuscationPart1.map.put("func_178248_a", "parseEnumFacing");
		ObfuscationPart1.map.put("func_178249_e", "parsePositionFrom");
		ObfuscationPart1.map.put("func_178250_a", "parseFacesCheck");
		ObfuscationPart1.map.put("func_178251_a", "parsePosition");
		ObfuscationPart1.map.put("func_178252_c", "parseAxis");
		ObfuscationPart1.map.put("func_178253_b", "parseFaces");
		ObfuscationPart1.map.put("func_178255_b", "parseAngle");
		ObfuscationPart1.map.put("func_178256_a", "parseRotation");
		ObfuscationPart1.map.put("func_178262_a", "renderModelBrightnessColor");
		ObfuscationPart1.map.put("func_178264_a", "renderModelBrightnessColorQuads");
		ObfuscationPart1.map.put("func_178266_a", "renderModelBrightness");
		ObfuscationPart1.map.put("func_178267_a", "renderModel");
		ObfuscationPart1.map.put("func_178268_a", "initAtlasSprites");
		ObfuscationPart1.map.put("func_178269_a", "getFluidHeight");
		ObfuscationPart1.map.put("func_178270_a", "renderFluid");
		ObfuscationPart1.map.put("func_178273_a", "getNeighbourInfo");
		ObfuscationPart1.map.put("func_178291_a", "parseRotation");
		ObfuscationPart1.map.put("func_178292_b", "parseUV");
		ObfuscationPart1.map.put("func_178294_a", "deserialize");
		ObfuscationPart1.map.put("func_178295_k", "hasParent");
		ObfuscationPart1.map.put("func_178298_a", "getElements");
		ObfuscationPart1.map.put("func_178299_a", "getParentFromMap");
		ObfuscationPart1.map.put("func_178300_b", "isTexturePresent");
		ObfuscationPart1.map.put("func_178302_a", "resolveTextureName");
		ObfuscationPart1.map.put("func_178303_d", "isResolved");
		ObfuscationPart1.map.put("func_178304_d", "startsWithHash");
		ObfuscationPart1.map.put("func_178305_e", "getParentLocation");
		ObfuscationPart1.map.put("func_178307_a", "deserialize");
		ObfuscationPart1.map.put("func_178308_c", "resolveTextureName");
		ObfuscationPart1.map.put("func_178309_b", "isAmbientOcclusion");
		ObfuscationPart1.map.put("func_178310_f", "getRootModel");
		ObfuscationPart1.map.put("func_178311_c", "isGui3d");
		ObfuscationPart1.map.put("func_178312_b", "checkModelHierarchy");
		ObfuscationPart1.map.put("func_178325_a", "getModelElements");
		ObfuscationPart1.map.put("func_178326_c", "getParent");
		ObfuscationPart1.map.put("func_178328_a", "getAmbientOcclusionEnabled");
		ObfuscationPart1.map.put("func_178329_b", "getTextures");
		ObfuscationPart1.map.put("func_178331_a", "parseFromReader");
		ObfuscationPart1.map.put("func_178337_a", "parseTintIndex");
		ObfuscationPart1.map.put("func_178339_c", "parseCullFace");
		ObfuscationPart1.map.put("func_178340_b", "parseTexture");
		ObfuscationPart1.map.put("func_178345_c", "getVertexRotatedRev");
		ObfuscationPart1.map.put("func_178346_b", "getVertexV");
		ObfuscationPart1.map.put("func_178347_d", "getVertexRotated");
		ObfuscationPart1.map.put("func_178348_a", "getVertexU");
		ObfuscationPart1.map.put("func_178349_a", "setUvs");
		ObfuscationPart1.map.put("func_178358_a", "parseVector3f");
		ObfuscationPart1.map.put("func_178367_a", "getFacing");
		ObfuscationPart1.map.put("func_178369_d", "isHorizontal");
		ObfuscationPart1.map.put("func_178371_c", "getYOffset");
		ObfuscationPart1.map.put("func_178372_b", "getXOffset");
		ObfuscationPart1.map.put("func_178381_d", "getAnchor");
		ObfuscationPart1.map.put("func_178382_a", "expand");
		ObfuscationPart1.map.put("func_178383_a", "getFacing");
		ObfuscationPart1.map.put("func_178384_c", "getMax");
		ObfuscationPart1.map.put("func_178385_b", "getMin");
		ObfuscationPart1.map.put("func_178391_a", "isTransparent");
		ObfuscationPart1.map.put("func_178392_a", "makeItemModel");
		ObfuscationPart1.map.put("func_178393_a", "getSpans");
		ObfuscationPart1.map.put("func_178394_a", "getBlockParts");
		ObfuscationPart1.map.put("func_178395_a", "createOrExpandSpan");
		ObfuscationPart1.map.put("func_178396_a", "checkTransition");
		ObfuscationPart1.map.put("func_178397_a", "getBlockParts");
		ObfuscationPart1.map.put("func_178403_a", "getPositionsDiv16");
		ObfuscationPart1.map.put("func_178404_a", "storeVertexData");
		ObfuscationPart1.map.put("func_178406_a", "rotateScale");
		ObfuscationPart1.map.put("func_178407_a", "rotatePart");
		ObfuscationPart1.map.put("func_178408_a", "applyFacing");
		ObfuscationPart1.map.put("func_178410_a", "getFacingFromVertexData");
		ObfuscationPart1.map.put("func_178411_a", "getMatrixIdentity");
		ObfuscationPart1.map.put("func_178412_b", "getFaceBrightness");
		ObfuscationPart1.map.put("func_178413_a", "getFaceShadeColor");
		ObfuscationPart1.map.put("func_178414_a", "makeBakedQuad");
		ObfuscationPart1.map.put("func_178439_a", "withSuffix");
		ObfuscationPart1.map.put("func_178440_a", "withName");
		ObfuscationPart1.map.put("func_178441_a", "build");
		ObfuscationPart1.map.put("func_178442_a", "ignore");
		ObfuscationPart1.map.put("func_178446_a", "putAllStateModelLocations");
		ObfuscationPart1.map.put("func_178447_a", "registerBlockStateMapper");
		ObfuscationPart1.map.put("func_178448_a", "registerBuiltInBlocks");
		ObfuscationPart1.map.put("func_178459_a", "getWorld");
		ObfuscationPart1.map.put("func_178463_a", "getBannerResourceLocation");
		ObfuscationPart1.map.put("func_178473_b", "freeRenderBuilder");
		ObfuscationPart1.map.put("func_178474_a", "processTask");
		ObfuscationPart1.map.put("func_178475_b", "getRegionRenderCacheBuilder");
		ObfuscationPart1.map.put("func_178485_b", "getTileEntities");
		ObfuscationPart1.map.put("func_178486_a", "setLayerUsed");
		ObfuscationPart1.map.put("func_178487_c", "getState");
		ObfuscationPart1.map.put("func_178488_a", "setVisibility");
		ObfuscationPart1.map.put("func_178489_a", "isEmpty");
		ObfuscationPart1.map.put("func_178490_a", "addTileEntity");
		ObfuscationPart1.map.put("func_178491_b", "isLayerEmpty");
		ObfuscationPart1.map.put("func_178492_d", "isLayerStarted");
		ObfuscationPart1.map.put("func_178493_c", "setLayerStarted");
		ObfuscationPart1.map.put("func_178494_a", "setState");
		ObfuscationPart1.map.put("func_178495_a", "isVisible");
		ObfuscationPart1.map.put("func_178504_a", "getDebugInfo");
		ObfuscationPart1.map.put("func_178505_b", "updateChunkNow");
		ObfuscationPart1.map.put("func_178506_a", "uploadVertexBuffer");
		ObfuscationPart1.map.put("func_178507_a", "updateChunkLater");
		ObfuscationPart1.map.put("func_178509_c", "updateTransparencyLater");
		ObfuscationPart1.map.put("func_178510_a", "uploadDisplayList");
		ObfuscationPart1.map.put("func_178511_d", "getNextChunkUpdate");
		ObfuscationPart1.map.put("func_178512_a", "freeRenderBuilder");
		ObfuscationPart1.map.put("func_178513_e", "clearChunkUpdates");
		ObfuscationPart1.map.put("func_178514_b", "stopChunkUpdates");
		ObfuscationPart1.map.put("func_178515_c", "allocateRenderBuilder");
		ObfuscationPart1.map.put("func_178516_a", "runChunkUploads");
		ObfuscationPart1.map.put("func_178535_a", "setStatus");
		ObfuscationPart1.map.put("func_178536_b", "getRenderChunk");
		ObfuscationPart1.map.put("func_178537_h", "isFinished");
		ObfuscationPart1.map.put("func_178538_g", "getType");
		ObfuscationPart1.map.put("func_178539_a", "addFinishRunnable");
		ObfuscationPart1.map.put("func_178540_f", "getLock");
		ObfuscationPart1.map.put("func_178541_a", "setRegionRenderCacheBuilder");
		ObfuscationPart1.map.put("func_178542_e", "finish");
		ObfuscationPart1.map.put("func_178543_a", "setCompiledChunk");
		ObfuscationPart1.map.put("func_178544_c", "getCompiledChunk");
		ObfuscationPart1.map.put("func_178545_d", "getRegionRenderCacheBuilder");
		ObfuscationPart1.map.put("func_178546_a", "getStatus");
		ObfuscationPart1.map.put("func_178565_b", "getVertexBufferByLayer");
		ObfuscationPart1.map.put("func_178566_a", "deleteGlResources");
		ObfuscationPart1.map.put("func_178567_n", "initModelviewMatrix");
		ObfuscationPart1.map.put("func_178568_j", "getPosition");
		ObfuscationPart1.map.put("func_178569_m", "needsUpdate");
		ObfuscationPart1.map.put("func_178570_a", "resortTransparency");
		ObfuscationPart1.map.put("func_178571_g", "getCompiledChunk");
		ObfuscationPart1.map.put("func_178572_f", "multModelviewMatrix");
		ObfuscationPart1.map.put("func_178573_a", "preRenderBlocks");
		ObfuscationPart1.map.put("func_178574_d", "makeCompileTaskChunk");
		ObfuscationPart1.map.put("func_178575_a", "setNeedsUpdate");
		ObfuscationPart1.map.put("func_178577_a", "setFrameIndex");
		ObfuscationPart1.map.put("func_178578_b", "finishCompileTask");
		ObfuscationPart1.map.put("func_178579_c", "getLockCompileTask");
		ObfuscationPart1.map.put("func_178580_a", "setCompiledChunk");
		ObfuscationPart1.map.put("func_178581_b", "rebuildChunk");
		ObfuscationPart1.map.put("func_178582_e", "makeCompileTaskTransparency");
		ObfuscationPart1.map.put("func_178584_a", "postRenderBlocks");
		ObfuscationPart1.map.put("func_178585_h", "stopCompileTask");
		ObfuscationPart1.map.put("func_178600_a", "getDisplayList");
		ObfuscationPart1.map.put("func_178603_a", "getNeighborIndexAtFace");
		ObfuscationPart1.map.put("func_178604_a", "floodFill");
		ObfuscationPart1.map.put("func_178605_a", "getIndex");
		ObfuscationPart1.map.put("func_178606_a", "setOpaqueCube");
		ObfuscationPart1.map.put("func_178607_a", "computeVisibility");
		ObfuscationPart1.map.put("func_178608_c", "getIndex");
		ObfuscationPart1.map.put("func_178609_b", "getVisibleFacings");
		ObfuscationPart1.map.put("func_178610_a", "addEdges");
		ObfuscationPart1.map.put("func_178618_a", "setAllVisible");
		ObfuscationPart1.map.put("func_178619_a", "setVisible");
		ObfuscationPart1.map.put("func_178620_a", "setManyVisible");
		ObfuscationPart1.map.put("func_178621_a", "isVisible");
		ObfuscationPart1.map.put("func_178624_a", "dot");
		ObfuscationPart1.map.put("func_178627_a", "isRenderShadow");
		ObfuscationPart1.map.put("func_178628_a", "setRenderPosition");
		ObfuscationPart1.map.put("func_178629_b", "setDebugBoundingBox");
		ObfuscationPart1.map.put("func_178631_a", "setPlayerViewY");
		ObfuscationPart1.map.put("func_178632_c", "setRenderOutlines");
		ObfuscationPart1.map.put("func_178633_a", "setRenderShadow");
		ObfuscationPart1.map.put("func_178634_b", "isDebugBoundingBox");
		ObfuscationPart1.map.put("func_178635_a", "shouldRender");
		ObfuscationPart1.map.put("func_178641_d", "exit");
		ObfuscationPart1.map.put("func_178642_a", "getItems");
		ObfuscationPart1.map.put("func_178643_a", "getItem");
		ObfuscationPart1.map.put("func_178644_b", "selectSlot");
		ObfuscationPart1.map.put("func_178645_b", "getSelectedItem");
		ObfuscationPart1.map.put("func_178646_f", "getCurrentPage");
		ObfuscationPart1.map.put("func_178647_a", "selectCategory");
		ObfuscationPart1.map.put("func_178648_e", "getSelectedSlot");
		ObfuscationPart1.map.put("func_178650_c", "getSelectedCategory");
		ObfuscationPart1.map.put("func_178661_a", "selectItem");
		ObfuscationPart1.map.put("func_178662_A_", "isEnabled");
		ObfuscationPart1.map.put("func_178663_a", "renderIcon");
		ObfuscationPart1.map.put("func_178664_z_", "getSpectatorName");
		ObfuscationPart1.map.put("func_178669_a", "getItems");
		ObfuscationPart1.map.put("func_178670_b", "getPrompt");
		ObfuscationPart1.map.put("func_178680_a", "getObject");
		ObfuscationPart1.map.put("func_178681_b", "getSelectedSlot");
		ObfuscationPart1.map.put("func_178685_a", "copyModelAngles");
		ObfuscationPart1.map.put("func_178686_a", "setModelAttributes");
		ObfuscationPart1.map.put("func_178687_a", "renderBanner");
		ObfuscationPart1.map.put("func_178691_a", "setRotationOffset");
		ObfuscationPart1.map.put("func_178719_a", "setVisible");
		ObfuscationPart1.map.put("func_178727_b", "renderDeadmau5Head");
		ObfuscationPart1.map.put("func_178728_c", "renderCape");
		ObfuscationPart1.map.put("func_178765_a", "draw");
		ObfuscationPart1.map.put("func_178766_e", "getRenderType");
		ObfuscationPart1.map.put("func_178767_a", "setRenderType");
		ObfuscationPart1.map.put("func_178769_a", "addBox");
		ObfuscationPart1.map.put("func_178770_i", "getNameTagVisibility");
		ObfuscationPart1.map.put("func_178771_j", "getDeathMessageVisibility");
		ObfuscationPart1.map.put("func_178772_a", "setNameTagVisibility");
		ObfuscationPart1.map.put("func_178773_b", "setDeathMessageVisibility");
		ObfuscationPart1.map.put("func_178774_a", "setColor");
		ObfuscationPart1.map.put("func_178775_l", "getColor");
		ObfuscationPart1.map.put("func_178779_a", "getThreadedIOInstance");
		ObfuscationPart1.map.put("func_178780_a", "render");
		ObfuscationPart1.map.put("func_178782_a", "getBlockPos");
		ObfuscationPart1.map.put("func_178785_b", "rotateYaw");
		ObfuscationPart1.map.put("func_178786_a", "subtract");
		ObfuscationPart1.map.put("func_178787_e", "add");
		ObfuscationPart1.map.put("func_178788_d", "subtract");
		ObfuscationPart1.map.put("func_178789_a", "rotatePitch");
		ObfuscationPart1.map.put("func_178790_c", "getRenderType");
		ObfuscationPart1.map.put("func_178795_a", "getByName");
		ObfuscationPart1.map.put("func_178796_a", "getRenderType");
		ObfuscationPart1.map.put("func_178803_d", "getRotationZ");
		ObfuscationPart1.map.put("func_178805_e", "getRotationYZ");
		ObfuscationPart1.map.put("func_178806_a", "projectViewFromEntity");
		ObfuscationPart1.map.put("func_178807_f", "getRotationXY");
		ObfuscationPart1.map.put("func_178808_b", "getRotationX");
		ObfuscationPart1.map.put("func_178809_c", "getRotationXZ");
		ObfuscationPart1.map.put("func_178815_a", "setLocked");
		ObfuscationPart1.map.put("func_178816_g", "isLocked");
		ObfuscationPart1.map.put("func_178819_b", "entityHasObjective");
		ObfuscationPart1.map.put("func_178820_a", "broadcastScoreUpdate");
		ObfuscationPart1.map.put("func_178821_h", "getDisplaySlotStrings");
		ObfuscationPart1.map.put("func_178822_d", "removeObjectiveFromEntity");
		ObfuscationPart1.map.put("func_178824_a", "getByName");
		ObfuscationPart1.map.put("func_178825_a", "getNames");
		ObfuscationPart1.map.put("func_178835_l", "getLastHealth");
		ObfuscationPart1.map.put("func_178836_b", "setLastHealth");
		ObfuscationPart1.map.put("func_178837_g", "getLocationSkin");
		ObfuscationPart1.map.put("func_178838_a", "setResponseTime");
		ObfuscationPart1.map.put("func_178839_a", "setGameType");
		ObfuscationPart1.map.put("func_178841_j", "loadPlayerTextures");
		ObfuscationPart1.map.put("func_178843_c", "setRenderVisibilityId");
		ObfuscationPart1.map.put("func_178844_b", "setHealthBlinkTime");
		ObfuscationPart1.map.put("func_178845_a", "getGameProfile");
		ObfuscationPart1.map.put("func_178846_a", "setLastHealthTime");
		ObfuscationPart1.map.put("func_178847_n", "getLastHealthTime");
		ObfuscationPart1.map.put("func_178848_b", "getGameType");
		ObfuscationPart1.map.put("func_178850_i", "getPlayerTeam");
		ObfuscationPart1.map.put("func_178851_f", "getSkinType");
		ObfuscationPart1.map.put("func_178853_c", "getResponseTime");
		ObfuscationPart1.map.put("func_178854_k", "getDisplayName");
		ObfuscationPart1.map.put("func_178855_p", "getRenderVisibilityId");
		ObfuscationPart1.map.put("func_178856_e", "hasLocationSkin");
		ObfuscationPart1.map.put("func_178857_c", "setDisplayHealth");
		ObfuscationPart1.map.put("func_178858_o", "getHealthBlinkTime");
		ObfuscationPart1.map.put("func_178859_a", "setDisplayName");
		ObfuscationPart1.map.put("func_178860_m", "getDisplayHealth");
		ObfuscationPart1.map.put("func_178861_h", "getLocationCape");
		ObfuscationPart1.map.put("func_178874_a", "deleteDisplayLists");
		ObfuscationPart1.map.put("func_178876_d", "getModelParts");
		ObfuscationPart1.map.put("func_178877_a", "switchModelPartEnabled");
		ObfuscationPart1.map.put("func_178878_a", "setModelPartEnabled");
		ObfuscationPart1.map.put("func_178887_k", "isSpectatorMode");
		ObfuscationPart1.map.put("func_178889_l", "getCurrentGameType");
		ObfuscationPart1.map.put("func_178891_a", "clickBlockCreative");
		ObfuscationPart1.map.put("func_178893_a", "isHittingPosition");
		ObfuscationPart1.map.put("func_178902_a", "createParticle");
		ObfuscationPart1.map.put("func_178908_a", "splitText");
		ObfuscationPart1.map.put("func_178909_a", "removeTextColorsIfConfigured");
		ObfuscationPart1.map.put("func_178910_a", "getX");
		ObfuscationPart1.map.put("func_178912_b", "getY");
		ObfuscationPart1.map.put("func_178922_a", "updateEffectLayer");
		ObfuscationPart1.map.put("func_178923_d", "tickParticle");
		ObfuscationPart1.map.put("func_178926_a", "emitParticleAtEntity");
		ObfuscationPart1.map.put("func_178927_a", "spawnEffectParticle");
		ObfuscationPart1.map.put("func_178929_a", "registerParticle");
		ObfuscationPart1.map.put("func_178930_c", "registerVanillaParticles");
		ObfuscationPart1.map.put("func_178934_d", "shouldStartVisible");
		ObfuscationPart1.map.put("func_178935_b", "getId");
		ObfuscationPart1.map.put("func_178936_c", "getCaption");
		ObfuscationPart1.map.put("func_178940_a", "getInitialValue");
		ObfuscationPart1.map.put("func_178942_g", "getInitalValue");
		ObfuscationPart1.map.put("func_178943_e", "getMinValue");
		ObfuscationPart1.map.put("func_178944_f", "getMaxValue");
		ObfuscationPart1.map.put("func_178945_a", "getFormatter");
		ObfuscationPart1.map.put("func_178950_a", "getFilter");
		ObfuscationPart1.map.put("func_178962_a", "putBrightness4");
		ObfuscationPart1.map.put("func_178965_a", "reset");
		ObfuscationPart1.map.put("func_178966_f", "getByteBuffer");
		ObfuscationPart1.map.put("func_178968_d", "putColor4");
		ObfuscationPart1.map.put("func_178969_c", "setTranslation");
		ObfuscationPart1.map.put("func_178972_a", "putColorRGBA");
		ObfuscationPart1.map.put("func_178973_g", "getVertexFormat");
		ObfuscationPart1.map.put("func_178975_e", "putNormal");
		ObfuscationPart1.map.put("func_178977_d", "finishDrawing");
		ObfuscationPart1.map.put("func_178978_a", "putColorMultiplier");
		ObfuscationPart1.map.put("func_178979_i", "getDrawMode");
		ObfuscationPart1.map.put("func_178981_a", "addVertexData");
		ObfuscationPart1.map.put("func_178987_a", "putPosition");
		ObfuscationPart1.map.put("func_178989_h", "getVertexCount");
		ObfuscationPart1.map.put("func_178990_f", "putColorRGB_F4");
		ObfuscationPart1.map.put("func_178993_a", "setVertexState");
		ObfuscationPart1.map.put("func_178994_b", "putColorRGB_F");
		ObfuscationPart1.map.put("func_179013_a", "getRawBuffer");
		ObfuscationPart1.map.put("func_179014_c", "getVertexCount");
		ObfuscationPart1.map.put("func_179016_d", "getVertexFormat");
		ObfuscationPart1.map.put("func_179022_a", "renderByItem");
		ObfuscationPart1.map.put("func_179025_a", "getVertexInformation");
		ObfuscationPart1.map.put("func_179027_a", "getFacing");
		ObfuscationPart1.map.put("func_179038_a", "getWorldRendererByLayer");
		ObfuscationPart1.map.put("func_179039_a", "getWorldRendererByLayerId");
		ObfuscationPart1.map.put("func_179082_a", "clearColor");
		ObfuscationPart1.map.put("func_179083_b", "viewport");
		ObfuscationPart1.map.put("func_179084_k", "disableBlend");
		ObfuscationPart1.map.put("func_179085_a", "enableLight");
		ObfuscationPart1.map.put("func_179086_m", "clear");
		ObfuscationPart1.map.put("func_179087_a", "enableTexGenCoord");
		ObfuscationPart1.map.put("func_179088_q", "enablePolygonOffset");
		ObfuscationPart1.map.put("func_179089_o", "enableCull");
		ObfuscationPart1.map.put("func_179090_x", "disableTexture2D");
		ObfuscationPart1.map.put("func_179091_B", "enableRescaleNormal");
		ObfuscationPart1.map.put("func_179092_a", "alphaFunc");
		ObfuscationPart1.map.put("func_179093_d", "setFog");
		ObfuscationPart1.map.put("func_179094_E", "pushMatrix");
		ObfuscationPart1.map.put("func_179095_a", "setFogDensity");
		ObfuscationPart1.map.put("func_179096_D", "loadIdentity");
		ObfuscationPart1.map.put("func_179097_i", "disableDepth");
		ObfuscationPart1.map.put("func_179098_w", "enableTexture2D");
		ObfuscationPart1.map.put("func_179099_b", "popAttrib");
		ObfuscationPart1.map.put("func_179100_b", "disableTexGenCoord");
		ObfuscationPart1.map.put("func_179101_C", "disableRescaleNormal");
		ObfuscationPart1.map.put("func_179102_b", "setFogStart");
		ObfuscationPart1.map.put("func_179103_j", "shadeModel");
		ObfuscationPart1.map.put("func_179104_a", "colorMaterial");
		ObfuscationPart1.map.put("func_179105_a", "texGen");
		ObfuscationPart1.map.put("func_179106_n", "disableFog");
		ObfuscationPart1.map.put("func_179107_e", "cullFace");
		ObfuscationPart1.map.put("func_179108_z", "enableNormalize");
		ObfuscationPart1.map.put("func_179109_b", "translate");
		ObfuscationPart1.map.put("func_179110_a", "multMatrix");
		ObfuscationPart1.map.put("func_179111_a", "getFloat");
		ObfuscationPart1.map.put("func_179112_b", "blendFunc");
		ObfuscationPart1.map.put("func_179113_r", "disablePolygonOffset");
		ObfuscationPart1.map.put("func_179114_b", "rotate");
		ObfuscationPart1.map.put("func_179115_u", "enableColorLogic");
		ObfuscationPart1.map.put("func_179116_f", "colorLogicOp");
		ObfuscationPart1.map.put("func_179117_G", "resetColor");
		ObfuscationPart1.map.put("func_179118_c", "disableAlpha");
		ObfuscationPart1.map.put("func_179119_h", "disableColorMaterial");
		ObfuscationPart1.map.put("func_179120_a", "tryBlendFuncSeparate");
		ObfuscationPart1.map.put("func_179121_F", "popMatrix");
		ObfuscationPart1.map.put("func_179122_b", "disableLight");
		ObfuscationPart1.map.put("func_179123_a", "pushAttrib");
		ObfuscationPart1.map.put("func_179124_c", "color");
		ObfuscationPart1.map.put("func_179125_c", "texGenCoord");
		ObfuscationPart1.map.put("func_179126_j", "enableDepth");
		ObfuscationPart1.map.put("func_179127_m", "enableFog");
		ObfuscationPart1.map.put("func_179128_n", "matrixMode");
		ObfuscationPart1.map.put("func_179129_p", "disableCull");
		ObfuscationPart1.map.put("func_179130_a", "ortho");
		ObfuscationPart1.map.put("func_179131_c", "color");
		ObfuscationPart1.map.put("func_179132_a", "depthMask");
		ObfuscationPart1.map.put("func_179133_A", "disableNormalize");
		ObfuscationPart1.map.put("func_179134_v", "disableColorLogic");
		ObfuscationPart1.map.put("func_179135_a", "colorMask");
		ObfuscationPart1.map.put("func_179136_a", "doPolygonOffset");
		ObfuscationPart1.map.put("func_179137_b", "translate");
		ObfuscationPart1.map.put("func_179138_g", "setActiveTexture");
		ObfuscationPart1.map.put("func_179139_a", "scale");
		ObfuscationPart1.map.put("func_179140_f", "disableLighting");
		ObfuscationPart1.map.put("func_179141_d", "enableAlpha");
		ObfuscationPart1.map.put("func_179142_g", "enableColorMaterial");
		ObfuscationPart1.map.put("func_179143_c", "depthFunc");
		ObfuscationPart1.map.put("func_179144_i", "bindTexture");
		ObfuscationPart1.map.put("func_179145_e", "enableLighting");
		ObfuscationPart1.map.put("func_179146_y", "generateTexture");
		ObfuscationPart1.map.put("func_179147_l", "enableBlend");
		ObfuscationPart1.map.put("func_179148_o", "callList");
		ObfuscationPart1.map.put("func_179149_a", "texGen");
		ObfuscationPart1.map.put("func_179150_h", "deleteTexture");
		ObfuscationPart1.map.put("func_179151_a", "clearDepth");
		ObfuscationPart1.map.put("func_179152_a", "scale");
		ObfuscationPart1.map.put("func_179153_c", "setFogEnd");
		ObfuscationPart1.map.put("func_179198_a", "setDisabled");
		ObfuscationPart1.map.put("func_179199_a", "setState");
		ObfuscationPart1.map.put("func_179200_b", "setEnabled");
		ObfuscationPart1.map.put("func_179214_a", "registerItemBlock");
		ObfuscationPart1.map.put("func_179215_a", "updateItemStackNBT");
		ObfuscationPart1.map.put("func_179216_c", "registerItemBlock");
		ObfuscationPart1.map.put("func_179217_a", "registerItem");
		ObfuscationPart1.map.put("func_179218_a", "onBlockDestroyed");
		ObfuscationPart1.map.put("func_179219_a", "registerItem");
		ObfuscationPart1.map.put("func_179221_a", "applyRandomRotations");
		ObfuscationPart1.map.put("func_179222_a", "canPlaceBlockOnSide");
		ObfuscationPart1.map.put("func_179223_d", "getBlock");
		ObfuscationPart1.map.put("func_179224_a", "setTileEntityNBT");
		ObfuscationPart1.map.put("func_179225_h", "getBaseColor");
		ObfuscationPart1.map.put("func_179229_a", "resolveContents");
		ObfuscationPart1.map.put("func_179230_h", "getGeneration");
		ObfuscationPart1.map.put("func_179233_a", "createEntity");
		ObfuscationPart1.map.put("func_179234_a", "applyBonemeal");
		ObfuscationPart1.map.put("func_179235_a", "placeDoor");
		ObfuscationPart1.map.put("func_179237_a", "merge");
		ObfuscationPart1.map.put("func_179238_g", "get");
		ObfuscationPart1.map.put("func_179242_c", "getName");
		ObfuscationPart1.map.put("func_179244_a", "getPacket");
		ObfuscationPart1.map.put("func_179245_a", "registerPacket");
		ObfuscationPart1.map.put("func_179246_a", "getPacketId");
		ObfuscationPart1.map.put("func_179249_a", "writeEnumValue");
		ObfuscationPart1.map.put("func_179250_a", "writeByteArray");
		ObfuscationPart1.map.put("func_179251_a", "readByteArray");
		ObfuscationPart1.map.put("func_179252_a", "writeUniqueId");
		ObfuscationPart1.map.put("func_179253_g", "readUniqueId");
		ObfuscationPart1.map.put("func_179254_b", "writeVarLong");
		ObfuscationPart1.map.put("func_179255_a", "writeBlockPos");
		ObfuscationPart1.map.put("func_179256_a", "writeTextComponent");
		ObfuscationPart1.map.put("func_179257_a", "readEnumValue");
		ObfuscationPart1.map.put("func_179258_d", "readTextComponent");
		ObfuscationPart1.map.put("func_179259_c", "readBlockPos");
		ObfuscationPart1.map.put("func_179260_f", "readVarLong");
		ObfuscationPart1.map.put("func_179280_b", "load");
		ObfuscationPart1.map.put("func_179281_c", "getValue");
		ObfuscationPart1.map.put("func_179288_a", "sendPacket");
		ObfuscationPart1.map.put("func_179289_a", "setCompressionThreshold");
		ObfuscationPart1.map.put("func_179290_a", "sendPacket");
		ObfuscationPart1.map.put("func_179291_h", "hasNoChannel");
		ObfuscationPart1.map.put("func_179292_f", "isEncrypted");
		ObfuscationPart1.map.put("func_179293_l", "handleDisconnection");
		ObfuscationPart1.map.put("func_179299_a", "setCompressionThreshold");
		ObfuscationPart1.map.put("func_179303_a", "setCompressionThreshold");
		ObfuscationPart1.map.put("func_179318_a", "cartesianProduct");
		ObfuscationPart1.map.put("func_179319_b", "createArray");
		ObfuscationPart1.map.put("func_179321_a", "cartesianProduct");
		ObfuscationPart1.map.put("func_179322_b", "toArray");
		ObfuscationPart1.map.put("func_179323_b", "arraysAsLists");
		ObfuscationPart1.map.put("func_179326_d", "getName");
		ObfuscationPart1.map.put("func_179327_a", "getPartMask");
		ObfuscationPart1.map.put("func_179328_b", "getPartId");
		ObfuscationPart1.map.put("func_179329_c", "getPartName");
		ObfuscationPart1.map.put("func_179342_a", "getParticleFromId");
		ObfuscationPart1.map.put("func_179344_e", "getShouldIgnoreRange");
		ObfuscationPart1.map.put("func_179345_d", "getArgumentCount");
		ObfuscationPart1.map.put("func_179346_b", "getParticleName");
		ObfuscationPart1.map.put("func_179348_c", "getParticleID");
		ObfuscationPart1.map.put("func_179399_a", "populateMap");
		ObfuscationPart1.map.put("func_179400_b", "createMap");
		ObfuscationPart1.map.put("func_179412_a", "getPrice");
		ObfuscationPart1.map.put("func_179413_d", "getZ");
		ObfuscationPart1.map.put("func_179414_a", "writeToNBT");
		ObfuscationPart1.map.put("func_179415_b", "getX");
		ObfuscationPart1.map.put("func_179416_c", "getY");
		ObfuscationPart1.map.put("func_179422_b", "endOfData");
		ObfuscationPart1.map.put("func_179431_f", "maxTargetRange");
		ObfuscationPart1.map.put("func_179438_f", "getFollowRange");
		ObfuscationPart1.map.put("func_179445_a", "isSuitableTarget");
		ObfuscationPart1.map.put("func_179446_a", "setEntityAttackTarget");
		ObfuscationPart1.map.put("func_179462_f", "notifyHurt");
		ObfuscationPart1.map.put("func_179479_b", "setExecutionChance");
		ObfuscationPart1.map.put("func_179480_f", "makeUpdate");
		ObfuscationPart1.map.put("func_179487_f", "getIsAboveDestination");
		ObfuscationPart1.map.put("func_179488_a", "shouldMoveTo");
		ObfuscationPart1.map.put("func_179489_g", "searchForDestination");
		ObfuscationPart1.map.put("func_179506_a", "getBlockDoor");
		ObfuscationPart1.map.put("func_179512_a", "getAttackReachSqr");
		ObfuscationPart1.map.put("func_179516_a", "facings");
		ObfuscationPart1.map.put("func_179518_a", "random");
		ObfuscationPart1.map.put("func_179524_a", "getOffset");
		ObfuscationPart1.map.put("func_179532_b", "getRemainingItems");
		ObfuscationPart1.map.put("func_179543_a", "getSubCompound");
		ObfuscationPart1.map.put("func_179544_c", "canDestroy");
		ObfuscationPart1.map.put("func_179545_c", "areItemsEqual");
		ObfuscationPart1.map.put("func_179546_a", "onItemUse");
		ObfuscationPart1.map.put("func_179547_d", "canPlaceOn");
		ObfuscationPart1.map.put("func_179548_a", "onBlockDestroyed");
		ObfuscationPart1.map.put("func_179554_a", "getRegisteredItem");
		ObfuscationPart1.map.put("func_179628_a", "getResult");
		ObfuscationPart1.map.put("func_179629_b", "getAmount");
		ObfuscationPart1.map.put("func_179630_c", "isRelative");
		ObfuscationPart1.map.put("func_179634_c", "getTypeNames");
		ObfuscationPart1.map.put("func_179635_a", "getTypeByName");
		ObfuscationPart1.map.put("func_179636_a", "getTypeID");
		ObfuscationPart1.map.put("func_179637_b", "getTypeName");
		ObfuscationPart1.map.put("func_179647_f", "getNamePredicates");
		ObfuscationPart1.map.put("func_179648_b", "getXpLevelPredicates");
		ObfuscationPart1.map.put("func_179649_c", "getGamemodePredicates");
		ObfuscationPart1.map.put("func_179651_b", "getArgument");
		ObfuscationPart1.map.put("func_179652_a", "matchOneEntity");
		ObfuscationPart1.map.put("func_179653_a", "getInt");
		ObfuscationPart1.map.put("func_179654_a", "getWorlds");
		ObfuscationPart1.map.put("func_179655_b", "isEntityTypeValid");
		ObfuscationPart1.map.put("func_179656_b", "matchEntities");
		ObfuscationPart1.map.put("func_179658_a", "getEntitiesFromPredicates");
		ObfuscationPart1.map.put("func_179659_d", "getTeamPredicates");
		ObfuscationPart1.map.put("func_179660_a", "filterResults");
		ObfuscationPart1.map.put("func_179661_a", "getAABB");
		ObfuscationPart1.map.put("func_179662_g", "getRotationsPredicates");
		ObfuscationPart1.map.put("func_179663_a", "getTypePredicates");
		ObfuscationPart1.map.put("func_179664_b", "getBlockPosFromArguments");
		ObfuscationPart1.map.put("func_179665_h", "hasArgument");
		ObfuscationPart1.map.put("func_179667_a", "setScoreBoardStat");
		ObfuscationPart1.map.put("func_179668_a", "readStatsFromNBT");
		ObfuscationPart1.map.put("func_179669_a", "removeScoreBoardStat");
		ObfuscationPart1.map.put("func_179670_b", "writeStatsToNBT");
		ObfuscationPart1.map.put("func_179671_a", "addAllStats");
		ObfuscationPart1.map.put("func_179677_a", "checkForStuck");
		ObfuscationPart1.map.put("func_179679_a", "getPathFinder");
		ObfuscationPart1.map.put("func_179680_a", "getPathToPos");
		ObfuscationPart1.map.put("func_179683_a", "isSafeToStandAt");
		ObfuscationPart1.map.put("func_179684_h", "getCanSwim");
		ObfuscationPart1.map.put("func_179685_e", "setAvoidSun");
		ObfuscationPart1.map.put("func_179686_g", "getEnterDoors");
		ObfuscationPart1.map.put("func_179687_p", "getPathablePosY");
		ObfuscationPart1.map.put("func_179688_b", "setBreakDoors");
		ObfuscationPart1.map.put("func_179691_c", "setEnterDoors");
		ObfuscationPart1.map.put("func_179692_b", "isPositionClear");
		ObfuscationPart1.map.put("func_179693_d", "setCanSwim");
		ObfuscationPart1.map.put("func_179697_g", "getOnGround");
		ObfuscationPart1.map.put("func_179700_a", "getHeader");
		ObfuscationPart1.map.put("func_179701_b", "getFooter");
		ObfuscationPart1.map.put("func_179707_f", "doesShowParticles");
		ObfuscationPart1.map.put("func_179709_b", "getTargetBlock");
		ObfuscationPart1.map.put("func_179712_b", "getHitVec");
		ObfuscationPart1.map.put("func_179714_b", "getFacing");
		ObfuscationPart1.map.put("func_179715_a", "getPosition");
		ObfuscationPart1.map.put("func_179722_a", "getPosition");
		ObfuscationPart1.map.put("func_179727_a", "getEntity");
		ObfuscationPart1.map.put("func_179730_a", "getProfile");
		ObfuscationPart1.map.put("func_179731_a", "getCompressionThreshold");
		ObfuscationPart1.map.put("func_179734_a", "setMapdataTo");
		ObfuscationPart1.map.put("func_179742_g", "getOnGround");
		ObfuscationPart1.map.put("func_179744_h", "isReducedDebugInfo");
		ObfuscationPart1.map.put("func_179746_d", "getSoundPos");
		ObfuscationPart1.map.put("func_179748_k", "getParticleArgs");
		ObfuscationPart1.map.put("func_179749_a", "getParticleType");
		ObfuscationPart1.map.put("func_179750_b", "isLongDistance");
		ObfuscationPart1.map.put("func_179767_a", "getEntries");
		ObfuscationPart1.map.put("func_179768_b", "getAction");
		ObfuscationPart1.map.put("func_179777_a", "getSignPosition");
		ObfuscationPart1.map.put("func_179780_a", "getEntity");
		ObfuscationPart1.map.put("func_179783_a", "getURL");
		ObfuscationPart1.map.put("func_179784_b", "getHash");
		ObfuscationPart1.map.put("func_179788_a", "apply");
		ObfuscationPart1.map.put("func_179798_a", "getBedPosition");
		ObfuscationPart1.map.put("func_179800_a", "getSpawnPos");
		ObfuscationPart1.map.put("func_179803_e", "getFadeOutTime");
		ObfuscationPart1.map.put("func_179804_d", "getDisplayTime");
		ObfuscationPart1.map.put("func_179805_b", "getMessage");
		ObfuscationPart1.map.put("func_179806_c", "getFadeInTime");
		ObfuscationPart1.map.put("func_179807_a", "getType");
		ObfuscationPart1.map.put("func_179813_h", "getColor");
		ObfuscationPart1.map.put("func_179814_i", "getNameTagVisibility");
		ObfuscationPart1.map.put("func_179817_d", "getRenderType");
		ObfuscationPart1.map.put("func_179819_c", "getUniqueId");
		ObfuscationPart1.map.put("func_179821_b", "getPosition");
		ObfuscationPart1.map.put("func_179823_a", "getPos");
		ObfuscationPart1.map.put("func_179825_a", "getBlockPosition");
		ObfuscationPart1.map.put("func_179827_b", "getBlockPosition");
		ObfuscationPart1.map.put("func_179830_a", "isDifficultyLocked");
		ObfuscationPart1.map.put("func_179831_b", "getDifficulty");
		ObfuscationPart1.map.put("func_179834_f", "getFlags");
		ObfuscationPart1.map.put("func_179836_c", "getFacing");
		ObfuscationPart1.map.put("func_179837_b", "getPosition");
		ObfuscationPart1.map.put("func_179840_c", "getWindowTitle");
		ObfuscationPart1.map.put("func_179844_a", "getChangedBlocks");
		ObfuscationPart1.map.put("func_179846_b", "getDistanceToInsideBlockSq");
		ObfuscationPart1.map.put("func_179847_f", "getInsideOffsetX");
		ObfuscationPart1.map.put("func_179848_a", "getDistanceToDoorBlockSq");
		ObfuscationPart1.map.put("func_179849_a", "setLastActivityTimestamp");
		ObfuscationPart1.map.put("func_179850_c", "isInsideSide");
		ObfuscationPart1.map.put("func_179851_i", "getIsDetachedFromVillageFlag");
		ObfuscationPart1.map.put("func_179852_d", "getDoorBlockPos");
		ObfuscationPart1.map.put("func_179853_a", "setIsDetachedFromVillageFlag");
		ObfuscationPart1.map.put("func_179854_a", "getFaceDirection");
		ObfuscationPart1.map.put("func_179855_g", "getInsideOffsetZ");
		ObfuscationPart1.map.put("func_179856_e", "getInsideBlockPos");
		ObfuscationPart1.map.put("func_179860_f", "isWoodDoor");
		ObfuscationPart1.map.put("func_179861_a", "isAreaClearAround");
		ObfuscationPart1.map.put("func_179862_a", "findRandomSpawnPos");
		ObfuscationPart1.map.put("func_179863_c", "getDoorInfo");
		ObfuscationPart1.map.put("func_179864_e", "getExistedDoor");
		ObfuscationPart1.map.put("func_179865_b", "getNearestDoor");
		ObfuscationPart1.map.put("func_179866_a", "isBlockPosWithinSqVillageRadius");
		ObfuscationPart1.map.put("func_179867_a", "findRandomSpawnPos");
		ObfuscationPart1.map.put("func_179868_d", "redirectOutputToLog");
		ObfuscationPart1.map.put("func_179869_a", "isRegistered");
		ObfuscationPart1.map.put("func_179870_a", "printToSYSOUT");
		ObfuscationPart1.map.put("func_179882_a", "logString");
		ObfuscationPart1.map.put("func_179885_a", "getLongProperty");
		ObfuscationPart1.map.put("func_179917_d", "getX");
		ObfuscationPart1.map.put("func_179918_f", "getZ");
		ObfuscationPart1.map.put("func_179919_e", "getY");
		ObfuscationPart1.map.put("func_179920_a", "setDirection");
		ObfuscationPart1.map.put("func_179921_a", "setSpeed");
		ObfuscationPart1.map.put("func_179926_b", "isNotColliding");
		ObfuscationPart1.map.put("func_179960_c", "getGameMode");
		ObfuscationPart1.map.put("func_179961_d", "getDisplayName");
		ObfuscationPart1.map.put("func_179962_a", "getProfile");
		ObfuscationPart1.map.put("func_179963_b", "getPing");
		ObfuscationPart1.map.put("func_179969_a", "byName");
		ObfuscationPart1.map.put("func_179971_a", "getNames");
		ObfuscationPart1.map.put("func_179985_a", "processComponent");
		ObfuscationPart1.map.put("func_179986_j", "getInsertion");
		ObfuscationPart1.map.put("func_179989_a", "setInsertion");
		ObfuscationPart1.map.put("func_179992_g", "getSelector");
		ObfuscationPart1.map.put("func_179994_h", "getObjective");
		ObfuscationPart1.map.put("func_179995_g", "getName");
		ObfuscationPart1.map.put("func_179997_b", "setValue");
		ObfuscationPart1.map.put("func_180031_a", "checkThreadAndEnqueue");
		ObfuscationPart1.map.put("func_180065_d", "canJump");
		ObfuscationPart1.map.put("func_180066_a", "setCanJump");
		ObfuscationPart1.map.put("func_180067_c", "getIsJumping");
		ObfuscationPart1.map.put("func_180088_c", "getBlockState");
		ObfuscationPart1.map.put("func_180089_b", "getOffset");
		ObfuscationPart1.map.put("func_180090_a", "getPos");
		ObfuscationPart1.map.put("func_180109_a", "getPlacementForEntity");
		ObfuscationPart1.map.put("func_180120_a", "getDistanceUntilEdge");
		ObfuscationPart1.map.put("func_180123_a", "isMatchingName");
		ObfuscationPart1.map.put("func_180124_b", "getEntityNameList");
		ObfuscationPart1.map.put("func_180125_b", "isRegistered");
		ObfuscationPart1.map.put("func_180134_f", "getCombatDuration");
		ObfuscationPart1.map.put("func_180135_h", "getFighter");
		ObfuscationPart1.map.put("func_180136_u", "isCreativePlayer");
		ObfuscationPart1.map.put("func_180138_v", "setIsThornsDamage");
		ObfuscationPart1.map.put("func_180139_w", "getIsThornsDamage");
		ObfuscationPart1.map.put("func_180142_b", "getPotionFromResourceLocation");
		ObfuscationPart1.map.put("func_180157_a", "toNBT");
		ObfuscationPart1.map.put("func_180158_b", "fromNBT");
		ObfuscationPart1.map.put("func_180159_b", "getLock");
		ObfuscationPart1.map.put("func_180160_a", "isEmpty");
		ObfuscationPart1.map.put("func_180166_a", "getRandomItem");
		ObfuscationPart1.map.put("func_180168_b", "getAdditionalDifficulty");
		ObfuscationPart1.map.put("func_180169_a", "calculateAdditionalDifficulty");
		ObfuscationPart1.map.put("func_180170_c", "getClampedAdditionalDifficulty");
		ObfuscationPart1.map.put("func_180173_a", "spawnItemStack");
		ObfuscationPart1.map.put("func_180174_a", "dropInventoryItems");
		ObfuscationPart1.map.put("func_180175_a", "dropInventoryItems");
		ObfuscationPart1.map.put("func_180176_a", "dropInventoryItems");
		ObfuscationPart1.map.put("func_180179_a", "reset");
		ObfuscationPart1.map.put("func_180181_b", "rgb");
		ObfuscationPart1.map.put("func_180182_a", "getRandomUUID");
		ObfuscationPart1.map.put("func_180183_b", "rgb");
		ObfuscationPart1.map.put("func_180184_b", "normalizeAngle");
		ObfuscationPart1.map.put("func_180185_a", "epsilonEquals");
		ObfuscationPart1.map.put("func_180186_a", "getPositionRandom");
		ObfuscationPart1.map.put("func_180187_c", "getCoordinateRandom");
		ObfuscationPart1.map.put("func_180188_d", "multiplyColor");
		ObfuscationPart1.map.put("func_180192_a", "downloadResourcePack");
		ObfuscationPart1.map.put("func_180199_c", "isBoolean");
		ObfuscationPart1.map.put("func_180204_a", "getItemName");
		ObfuscationPart1.map.put("func_180213_a", "createLookup");
		ObfuscationPart1.map.put("func_180215_b", "getByClass");
		ObfuscationPart1.map.put("func_180233_c", "isVisibleTo");
		ObfuscationPart1.map.put("func_180235_c", "removeBlock");
		ObfuscationPart1.map.put("func_180237_b", "tryHarvestBlock");
		ObfuscationPart1.map.put("func_180238_e", "cancelDestroyingBlock");
		ObfuscationPart1.map.put("func_180239_c", "survivalOrAdventure");
		ObfuscationPart1.map.put("func_180244_a", "markBlockForUpdate");
		ObfuscationPart1.map.put("func_180245_a", "updateVisibility");
		ObfuscationPart1.map.put("func_180246_b", "getPosition");
		ObfuscationPart1.map.put("func_180248_a", "scheduleHalt");
		ObfuscationPart1.map.put("func_180254_e", "getType");
		ObfuscationPart1.map.put("func_180255_c", "getInt");
		ObfuscationPart1.map.put("func_180262_a", "addGameRule");
		ObfuscationPart1.map.put("func_180263_c", "getInt");
		ObfuscationPart1.map.put("func_180264_a", "areSameType");
		ObfuscationPart1.map.put("func_180266_a", "placeInPortal");
		ObfuscationPart1.map.put("func_180267_a", "canCreatureTypeSpawnAtLocation");
		ObfuscationPart1.map.put("func_180276_a", "getBiome");
		ObfuscationPart1.map.put("func_180283_a", "getColorAtPos");
		ObfuscationPart1.map.put("func_180284_a", "getBiome");
		ObfuscationPart1.map.put("func_180285_a", "getColorAtPos");
		ObfuscationPart1.map.put("func_180286_a", "getGrassColorAtPos");
		ObfuscationPart1.map.put("func_180287_b", "getFoliageColorAtPos");
		ObfuscationPart1.map.put("func_180288_c", "getWaterColorAtPos");
		ObfuscationPart1.map.put("func_180292_a", "decorate");
		ObfuscationPart1.map.put("func_180300_a", "getBiome");
		ObfuscationPart1.map.put("func_180303_b", "getRemainingItems");
		ObfuscationPart1.map.put("func_180305_b", "getEnchantmentByLocation");
		ObfuscationPart1.map.put("func_180320_f", "getMaxTradeUses");
		ObfuscationPart1.map.put("func_180321_e", "getToolUses");
		ObfuscationPart1.map.put("func_180322_j", "getRewardsExp");
		ObfuscationPart1.map.put("func_180328_a", "getPosition");
		ObfuscationPart1.map.put("func_180330_f", "getZEnd");
		ObfuscationPart1.map.put("func_180331_a", "getBlock");
		ObfuscationPart1.map.put("func_180332_e", "getXEnd");
		ObfuscationPart1.map.put("func_180333_d", "getZStart");
		ObfuscationPart1.map.put("func_180334_c", "getXStart");
		ObfuscationPart1.map.put("func_180342_d", "clearAffectedBlockPositions");
		ObfuscationPart1.map.put("func_180343_e", "getAffectedBlockPositions");
		ObfuscationPart1.map.put("func_180346_a", "getBlock");
		ObfuscationPart1.map.put("func_180359_a", "hasRailAt");
		ObfuscationPart1.map.put("func_180360_a", "updateConnectedRails");
		ObfuscationPart1.map.put("func_180361_d", "hasNeighborRail");
		ObfuscationPart1.map.put("func_180362_b", "getBlockState");
		ObfuscationPart1.map.put("func_180363_c", "isConnectedTo");
		ObfuscationPart1.map.put("func_180364_a", "place");
		ObfuscationPart1.map.put("func_180372_d", "getParent");
		ObfuscationPart1.map.put("func_180374_a", "hasModifier");
		ObfuscationPart1.map.put("func_180375_b", "getAppliedModifiers");
		ObfuscationPart1.map.put("func_180376_c", "createInstance");
		ObfuscationPart1.map.put("func_180383_a", "getRegisteredBlock");
		ObfuscationPart1.map.put("func_180421_g", "getLookPosZ");
		ObfuscationPart1.map.put("func_180422_f", "getLookPosY");
		ObfuscationPart1.map.put("func_180423_e", "getLookPosX");
		ObfuscationPart1.map.put("func_180424_b", "getIsLooking");
		ObfuscationPart1.map.put("func_180425_c", "getPosition");
		ObfuscationPart1.map.put("func_180426_a", "setPositionAndRotationDirect");
		ObfuscationPart1.map.put("func_180427_aV", "isImmuneToExplosions");
		ObfuscationPart1.map.put("func_180428_a", "getExplosionResistance");
		ObfuscationPart1.map.put("func_180429_a", "playStepSound");
		ObfuscationPart1.map.put("func_180430_e", "fall");
		ObfuscationPart1.map.put("func_180431_b", "isEntityInvulnerable");
		ObfuscationPart1.map.put("func_180432_n", "copyDataFromOld");
		ObfuscationPart1.map.put("func_180434_a", "renderParticle");
		ObfuscationPart1.map.put("func_180436_i", "enableLightmap");
		ObfuscationPart1.map.put("func_180437_a", "renderCloudsCheck");
		ObfuscationPart1.map.put("func_180438_a", "getNightVisionBrightness");
		ObfuscationPart1.map.put("func_180439_a", "playEvent");
		ObfuscationPart1.map.put("func_180440_a", "broadcastSound");
		ObfuscationPart1.map.put("func_180441_b", "sendBlockBreakProgress");
		ObfuscationPart1.map.put("func_180442_a", "spawnParticle");
		ObfuscationPart1.map.put("func_180443_s", "preRenderDamagedBlocks");
		ObfuscationPart1.map.put("func_180444_a", "renderStars");
		ObfuscationPart1.map.put("func_180445_c", "renderCloudsFancy");
		ObfuscationPart1.map.put("func_180446_a", "renderEntities");
		ObfuscationPart1.map.put("func_180447_b", "renderClouds");
		ObfuscationPart1.map.put("func_180448_r", "renderSkyEnd");
		ObfuscationPart1.map.put("func_180449_a", "renderWorldBorder");
		ObfuscationPart1.map.put("func_180450_b", "renderItemAndEffectIntoGUI");
		ObfuscationPart1.map.put("func_180452_a", "setupGuiTransform");
		ObfuscationPart1.map.put("func_180453_a", "renderItemOverlayIntoGUI");
		ObfuscationPart1.map.put("func_180454_a", "renderItem");
		ObfuscationPart1.map.put("func_180455_b", "renderString");
		ObfuscationPart1.map.put("func_180457_u", "getDefaultDisplayTile");
		ObfuscationPart1.map.put("func_180459_n", "moveDerailedMinecart");
		ObfuscationPart1.map.put("func_180460_a", "moveAlongTrack");
		ObfuscationPart1.map.put("func_180461_b", "canExtractItem");
		ObfuscationPart1.map.put("func_180462_a", "canInsertItem");
		ObfuscationPart1.map.put("func_180463_a", "getSlotsForFace");
		ObfuscationPart1.map.put("func_180464_a", "handleEnableCompression");
		ObfuscationPart1.map.put("func_180465_a", "moveTowards");
		ObfuscationPart1.map.put("func_180466_bG", "handleJumpLava");
		ObfuscationPart1.map.put("func_180467_a", "getBedSpawnLocation");
		ObfuscationPart1.map.put("func_180468_a", "displayGui");
		ObfuscationPart1.map.put("func_180469_a", "trySleep");
		ObfuscationPart1.map.put("func_180470_cg", "getBedLocation");
		ObfuscationPart1.map.put("func_180472_a", "displayVillagerTradeGui");
		ObfuscationPart1.map.put("func_180473_a", "setSpawnPoint");
		ObfuscationPart1.map.put("func_180474_b", "renderPortal");
		ObfuscationPart1.map.put("func_180475_a", "renderScoreboard");
		ObfuscationPart1.map.put("func_180476_e", "renderPumpkinOverlay");
		ObfuscationPart1.map.put("func_180477_d", "renderPlayerStats");
		ObfuscationPart1.map.put("func_180479_a", "renderHotbar");
		ObfuscationPart1.map.put("func_180480_a", "renderVignette");
		ObfuscationPart1.map.put("func_180481_a", "setEquipmentBasedOnDifficulty");
		ObfuscationPart1.map.put("func_180482_a", "onInitialSpawn");
		ObfuscationPart1.map.put("func_180483_b", "setEnchantmentBasedOnDifficulty");
		ObfuscationPart1.map.put("func_180484_a", "getBlockPathWeight");
		ObfuscationPart1.map.put("func_180485_d", "isWithinHomeDistanceFromPosition");
		ObfuscationPart1.map.put("func_180486_cf", "getHomePosition");
		ObfuscationPart1.map.put("func_180487_n", "getParticleType");
		ObfuscationPart1.map.put("func_180489_a", "spawnParticles");
		ObfuscationPart1.map.put("func_180494_b", "getBiome");
		ObfuscationPart1.map.put("func_180495_p", "getBlockState");
		ObfuscationPart1.map.put("func_180497_b", "scheduleBlockUpdate");
		ObfuscationPart1.map.put("func_180498_a", "playEvent");
		ObfuscationPart1.map.put("func_180500_c", "checkLightFor");
		ObfuscationPart1.map.put("func_180501_a", "setBlockState");
		ObfuscationPart1.map.put("func_180502_D", "isBlockinHighHumidity");
		ObfuscationPart1.map.put("func_180503_b", "invalidateRegionAndSetBlock");
		ObfuscationPart1.map.put("func_180504_m", "getSpawnCoordinate");
		ObfuscationPart1.map.put("func_180505_a", "spawnParticle");
		ObfuscationPart1.map.put("func_180507_a_", "setResourcePack");
		ObfuscationPart1.map.put("func_180510_a", "drawSplashScreen");
		ObfuscationPart1.map.put("func_180511_b", "clickBlock");
		ObfuscationPart1.map.put("func_180512_c", "onPlayerDamageBlock");
		ObfuscationPart1.map.put("func_180513_a", "getNearestStructurePos");
		ObfuscationPart1.map.put("func_180514_a", "recreateStructures");
		ObfuscationPart1.map.put("func_180518_a", "setBlocksInChunk");
		ObfuscationPart1.map.put("func_180521_a", "skinAvailable");
		ObfuscationPart1.map.put("func_180522_a", "getCoordinateInfo");
		ObfuscationPart1.map.put("func_180523_a", "addBlockInfo");
		ObfuscationPart1.map.put("func_180524_a", "getTabCompletions");
		ObfuscationPart1.map.put("func_180526_a", "parseDouble");
		ObfuscationPart1.map.put("func_180527_d", "parseBoolean");
		ObfuscationPart1.map.put("func_180528_a", "parseInt");
		ObfuscationPart1.map.put("func_180529_a", "buildString");
		ObfuscationPart1.map.put("func_180530_a", "join");
		ObfuscationPart1.map.put("func_180531_e", "getDifficultyFromCommand");
		ObfuscationPart1.map.put("func_180532_a", "addBlockHitEffects");
		ObfuscationPart1.map.put("func_180533_a", "addBlockDestroyEffects");
		ObfuscationPart1.map.put("func_180546_a", "render");
		ObfuscationPart1.map.put("func_180547_a", "normalize");
		ObfuscationPart1.map.put("func_180548_c", "bindEntityTexture");
		ObfuscationPart1.map.put("func_180565_e", "unsetScoreTeamColor");
		ObfuscationPart1.map.put("func_180597_a", "cacheActiveRenderInfo");
		ObfuscationPart1.map.put("func_180599_n", "updateAnimationInterpolated");
		ObfuscationPart1.map.put("func_180600_a", "allocateTextureImpl");
		ObfuscationPart1.map.put("func_180601_a", "downloadResourcePack");
		ObfuscationPart1.map.put("func_180608_a", "getCenter");
		ObfuscationPart1.map.put("func_180609_b", "addDoorsAround");
		ObfuscationPart1.map.put("func_180610_a", "isValidDragMode");
		ObfuscationPart1.map.put("func_180611_e", "getTileEntity");
		ObfuscationPart1.map.put("func_180614_a", "onItemUse");
		ObfuscationPart1.map.put("func_180615_a", "tryPlace");
		ObfuscationPart1.map.put("func_180616_a", "tryPlaceContainedLiquid");
		ObfuscationPart1.map.put("func_180617_a", "spawnBonemealParticles");
		ObfuscationPart1.map.put("func_180618_a", "attachToFence");
		ObfuscationPart1.map.put("func_180620_b", "placeInExistingPortal");
		ObfuscationPart1.map.put("func_180621_a", "getRandomChunkPosition");
		ObfuscationPart1.map.put("func_180622_a", "genTerrainBlocks");
		ObfuscationPart1.map.put("func_180623_a", "pickRandomFlower");
		ObfuscationPart1.map.put("func_180624_a", "decorate");
		ObfuscationPart1.map.put("func_180625_c", "getFoliageColorAtPos");
		ObfuscationPart1.map.put("func_180626_a", "getTemperature");
		ObfuscationPart1.map.put("func_180627_b", "getGrassColorAtPos");
		ObfuscationPart1.map.put("func_180628_b", "generateBiomeTerrain");
		ObfuscationPart1.map.put("func_180629_a", "getBand");
		ObfuscationPart1.map.put("func_180630_a", "findBiomePosition");
		ObfuscationPart1.map.put("func_180631_a", "getBiome");
		ObfuscationPart1.map.put("func_180632_j", "setDefaultState");
		ObfuscationPart1.map.put("func_180633_a", "onBlockPlacedBy");
		ObfuscationPart1.map.put("func_180634_a", "onEntityCollidedWithBlock");
		ObfuscationPart1.map.put("func_180635_a", "spawnAsEntity");
		ObfuscationPart1.map.put("func_180636_a", "collisionRayTrace");
		ObfuscationPart1.map.put("func_180637_b", "dropXpOnBlockBreak");
		ObfuscationPart1.map.put("func_180639_a", "onBlockActivated");
		ObfuscationPart1.map.put("func_180640_a", "getSelectedBoundingBox");
		ObfuscationPart1.map.put("func_180641_l", "getComparatorInputOverride");
		ObfuscationPart1.map.put("func_180642_a", "getStateForPlacement");
		ObfuscationPart1.map.put("func_180643_i", "getSilkTouchDrop");
		ObfuscationPart1.map.put("func_180645_a", "randomTick");
		ObfuscationPart1.map.put("func_180646_a", "getCollisionBoundingBox");
		ObfuscationPart1.map.put("func_180647_a", "getPlayerRelativeBlockHardness");
		ObfuscationPart1.map.put("func_180649_a", "onBlockClicked");
		ObfuscationPart1.map.put("func_180650_b", "updateTick");
		ObfuscationPart1.map.put("func_180651_a", "damageDropped");
		ObfuscationPart1.map.put("func_180652_a", "onExplosionDestroy");
		ObfuscationPart1.map.put("func_180653_a", "dropBlockAsItemWithChance");
		ObfuscationPart1.map.put("func_180655_c", "randomDisplayTick");
		ObfuscationPart1.map.put("func_180656_a", "getWeakPower");
		ObfuscationPart1.map.put("func_180657_a", "harvestBlock");
		ObfuscationPart1.map.put("func_180658_a", "onFallenUpon");
		ObfuscationPart1.map.put("func_180659_g", "getMapColor");
		ObfuscationPart1.map.put("func_180660_a", "getItemDropped");
		ObfuscationPart1.map.put("func_180661_e", "createBlockState");
		ObfuscationPart1.map.put("func_180663_b", "breakBlock");
		ObfuscationPart1.map.put("func_180664_k", "getRenderLayer");
		ObfuscationPart1.map.put("func_180666_a", "updateState");
		ObfuscationPart1.map.put("func_180669_e", "computeRedstoneStrength");
		ObfuscationPart1.map.put("func_180670_a", "canUseBonemeal");
		ObfuscationPart1.map.put("func_180671_f", "canBlockStay");
		ObfuscationPart1.map.put("func_180672_a", "getGrowthChance");
		ObfuscationPart1.map.put("func_180673_e", "trySpawnGolem");
		ObfuscationPart1.map.put("func_180674_e", "getPoweredState");
		ObfuscationPart1.map.put("func_180675_k", "getUnpoweredState");
		ObfuscationPart1.map.put("func_180676_d", "getLockableContainer");
		ObfuscationPart1.map.put("func_180677_d", "updatePower");
		ObfuscationPart1.map.put("func_180678_e", "dropRecord");
		ObfuscationPart1.map.put("func_180679_a", "checkWitherSpawn");
		ObfuscationPart1.map.put("func_180682_b", "eatCake");
		ObfuscationPart1.map.put("func_180683_d", "checkFall");
		ObfuscationPart1.map.put("func_180684_e", "teleport");
		ObfuscationPart1.map.put("func_180686_a", "setFireInfo");
		ObfuscationPart1.map.put("func_180688_d", "triggerMixEffects");
		ObfuscationPart1.map.put("func_180690_f", "placeStaticBlock");
		ObfuscationPart1.map.put("func_180691_e", "spawnParticles");
		ObfuscationPart1.map.put("func_180692_a", "explode");
		ObfuscationPart1.map.put("func_180694_a", "playSound");
		ObfuscationPart1.map.put("func_180697_b", "findRailAt");
		ObfuscationPart1.map.put("func_180698_a", "getRadiusPredicates");
		ObfuscationPart1.map.put("func_180699_d", "getBlockPos");
		ObfuscationPart1.map.put("func_180700_a", "checkLightSide");
		ObfuscationPart1.map.put("func_180701_a", "recursiveGenerate");
		ObfuscationPart1.map.put("func_180702_a", "addTunnel");
		ObfuscationPart1.map.put("func_180703_a", "addRoom");
		ObfuscationPart1.map.put("func_180704_a", "addTunnel");
		ObfuscationPart1.map.put("func_180705_a", "addRoom");
		ObfuscationPart1.map.put("func_180706_b", "getNearestStructurePos");
		ObfuscationPart1.map.put("func_180707_a", "addTunnel");
		ObfuscationPart1.map.put("func_180708_a", "writeGameProfile");
		ObfuscationPart1.map.put("func_180709_b", "generate");
		ObfuscationPart1.map.put("func_180710_a", "setPlantType");
		ObfuscationPart1.map.put("func_180711_a", "generateSaplings");
		ObfuscationPart1.map.put("func_180713_a", "getTagFromJson");
		ObfuscationPart1.map.put("func_180714_a", "writeString");
		ObfuscationPart1.map.put("func_180715_a", "getLayerFromString");
		ObfuscationPart1.map.put("func_180716_a", "getLayersFromString");
		ObfuscationPart1.map.put("func_180728_a", "getBlockState");
		ObfuscationPart1.map.put("func_180735_b", "getBufferData");
		ObfuscationPart1.map.put("func_180751_d", "getScoreAction");
		ObfuscationPart1.map.put("func_180755_e", "getDuration");
		ObfuscationPart1.map.put("func_180760_b", "getBufferData");
		ObfuscationPart1.map.put("func_180762_c", "getAction");
		ObfuscationPart1.map.put("func_180764_b", "getAction");
		ObfuscationPart1.map.put("func_180777_a", "randomlyRareFillWithBlocks");
		ObfuscationPart1.map.put("func_180779_c", "chooseProfession");
		ObfuscationPart1.map.put("func_180780_a", "getBlockState");
		ObfuscationPart1.map.put("func_180781_a", "initializeAllBiomeGenerators");
		ObfuscationPart1.map.put("func_180783_e", "setDifficultyLocked");
		ObfuscationPart1.map.put("func_180784_a", "onBlockClicked");
		ObfuscationPart1.map.put("func_180785_a", "blockRemoving");
		ObfuscationPart1.map.put("func_180793_a", "affectEntity");
		ObfuscationPart1.map.put("func_180794_a", "onAttributeModified");
		ObfuscationPart1.map.put("func_180798_a", "renderDebugInfoLeft");
		ObfuscationPart1.map.put("func_180799_ab", "isInLava");
		ObfuscationPart1.map.put("func_181012_aH", "getTeleportDirection");
		ObfuscationPart1.map.put("func_181013_g", "setRenderYawOffset");
		ObfuscationPart1.map.put("func_181014_aG", "getLastPortalVec");
		ObfuscationPart1.map.put("func_181015_d", "setPortal");
		ObfuscationPart1.map.put("func_181022_b", "stopUseShader");
		ObfuscationPart1.map.put("func_181023_a", "updateTileEntities");
		ObfuscationPart1.map.put("func_181026_s", "hasMarker");
		ObfuscationPart1.map.put("func_181027_m", "setMarker");
		ObfuscationPart1.map.put("func_181029_i", "resetPlayersOverlayFooterHeader");
		ObfuscationPart1.map.put("func_181030_a", "resetFooterHeader");
		ObfuscationPart1.map.put("func_181031_a", "setSettingsModified");
		ObfuscationPart1.map.put("func_181033_a", "canDestroyBlock");
		ObfuscationPart1.map.put("func_181034_q", "shouldBroadcastRconToOps");
		ObfuscationPart1.map.put("func_181035_ah", "shouldUseNativeTransport");
		ObfuscationPart1.map.put("func_181037_M", "getProfileProperties");
		ObfuscationPart1.map.put("func_181040_m", "getIsHittingBlock");
		ObfuscationPart1.map.put("func_181041_d", "isOnLAN");
		ObfuscationPart1.map.put("func_181043_b", "getTabCompletionCoordinateXZ");
		ObfuscationPart1.map.put("func_181057_v", "getPlayers");
		ObfuscationPart1.map.put("func_181058_b", "getFormattedListOfPlayers");
		ObfuscationPart1.map.put("func_181066_d", "getColor");
		ObfuscationPart1.map.put("func_181068_c", "getMapColor");
		ObfuscationPart1.map.put("func_181070_c", "getMapColor");
		ObfuscationPart1.map.put("func_181072_c", "getMapColor");
		ObfuscationPart1.map.put("func_181074_c", "getMapColor");
		ObfuscationPart1.map.put("func_181076_a", "getFacingFromAxis");
		ObfuscationPart1.map.put("func_181078_a", "areItemStacksExactlyEqual");
		ObfuscationPart1.map.put("func_181079_c", "setPos");
		ObfuscationPart1.map.put("func_181086_a", "isInvalidNeighbor");
		ObfuscationPart1.map.put("func_181087_e", "hasInvalidNeighbor");
		ObfuscationPart1.map.put("func_181088_a", "canPlaceBlock");
		ObfuscationPart1.map.put("func_181089_f", "createPatternHelper");
		ObfuscationPart1.map.put("func_181090_a", "canAttachTo");
		ObfuscationPart1.map.put("func_181091_e", "checkCanSurvive");
		ObfuscationPart1.map.put("func_181100_a", "getHeight");
		ObfuscationPart1.map.put("func_181101_b", "getWidth");
		ObfuscationPart1.map.put("func_181117_a", "getFrontTopLeft");
		ObfuscationPart1.map.put("func_181118_d", "getWidth");
		ObfuscationPart1.map.put("func_181119_e", "getHeight");
		ObfuscationPart1.map.put("func_181123_a", "areNBTEquals");
		ObfuscationPart1.map.put("func_181124_a", "createNetworkManagerAndConnect");
		ObfuscationPart1.map.put("func_181138_a", "offset");
		ObfuscationPart1.map.put("func_181140_a", "removeEntity");
		ObfuscationPart1.map.put("func_181147_e", "shouldRenderClouds");
		ObfuscationPart1.map.put("func_181148_f", "isUsingNativeTransport");
		ObfuscationPart1.map.put("func_181155_a", "setActive");
		ObfuscationPart1.map.put("func_181156_c", "setPage");
		ObfuscationPart1.map.put("func_181157_b", "initializeClassLookup");
		ObfuscationPart1.map.put("func_181159_b", "atan2");
		ObfuscationPart1.map.put("func_181160_c", "pct");
		ObfuscationPart1.map.put("func_181161_i", "fastInvSqrt");
		ObfuscationPart1.map.put("func_181162_h", "frac");
		ObfuscationPart1.map.put("func_181535_r", "getMusicTicker");
		ObfuscationPart1.map.put("func_181536_a", "draw");
		ObfuscationPart1.map.put("func_181537_a", "setConnectedToRealms");
		ObfuscationPart1.map.put("func_181538_aA", "getCurrentAction");
		ObfuscationPart1.map.put("func_181539_aj", "getFrameTimer");
		ObfuscationPart1.map.put("func_181540_al", "isConnectedToRealms");
		ObfuscationPart1.map.put("func_181544_b", "setSeaLevel");
		ObfuscationPart1.map.put("func_181545_F", "getSeaLevel");
		ObfuscationPart1.map.put("func_181550_a", "updateBoundingBox");
		ObfuscationPart1.map.put("func_181551_a", "renderSelectedItem");
		ObfuscationPart1.map.put("func_181552_c", "getFrameColor");
		ObfuscationPart1.map.put("func_181553_a", "blendColors");
		ObfuscationPart1.map.put("func_181554_e", "renderLagometer");
		ObfuscationPart1.map.put("func_181558_a", "playMusic");
		ObfuscationPart1.map.put("func_181559_a", "renderChar");
		ObfuscationPart1.map.put("func_181560_a", "updateCameraAndRender");
		ObfuscationPart1.map.put("func_181562_a", "getRenderChunkOffset");
		ObfuscationPart1.map.put("func_181564_a", "renderItem");
		ObfuscationPart1.map.put("func_181565_a", "draw");
		ObfuscationPart1.map.put("func_181617_a", "runTask");
		ObfuscationPart1.map.put("func_181623_g", "canSpawnInBlock");
		ObfuscationPart1.map.put("func_181624_a", "isTwoByTwoOfType");
		ObfuscationPart1.map.put("func_181627_a", "createLoadingCache");
		ObfuscationPart1.map.put("func_181631_a", "crosSection");
		ObfuscationPart1.map.put("func_181632_a", "placeVine");
		ObfuscationPart1.map.put("func_181638_a", "placeTreeOfHeight");
		ObfuscationPart1.map.put("func_181639_b", "placeLogAt");
		ObfuscationPart1.map.put("func_181642_b", "placeLogAt");
		ObfuscationPart1.map.put("func_181647_a", "addVine");
		ObfuscationPart1.map.put("func_181650_b", "addHangingVine");
		ObfuscationPart1.map.put("func_181651_a", "addVine");
		ObfuscationPart1.map.put("func_181652_a", "placeCocoa");
		ObfuscationPart1.map.put("func_181655_a", "generateWaterBox");
		ObfuscationPart1.map.put("func_181656_b", "hasNaN");
		ObfuscationPart1.map.put("func_181662_b", "pos");
		ObfuscationPart1.map.put("func_181663_c", "normal");
		ObfuscationPart1.map.put("func_181664_j", "getBufferSize");
		ObfuscationPart1.map.put("func_181665_a", "getDistanceSq");
		ObfuscationPart1.map.put("func_181666_a", "color");
		ObfuscationPart1.map.put("func_181667_k", "nextVertexFormatIndex");
		ObfuscationPart1.map.put("func_181668_a", "begin");
		ObfuscationPart1.map.put("func_181669_b", "color");
		ObfuscationPart1.map.put("func_181670_b", "growBuffer");
		ObfuscationPart1.map.put("func_181672_a", "getVertexState");
		ObfuscationPart1.map.put("func_181674_a", "sortVertexData");
		ObfuscationPart1.map.put("func_181675_d", "endVertex");
		ObfuscationPart1.map.put("func_181679_a", "draw");
		ObfuscationPart1.map.put("func_181681_a", "getTransform");
		ObfuscationPart1.map.put("func_181682_g", "getAllTransforms");
		ObfuscationPart1.map.put("func_181683_a", "getTransform");
		ObfuscationPart1.map.put("func_181687_c", "hasCustomTransform");
		ObfuscationPart1.map.put("func_181688_b", "getTransform");
		ObfuscationPart1.map.put("func_181689_a", "applyTransform");
		ObfuscationPart1.map.put("func_181701_a", "getBlockPosOffset16");
		ObfuscationPart1.map.put("func_181719_f", "getIntegerSize");
		ObfuscationPart1.map.put("func_181720_d", "getOffset");
		ObfuscationPart1.map.put("func_181721_a", "addElement");
		ObfuscationPart1.map.put("func_181722_a", "bufferData");
		ObfuscationPart1.map.put("func_181743_a", "addForClass");
		ObfuscationPart1.map.put("func_181746_c", "getFrames");
		ObfuscationPart1.map.put("func_181747_a", "addFrame");
		ObfuscationPart1.map.put("func_181748_a", "getLagometerValue");
		ObfuscationPart1.map.put("func_181749_a", "getLastIndex");
		ObfuscationPart1.map.put("func_181750_b", "getIndex");
		ObfuscationPart1.map.put("func_181751_b", "parseIndex");
		ObfuscationPart1.map.put("func_181756_a", "getInteger");
		ObfuscationPart1.map.put("func_181758_c", "hsvToRGB");
		ObfuscationPart1.map.put("func_183000_F", "onlyOpsCanSetNbt");
		ObfuscationPart1.map.put("func_183002_r", "shouldBroadcastConsoleToOps");
		ObfuscationPart1.map.put("func_183005_a", "isThereOneNegativeScale");
		ObfuscationPart1.map.put("func_183006_b", "isMovePlayerPacketInvalid");
		ObfuscationPart1.map.put("func_183013_b", "writeChunkData");
		ObfuscationPart1.map.put("func_183019_a", "getResourcePackFormat");
		ObfuscationPart1.map.put("func_183023_f", "bypassesPlayerLimit");
		ObfuscationPart1.map.put("func_183024_b", "bypassesPlayerLimit");
		ObfuscationPart1.map.put("func_183026_b", "bypassesPlayerLimit");
		ObfuscationPart1.map.put("func_183027_f", "getPackFormat");
		ObfuscationPart1.map.put("func_183028_i", "deleteOldServerResourcesPacks");
		ObfuscationPart1.map.put("func_183029_j", "getCpu");
		ObfuscationPart1.map.put("func_183500_a", "setGuiSize");
		ObfuscationPart1.map.put("func_183501_a", "areRealmsNotificationsEnabled");
		ObfuscationPart1.map.put("func_184044_a", "renderHotbarItem");
		ObfuscationPart1.map.put("func_184045_a", "renderAttackIndicator");
		ObfuscationPart1.map.put("func_184046_j", "getBossOverlay");
		ObfuscationPart1.map.put("func_184047_e", "renderMountHealth");
		ObfuscationPart1.map.put("func_184048_a", "renderPotionEffects");
		ObfuscationPart1.map.put("func_184051_a", "renderBossHealth");
		ObfuscationPart1.map.put("func_184052_a", "render");
		ObfuscationPart1.map.put("func_184053_e", "shouldDarkenSky");
		ObfuscationPart1.map.put("func_184054_d", "shouldPlayEndBossMusic");
		ObfuscationPart1.map.put("func_184055_a", "read");
		ObfuscationPart1.map.put("func_184056_f", "shouldCreateFog");
		ObfuscationPart1.map.put("func_184057_b", "clearBossInfos");
		ObfuscationPart1.map.put("func_184067_a", "soundPlay");
		ObfuscationPart1.map.put("func_184068_a", "renderSubtitles");
		ObfuscationPart1.map.put("func_184072_a", "setCompletions");
		ObfuscationPart1.map.put("func_184073_g", "updateMode");
		ObfuscationPart1.map.put("func_184074_h", "nextMode");
		ObfuscationPart1.map.put("func_184075_a", "updateGui");
		ObfuscationPart1.map.put("func_184076_j", "updateAutoExec");
		ObfuscationPart1.map.put("func_184077_i", "updateConditional");
		ObfuscationPart1.map.put("func_184087_a", "updateCommandOutput");
		ObfuscationPart1.map.put("func_184097_a", "getDisplayString");
		ObfuscationPart1.map.put("func_184098_a", "handleMouseClick");
		ObfuscationPart1.map.put("func_184102_h", "getServer");
		ObfuscationPart1.map.put("func_184103_al", "getPlayerList");
		ObfuscationPart1.map.put("func_184104_a", "getTabCompletions");
		ObfuscationPart1.map.put("func_184105_a", "setPlayerList");
		ObfuscationPart1.map.put("func_184106_y", "isWorldIconSet");
		ObfuscationPart1.map.put("func_184107_a", "applyServerIconToResponse");
		ObfuscationPart1.map.put("func_184108_a", "getSpawnRadius");
		ObfuscationPart1.map.put("func_184109_z", "getWorldIconFile");
		ObfuscationPart1.map.put("func_184113_aK", "loadResourcePackSHA");
		ObfuscationPart1.map.put("func_184117_aA", "processKeyBinds");
		ObfuscationPart1.map.put("func_184118_az", "runTickKeyboard");
		ObfuscationPart1.map.put("func_184119_a", "storeTEInStack");
		ObfuscationPart1.map.put("func_184121_ak", "getRenderPartialTicks");
		ObfuscationPart1.map.put("func_184122_c", "processKeyF3");
		ObfuscationPart1.map.put("func_184123_d", "getVersionType");
		ObfuscationPart1.map.put("func_184124_aB", "runTickMouse");
		ObfuscationPart1.map.put("func_184125_al", "getBlockColors");
		ObfuscationPart1.map.put("func_184126_aj", "getDataFixer");
		ObfuscationPart1.map.put("func_184133_a", "playSound");
		ObfuscationPart1.map.put("func_184134_a", "playSound");
		ObfuscationPart1.map.put("func_184135_a", "sendPacketToServer");
		ObfuscationPart1.map.put("func_184136_b", "getNearestPlayerNotCreative");
		ObfuscationPart1.map.put("func_184137_a", "getClosestPlayer");
		ObfuscationPart1.map.put("func_184138_a", "notifyBlockUpdate");
		ObfuscationPart1.map.put("func_184139_a", "getNearestAttackablePlayer");
		ObfuscationPart1.map.put("func_184141_c", "getGroundAboveSeaLevel");
		ObfuscationPart1.map.put("func_184142_a", "getNearestAttackablePlayer");
		ObfuscationPart1.map.put("func_184143_b", "collidesWithAnyBlock");
		ObfuscationPart1.map.put("func_184144_a", "getCollisionBoxes");
		ObfuscationPart1.map.put("func_184145_b", "isUpdateScheduled");
		ObfuscationPart1.map.put("func_184146_ak", "getLootTableManager");
		ObfuscationPart1.map.put("func_184147_l", "tickPlayers");
		ObfuscationPart1.map.put("func_184148_a", "playSound");
		ObfuscationPart1.map.put("func_184149_a", "playRecord");
		ObfuscationPart1.map.put("func_184150_a", "getNearestAttackablePlayer");
		ObfuscationPart1.map.put("func_184153_a", "showBarrierParticles");
		ObfuscationPart1.map.put("func_184154_a", "refreshVisibleChunks");
		ObfuscationPart1.map.put("func_184156_a", "playSound");
		ObfuscationPart1.map.put("func_184159_a", "sendPacketWithinDistance");
		ObfuscationPart1.map.put("func_184161_a", "spawnParticle");
		ObfuscationPart1.map.put("func_184162_i", "playerCheckLight");
		ObfuscationPart1.map.put("func_184163_y", "getStructureTemplateManager");
		ObfuscationPart1.map.put("func_184164_w", "getPlayerChunkMap");
		ObfuscationPart1.map.put("func_184165_i", "canAddEntity");
		ObfuscationPart1.map.put("func_184166_c", "saveAdditionalData");
		ObfuscationPart1.map.put("func_184167_a", "setSuccessCount");
		ObfuscationPart1.map.put("func_184172_bi", "getAdjustedHorizontalFacing");
		ObfuscationPart1.map.put("func_184173_H", "decrementTimeUntilPortal");
		ObfuscationPart1.map.put("func_184174_b", "setDropItemsWhenDead");
		ObfuscationPart1.map.put("func_184175_a", "getRecursivePassengersByType");
		ObfuscationPart1.map.put("func_184176_by", "getSoundCategory");
		ObfuscationPart1.map.put("func_184177_bl", "getRenderBoundingBox");
		ObfuscationPart1.map.put("func_184178_b", "addTrackingPlayer");
		ObfuscationPart1.map.put("func_184179_bs", "getControllingPassenger");
		ObfuscationPart1.map.put("func_184180_b", "getRecursivePassengersByType");
		ObfuscationPart1.map.put("func_184181_aa", "getSplashSound");
		ObfuscationPart1.map.put("func_184182_bu", "getRecursivePassengers");
		ObfuscationPart1.map.put("func_184183_bd", "getRenderDistanceWeight");
		ObfuscationPart1.map.put("func_184184_Z", "getSwimSound");
		ObfuscationPart1.map.put("func_184185_a", "playSound");
		ObfuscationPart1.map.put("func_184186_bw", "canPassengerSteer");
		ObfuscationPart1.map.put("func_184187_bx", "getRidingEntity");
		ObfuscationPart1.map.put("func_184188_bt", "getPassengers");
		ObfuscationPart1.map.put("func_184189_br", "setPositionNonDirty");
		ObfuscationPart1.map.put("func_184190_l", "applyOrientationToEntity");
		ObfuscationPart1.map.put("func_184191_r", "isOnSameTeam");
		ObfuscationPart1.map.put("func_184192_z", "getPushReaction");
		ObfuscationPart1.map.put("func_184193_aE", "getArmorInventoryList");
		ObfuscationPart1.map.put("func_184194_a", "isOnScoreboardTeam");
		ObfuscationPart1.map.put("func_184195_f", "setGlowing");
		ObfuscationPart1.map.put("func_184196_w", "isPassenger");
		ObfuscationPart1.map.put("func_184197_b", "removeTag");
		ObfuscationPart1.map.put("func_184198_c", "writeToNBTAtomically");
		ObfuscationPart1.map.put("func_184199_a", "applyPlayerInteraction");
		ObfuscationPart1.map.put("func_184200_o", "addPassenger");
		ObfuscationPart1.map.put("func_184201_a", "setItemStackToSlot");
		ObfuscationPart1.map.put("func_184202_aL", "isGlowing");
		ObfuscationPart1.map.put("func_184203_c", "removeTrackingPlayer");
		ObfuscationPart1.map.put("func_184204_a", "changeDimension");
		ObfuscationPart1.map.put("func_184205_a", "startRiding");
		ObfuscationPart1.map.put("func_184206_a", "notifyDataManagerChange");
		ObfuscationPart1.map.put("func_184207_aI", "isBeingRidden");
		ObfuscationPart1.map.put("func_184208_bv", "getLowestRidingEntity");
		ObfuscationPart1.map.put("func_184209_aF", "getEquipmentAndArmor");
		ObfuscationPart1.map.put("func_184210_p", "dismountRidingEntity");
		ObfuscationPart1.map.put("func_184211_a", "addTag");
		ObfuscationPart1.map.put("func_184212_Q", "getDataManager");
		ObfuscationPart1.map.put("func_184213_bq", "ignoreItemEntityData");
		ObfuscationPart1.map.put("func_184214_aD", "getHeldEquipment");
		ObfuscationPart1.map.put("func_184215_y", "isRidingOrBeingRiddenBy");
		ObfuscationPart1.map.put("func_184216_O", "getTags");
		ObfuscationPart1.map.put("func_184217_a", "getMirroredYaw");
		ObfuscationPart1.map.put("func_184218_aH", "isRiding");
		ObfuscationPart1.map.put("func_184219_q", "canFitPassenger");
		ObfuscationPart1.map.put("func_184220_m", "startRiding");
		ObfuscationPart1.map.put("func_184221_a", "setUniqueId");
		ObfuscationPart1.map.put("func_184222_aU", "isNonBoss");
		ObfuscationPart1.map.put("func_184223_x", "isRidingSameEntity");
		ObfuscationPart1.map.put("func_184224_h", "setEntityInvulnerable");
		ObfuscationPart1.map.put("func_184225_p", "removePassenger");
		ObfuscationPart1.map.put("func_184226_ay", "removePassengers");
		ObfuscationPart1.map.put("func_184227_b", "setRenderDistanceWeight");
		ObfuscationPart1.map.put("func_184228_n", "canBeRidden");
		ObfuscationPart1.map.put("func_184229_a", "getRotatedYaw");
		ObfuscationPart1.map.put("func_184230_a", "processInitialInteract");
		ObfuscationPart1.map.put("func_184231_a", "updateFallState");
		ObfuscationPart1.map.put("func_184232_k", "updatePassenger");
		ObfuscationPart1.map.put("func_184249_c", "setConditionMet");
		ObfuscationPart1.map.put("func_184250_a", "setPowered");
		ObfuscationPart1.map.put("func_184251_i", "getMode");
		ObfuscationPart1.map.put("func_184252_d", "setSendToClient");
		ObfuscationPart1.map.put("func_184253_b", "setAuto");
		ObfuscationPart1.map.put("func_184254_e", "isAuto");
		ObfuscationPart1.map.put("func_184255_d", "isPowered");
		ObfuscationPart1.map.put("func_184256_g", "isConditionMet");
		ObfuscationPart1.map.put("func_184257_h", "isSendToClient");
		ObfuscationPart1.map.put("func_184258_j", "isConditional");
		ObfuscationPart1.map.put("func_184263_a", "create");
		ObfuscationPart1.map.put("func_184264_v", "getType");
		ObfuscationPart1.map.put("func_184276_b", "getLootTable");
		ObfuscationPart1.map.put("func_184279_f", "isBeaconEffect");
		ObfuscationPart1.map.put("func_184281_d", "fillWithLoot");
		ObfuscationPart1.map.put("func_184282_c", "checkLootAndWrite");
		ObfuscationPart1.map.put("func_184283_b", "checkLootAndRead");
		ObfuscationPart1.map.put("func_184288_f", "addLoot");
		ObfuscationPart1.map.put("func_184289_a", "setLootTable");
		ObfuscationPart1.map.put("func_184292_a", "getCaptureItems");
		ObfuscationPart1.map.put("func_184293_a", "setProfileCache");
		ObfuscationPart1.map.put("func_184294_a", "setSessionService");
		ObfuscationPart1.map.put("func_184295_a", "getAnimationProgress");
		ObfuscationPart1.map.put("func_184300_h", "triggerCooldown");
		ObfuscationPart1.map.put("func_184301_a", "getChunkFromChunkCoords");
		ObfuscationPart1.map.put("func_184302_e", "getSpawnPercent");
		ObfuscationPart1.map.put("func_184303_j", "findExitPosition");
		ObfuscationPart1.map.put("func_184304_i", "getParticleAmount");
		ObfuscationPart1.map.put("func_184305_g", "getCooldownPercent");
		ObfuscationPart1.map.put("func_184306_a", "teleportEntity");
		ObfuscationPart1.map.put("func_184307_a", "findSpawnpointInChunk");
		ObfuscationPart1.map.put("func_184308_a", "findHighestBlock");
		ObfuscationPart1.map.put("func_184309_b", "isSpawning");
		ObfuscationPart1.map.put("func_184310_d", "isCoolingDown");
		ObfuscationPart1.map.put("func_184311_k", "findExitPortal");
		ObfuscationPart1.map.put("func_184312_b", "createExitPortal");
		ObfuscationPart1.map.put("func_184313_a", "shouldRenderFace");
		ObfuscationPart1.map.put("func_184319_a", "getAABB");
		ObfuscationPart1.map.put("func_184320_e", "getExtendedProgress");
		ObfuscationPart1.map.put("func_184321_a", "getAABB");
		ObfuscationPart1.map.put("func_184322_i", "moveCollidedEntities");
		ObfuscationPart1.map.put("func_184323_a", "handleMoveVehicle");
		ObfuscationPart1.map.put("func_184324_a", "handleCooldown");
		ObfuscationPart1.map.put("func_184325_a", "handleUpdateBossInfo");
		ObfuscationPart1.map.put("func_184326_a", "processChunkUnload");
		ObfuscationPart1.map.put("func_184327_a", "handleSoundEffect");
		ObfuscationPart1.map.put("func_184328_a", "handleSetPassengers");
		ObfuscationPart1.map.put("func_184329_a", "handleCustomSound");
		ObfuscationPart1.map.put("func_184330_a", "handlePlayerPosLook");
		ObfuscationPart1.map.put("func_184337_a", "processTryUseItemOnBlock");
		ObfuscationPart1.map.put("func_184338_a", "processVehicleMove");
		ObfuscationPart1.map.put("func_184339_a", "processConfirmTeleport");
		ObfuscationPart1.map.put("func_184340_a", "processSteerBoat");
		ObfuscationPart1.map.put("func_184341_b", "isMoveVehiclePacketInvalid");
		ObfuscationPart1.map.put("func_184342_d", "captureCurrentPosition");
		ObfuscationPart1.map.put("func_184364_b", "getSound");
		ObfuscationPart1.map.put("func_184365_d", "getCategory");
		ObfuscationPart1.map.put("func_184366_a", "createAccessor");
		ObfuscationPart1.map.put("func_184370_a", "getMusicRecord");
		ObfuscationPart1.map.put("func_184371_a", "getMasterRecord");
		ObfuscationPart1.map.put("func_184372_a", "getRecordSoundRecord");
		ObfuscationPart1.map.put("func_184373_n", "createWorldIcon");
		ObfuscationPart1.map.put("func_184375_a", "playSoundToAllNearExcept");
		ObfuscationPart1.map.put("func_184376_a", "notifyBlockUpdate");
		ObfuscationPart1.map.put("func_184377_a", "playRecord");
		ObfuscationPart1.map.put("func_184378_a", "didBlockChange");
		ObfuscationPart1.map.put("func_184382_g", "getRenderedChunks");
		ObfuscationPart1.map.put("func_184383_a", "isOutlineActive");
		ObfuscationPart1.map.put("func_184384_n", "hasNoChunkUpdates");
		ObfuscationPart1.map.put("func_184385_a", "markBlocksForUpdate");
		ObfuscationPart1.map.put("func_184389_a", "getModelForState");
		ObfuscationPart1.map.put("func_184391_a", "renderItemAndEffectIntoGUI");
		ObfuscationPart1.map.put("func_184392_a", "renderItem");
		ObfuscationPart1.map.put("func_184393_a", "getItemModelWithOverrides");
		ObfuscationPart1.map.put("func_184394_a", "renderItemModel");
		ObfuscationPart1.map.put("func_184396_a", "getResourceLocation");
		ObfuscationPart1.map.put("func_184397_a", "generateMipmaps");
		ObfuscationPart1.map.put("func_184398_a", "getAccessor");
		ObfuscationPart1.map.put("func_184399_a", "setSoundLevel");
		ObfuscationPart1.map.put("func_184400_b", "removeListener");
		ObfuscationPart1.map.put("func_184401_a", "validateSoundResource");
		ObfuscationPart1.map.put("func_184402_a", "addListener");
		ObfuscationPart1.map.put("func_184403_b", "getFlowerItemStack");
		ObfuscationPart1.map.put("func_184404_a", "setName");
		ObfuscationPart1.map.put("func_184405_a", "setMode");
		ObfuscationPart1.map.put("func_184406_a", "setIgnoresEntities");
		ObfuscationPart1.map.put("func_184408_a", "setRotation");
		ObfuscationPart1.map.put("func_184409_c", "setSize");
		ObfuscationPart1.map.put("func_184410_b", "setMetadata");
		ObfuscationPart1.map.put("func_184411_a", "setMirror");
		ObfuscationPart1.map.put("func_184412_n", "load");
		ObfuscationPart1.map.put("func_184414_b", "setPosition");
		ObfuscationPart1.map.put("func_184415_a", "filterRelatedCornerBlocks");
		ObfuscationPart1.map.put("func_184416_a", "calculateEnclosingBoundingBox");
		ObfuscationPart1.map.put("func_184417_l", "detectSize");
		ObfuscationPart1.map.put("func_184418_a", "getNearbyCornerBlocks");
		ObfuscationPart1.map.put("func_184419_m", "save");
		ObfuscationPart1.map.put("func_184429_b", "getSlotFor");
		ObfuscationPart1.map.put("func_184430_d", "pickItem");
		ObfuscationPart1.map.put("func_184431_b", "stackEqualExact");
		ObfuscationPart1.map.put("func_184432_b", "canHarvestBlock");
		ObfuscationPart1.map.put("func_184433_k", "getBestHotbarSlot");
		ObfuscationPart1.map.put("func_184434_a", "setPickedItemStack");
		ObfuscationPart1.map.put("func_184435_e", "isHotbar");
		ObfuscationPart1.map.put("func_184436_a", "canMergeStacks");
		ObfuscationPart1.map.put("func_184437_d", "deleteStack");
		ObfuscationPart1.map.put("func_184438_a", "getDestroySpeed");
		ObfuscationPart1.map.put("func_184441_l", "getBoatGlide");
		ObfuscationPart1.map.put("func_184442_a", "updateInputs");
		ObfuscationPart1.map.put("func_184443_x", "controlBoat");
		ObfuscationPart1.map.put("func_184444_v", "getUnderwaterStatus");
		ObfuscationPart1.map.put("func_184445_a", "setPaddleState");
		ObfuscationPart1.map.put("func_184446_u", "checkInWater");
		ObfuscationPart1.map.put("func_184447_s", "tickLerp");
		ObfuscationPart1.map.put("func_184448_a", "getRowingTime");
		ObfuscationPart1.map.put("func_184449_t", "getBoatStatus");
		ObfuscationPart1.map.put("func_184450_w", "updateMotion");
		ObfuscationPart1.map.put("func_184451_k", "getWaterLevelAbove");
		ObfuscationPart1.map.put("func_184453_r", "getBoatType");
		ObfuscationPart1.map.put("func_184454_a", "applyYawToEntity");
		ObfuscationPart1.map.put("func_184455_j", "getItemBoat");
		ObfuscationPart1.map.put("func_184457_a", "getPaddleState");
		ObfuscationPart1.map.put("func_184458_a", "setBoatType");
		ObfuscationPart1.map.put("func_184481_a", "setOwner");
		ObfuscationPart1.map.put("func_184482_a", "setColor");
		ObfuscationPart1.map.put("func_184483_a", "setRadius");
		ObfuscationPart1.map.put("func_184484_a", "setPotion");
		ObfuscationPart1.map.put("func_184485_d", "setWaitTime");
		ObfuscationPart1.map.put("func_184486_b", "setDuration");
		ObfuscationPart1.map.put("func_184487_c", "setRadiusPerTick");
		ObfuscationPart1.map.put("func_184488_a", "setIgnoreRadius");
		ObfuscationPart1.map.put("func_184489_o", "getDuration");
		ObfuscationPart1.map.put("func_184490_j", "getRadius");
		ObfuscationPart1.map.put("func_184491_a", "setParticle");
		ObfuscationPart1.map.put("func_184492_k", "getColor");
		ObfuscationPart1.map.put("func_184493_l", "getParticle");
		ObfuscationPart1.map.put("func_184494_w", "getOwner");
		ObfuscationPart1.map.put("func_184495_b", "setRadiusOnUse");
		ObfuscationPart1.map.put("func_184496_a", "addEffect");
		ObfuscationPart1.map.put("func_184497_n", "shouldIgnoreRadius");
		ObfuscationPart1.map.put("func_184514_c", "xpToDurability");
		ObfuscationPart1.map.put("func_184515_b", "durabilityToXp");
		ObfuscationPart1.map.put("func_184516_a", "setBeamTarget");
		ObfuscationPart1.map.put("func_184517_a", "setShowBottom");
		ObfuscationPart1.map.put("func_184518_j", "getBeamTarget");
		ObfuscationPart1.map.put("func_184519_a", "onCrystalDestroyed");
		ObfuscationPart1.map.put("func_184520_k", "shouldShowBottom");
		ObfuscationPart1.map.put("func_184523_o", "playPlaceSound");
		ObfuscationPart1.map.put("func_184527_k", "bringInHookedEntity");
		ObfuscationPart1.map.put("func_184530_a", "setOrigin");
		ObfuscationPart1.map.put("func_184531_j", "getOrigin");
		ObfuscationPart1.map.put("func_184534_a", "setFuse");
		ObfuscationPart1.map.put("func_184535_k", "getFuseDataManager");
		ObfuscationPart1.map.put("func_184536_l", "getFuse");
		ObfuscationPart1.map.put("func_184538_a", "shoot");
		ObfuscationPart1.map.put("func_184541_a", "setItem");
		ObfuscationPart1.map.put("func_184542_a", "extinguishFires");
		ObfuscationPart1.map.put("func_184543_l", "getPotion");
		ObfuscationPart1.map.put("func_184544_n", "isLingering");
		ObfuscationPart1.map.put("func_184547_a", "shoot");
		ObfuscationPart1.map.put("func_184548_a", "arrowHit");
		ObfuscationPart1.map.put("func_184549_a", "onHit");
		ObfuscationPart1.map.put("func_184550_j", "getArrowStack");
		ObfuscationPart1.map.put("func_184551_a", "findEntityOnPath");
		ObfuscationPart1.map.put("func_184555_a", "setPotionEffect");
		ObfuscationPart1.map.put("func_184556_b", "spawnPotionParticles");
		ObfuscationPart1.map.put("func_184557_n", "getColor");
		ObfuscationPart1.map.put("func_184558_a", "addEffect");
		ObfuscationPart1.map.put("func_184563_j", "getParticleType");
		ObfuscationPart1.map.put("func_184564_k", "isFireballFiery");
		ObfuscationPart1.map.put("func_184567_a", "bulletHit");
		ObfuscationPart1.map.put("func_184568_a", "setDirection");
		ObfuscationPart1.map.put("func_184569_a", "selectNextMoveDirection");
		ObfuscationPart1.map.put("func_184581_c", "playHurtSound");
		ObfuscationPart1.map.put("func_184582_a", "getItemStackFromSlot");
		ObfuscationPart1.map.put("func_184583_d", "canBlockDamageSource");
		ObfuscationPart1.map.put("func_184584_a", "updateItemUse");
		ObfuscationPart1.map.put("func_184585_cz", "isActiveItemStackBlocking");
		ObfuscationPart1.map.put("func_184586_b", "getHeldItem");
		ObfuscationPart1.map.put("func_184587_cr", "isHandActive");
		ObfuscationPart1.map.put("func_184588_d", "getFallSound");
		ObfuscationPart1.map.put("func_184589_d", "removePotionEffect");
		ObfuscationPart1.map.put("func_184590_k", "damageShield");
		ObfuscationPart1.map.put("func_184591_cq", "getPrimaryHand");
		ObfuscationPart1.map.put("func_184592_cb", "getHeldItemOffhand");
		ObfuscationPart1.map.put("func_184593_a", "areAllPotionsAmbient");
		ObfuscationPart1.map.put("func_184594_b", "frostWalk");
		ObfuscationPart1.map.put("func_184595_k", "attemptTeleport");
		ObfuscationPart1.map.put("func_184596_c", "removeActivePotionEffect");
		ObfuscationPart1.map.put("func_184597_cx", "stopActiveHand");
		ObfuscationPart1.map.put("func_184598_c", "setActiveHand");
		ObfuscationPart1.map.put("func_184599_cB", "getTicksElytraFlying");
		ObfuscationPart1.map.put("func_184600_cs", "getActiveHand");
		ObfuscationPart1.map.put("func_184601_bQ", "getHurtSound");
		ObfuscationPart1.map.put("func_184602_cy", "resetActiveHand");
		ObfuscationPart1.map.put("func_184603_cC", "canBeHitWithPotion");
		ObfuscationPart1.map.put("func_184604_a", "canGoThroughtTrapDoorOnLadder");
		ObfuscationPart1.map.put("func_184605_cv", "getItemInUseCount");
		ObfuscationPart1.map.put("func_184606_a_", "playEquipSound");
		ObfuscationPart1.map.put("func_184607_cu", "getActiveItemStack");
		ObfuscationPart1.map.put("func_184608_ct", "updateActiveHand");
		ObfuscationPart1.map.put("func_184609_a", "swingArm");
		ObfuscationPart1.map.put("func_184610_a", "dropLoot");
		ObfuscationPart1.map.put("func_184611_a", "setHeldItem");
		ObfuscationPart1.map.put("func_184612_cw", "getItemInUseMaxCount");
		ObfuscationPart1.map.put("func_184613_cA", "isElytraFlying");
		ObfuscationPart1.map.put("func_184614_ca", "getHeldItemMainhand");
		ObfuscationPart1.map.put("func_184615_bR", "getDeathSound");
		ObfuscationPart1.map.put("func_184616_r", "updateElytra");
		ObfuscationPart1.map.put("func_184636_a", "getArmorByChance");
		ObfuscationPart1.map.put("func_184638_cS", "isLeftHanded");
		ObfuscationPart1.map.put("func_184639_G", "getAmbientSound");
		ObfuscationPart1.map.put("func_184640_d", "getSlotForItemStack");
		ObfuscationPart1.map.put("func_184641_n", "setLeftHanded");
		ObfuscationPart1.map.put("func_184642_a", "setDropChance");
		ObfuscationPart1.map.put("func_184643_a", "getPathPriority");
		ObfuscationPart1.map.put("func_184644_a", "setPathPriority");
		ObfuscationPart1.map.put("func_184645_a", "processInteract");
		ObfuscationPart1.map.put("func_184646_p", "setMoveStrafing");
		ObfuscationPart1.map.put("func_184647_J", "getLootTable");
		ObfuscationPart1.map.put("func_184648_b", "isItemStackInSlot");
		ObfuscationPart1.map.put("func_184649_cE", "getHorizontalFaceSpeed");
		ObfuscationPart1.map.put("func_184650_s", "createBodyHelper");
		ObfuscationPart1.map.put("func_184651_r", "initEntityAI");
		ObfuscationPart1.map.put("func_184652_a", "canBeLeashedTo");
		ObfuscationPart1.map.put("func_184662_q", "getHeadYOffset");
		ObfuscationPart1.map.put("func_184663_l", "getNearestPpIdx");
		ObfuscationPart1.map.put("func_184664_cU", "getFightManager");
		ObfuscationPart1.map.put("func_184665_a", "getHeadLookVec");
		ObfuscationPart1.map.put("func_184666_a", "findPath");
		ObfuscationPart1.map.put("func_184667_a", "getHeadPartYOffset");
		ObfuscationPart1.map.put("func_184668_a", "dropExperience");
		ObfuscationPart1.map.put("func_184669_a", "makePath");
		ObfuscationPart1.map.put("func_184670_cT", "getPhaseManager");
		ObfuscationPart1.map.put("func_184671_o", "initPathPoints");
		ObfuscationPart1.map.put("func_184672_a", "onCrystalDestroyed");
		ObfuscationPart1.map.put("func_184684_db", "getPeekTick");
		ObfuscationPart1.map.put("func_184686_df", "isClosed");
		ObfuscationPart1.map.put("func_184688_a", "getClientPeekAmount");
		ObfuscationPart1.map.put("func_184689_o", "tryTeleportToNewPosition");
		ObfuscationPart1.map.put("func_184691_a", "updateArmorModifier");
		ObfuscationPart1.map.put("func_184692_dd", "getOldAttachPos");
		ObfuscationPart1.map.put("func_184693_dc", "getClientTeleportInterp");
		ObfuscationPart1.map.put("func_184694_g", "setAttachmentPos");
		ObfuscationPart1.map.put("func_184696_cZ", "getAttachmentFacing");
		ObfuscationPart1.map.put("func_184697_de", "isAttachedToBlock");
		ObfuscationPart1.map.put("func_184699_da", "getAttachmentPos");
		ObfuscationPart1.map.put("func_184709_cY", "getSquishSound");
		ObfuscationPart1.map.put("func_184710_cZ", "getJumpSound");
		ObfuscationPart1.map.put("func_184716_o", "playEndermanSound");
		ObfuscationPart1.map.put("func_184724_a", "setSwingingArms");
		ObfuscationPart1.map.put("func_184725_db", "isSwingingArms");
		ObfuscationPart1.map.put("func_184730_o", "isDrinkingPotion");
		ObfuscationPart1.map.put("func_184733_a", "setArmsRaised");
		ObfuscationPart1.map.put("func_184734_db", "isArmsRaised");
		ObfuscationPart1.map.put("func_184747_a", "setPumpkinEquipped");
		ObfuscationPart1.map.put("func_184748_o", "isPumpkinEquipped");
		ObfuscationPart1.map.put("func_184753_b", "getOwnerId");
		ObfuscationPart1.map.put("func_184754_b", "setOwnerId");
		ObfuscationPart1.map.put("func_184762_da", "boost");
		ObfuscationPart1.map.put("func_184770_cZ", "startJumping");
		ObfuscationPart1.map.put("func_184771_da", "getJumpSound");
		ObfuscationPart1.map.put("func_184772_dk", "getRandomRabbitType");
		ObfuscationPart1.map.put("func_184775_b", "handleStartJump");
		ObfuscationPart1.map.put("func_184776_b", "canJump");
		ObfuscationPart1.map.put("func_184777_r_", "handleStopJump");
		ObfuscationPart1.map.put("func_184779_b", "setOwnerUniqueId");
		ObfuscationPart1.map.put("func_184780_dh", "getOwnerUniqueId");
		ObfuscationPart1.map.put("func_184783_dl", "getHorseArmorType");
		ObfuscationPart1.map.put("func_184785_dv", "getAngrySound");
		ObfuscationPart1.map.put("func_184795_a", "swapItem");
		ObfuscationPart1.map.put("func_184796_b", "isDisabled");
		ObfuscationPart1.map.put("func_184797_a", "setBit");
		ObfuscationPart1.map.put("func_184808_cD", "updateSize");
		ObfuscationPart1.map.put("func_184809_a", "displayGuiEditCommandCart");
		ObfuscationPart1.map.put("func_184810_cG", "spawnSweepParticles");
		ObfuscationPart1.map.put("func_184811_cZ", "getCooldownTracker");
		ObfuscationPart1.map.put("func_184812_l_", "isCreative");
		ObfuscationPart1.map.put("func_184813_a", "getDigSpeed");
		ObfuscationPart1.map.put("func_184814_a", "openBook");
		ObfuscationPart1.map.put("func_184815_l", "createCooldownTracker");
		ObfuscationPart1.map.put("func_184816_a", "dropItemAndGetStack");
		ObfuscationPart1.map.put("func_184817_da", "getLuck");
		ObfuscationPart1.map.put("func_184818_cX", "getCooldownPeriod");
		ObfuscationPart1.map.put("func_184819_a", "setPrimaryHand");
		ObfuscationPart1.map.put("func_184820_o", "updateCape");
		ObfuscationPart1.map.put("func_184821_cY", "resetCooldown");
		ObfuscationPart1.map.put("func_184823_b", "canHarvestBlock");
		ObfuscationPart1.map.put("func_184824_a", "displayGuiCommandBlock");
		ObfuscationPart1.map.put("func_184825_o", "getCooledAttackStrength");
		ObfuscationPart1.map.put("func_184826_a", "openGuiHorseInventory");
		ObfuscationPart1.map.put("func_184833_s", "isPlayerInfoSet");
		ObfuscationPart1.map.put("func_184834_t", "getLocationElytra");
		ObfuscationPart1.map.put("func_184838_M", "isRowingBoat");
		ObfuscationPart1.map.put("func_184839_n", "setPermissionLevel");
		ObfuscationPart1.map.put("func_184840_I", "getPermissionLevel");
		ObfuscationPart1.map.put("func_184846_L", "clearInvulnerableDimensionChange");
		ObfuscationPart1.map.put("func_184847_M", "setElytraFlying");
		ObfuscationPart1.map.put("func_184848_d", "addEntity");
		ObfuscationPart1.map.put("func_184849_a", "updateScorePoints");
		ObfuscationPart1.map.put("func_184850_K", "isInvulnerableDimensionChange");
		ObfuscationPart1.map.put("func_184861_a", "setVersionTooltip");
		ObfuscationPart1.map.put("func_184862_a", "postInit");
		ObfuscationPart1.map.put("func_184863_a", "selectWorld");
		ObfuscationPart1.map.put("func_184870_b", "getClickedComponentAt");
		ObfuscationPart1.map.put("func_184876_a", "getCoordinateInfo");
		ObfuscationPart1.map.put("func_184878_a", "getLastElement");
		ObfuscationPart1.map.put("func_184879_a", "getServer");
		ObfuscationPart1.map.put("func_184881_a", "execute");
		ObfuscationPart1.map.put("func_184882_a", "checkPermission");
		ObfuscationPart1.map.put("func_184883_a", "getTabCompletions");
		ObfuscationPart1.map.put("func_184884_a", "getEntity");
		ObfuscationPart1.map.put("func_184885_b", "getEntity");
		ObfuscationPart1.map.put("func_184886_d", "getPlayerName");
		ObfuscationPart1.map.put("func_184887_a", "entityToNBT");
		ObfuscationPart1.map.put("func_184888_a", "getPlayer");
		ObfuscationPart1.map.put("func_184889_a", "toSyntaxException");
		ObfuscationPart1.map.put("func_184890_c", "getEntityList");
		ObfuscationPart1.map.put("func_184891_e", "getEntityName");
		ObfuscationPart1.map.put("func_184892_a", "banIp");
		ObfuscationPart1.map.put("func_184893_b", "getProfilerResults");
		ObfuscationPart1.map.put("func_184894_a", "saveProfilerResults");
		ObfuscationPart1.map.put("func_184895_a", "appendProfilerResults");
		ObfuscationPart1.map.put("func_184896_a", "setDefaultGameType");
		ObfuscationPart1.map.put("func_184897_a", "getOverWorldGameRules");
		ObfuscationPart1.map.put("func_184898_a", "notifyGameRuleChange");
		ObfuscationPart1.map.put("func_184899_a", "getCommandMap");
		ObfuscationPart1.map.put("func_184900_a", "getSortedPossibleCommands");
		ObfuscationPart1.map.put("func_184903_a", "convertToObjective");
		ObfuscationPart1.map.put("func_184904_b", "getTriggerNames");
		ObfuscationPart1.map.put("func_184905_a", "removeObjective");
		ObfuscationPart1.map.put("func_184906_o", "applyPlayerOperation");
		ObfuscationPart1.map.put("func_184907_n", "testPlayerScore");
		ObfuscationPart1.map.put("func_184908_a", "addObjective");
		ObfuscationPart1.map.put("func_184909_b", "handleUserWildcards");
		ObfuscationPart1.map.put("func_184910_b", "addTeam");
		ObfuscationPart1.map.put("func_184911_g", "leaveTeam");
		ObfuscationPart1.map.put("func_184912_l", "resetPlayerScore");
		ObfuscationPart1.map.put("func_184913_a", "getScoreboard");
		ObfuscationPart1.map.put("func_184914_m", "enablePlayerTrigger");
		ObfuscationPart1.map.put("func_184915_a", "convertToTeam");
		ObfuscationPart1.map.put("func_184916_f", "joinTeam");
		ObfuscationPart1.map.put("func_184917_h", "emptyTeam");
		ObfuscationPart1.map.put("func_184918_k", "addPlayerScore");
		ObfuscationPart1.map.put("func_184919_i", "setDisplayObjective");
		ObfuscationPart1.map.put("func_184920_j", "listPlayers");
		ObfuscationPart1.map.put("func_184921_d", "removeTeam");
		ObfuscationPart1.map.put("func_184922_e", "listTeams");
		ObfuscationPart1.map.put("func_184923_c", "setTeamOption");
		ObfuscationPart1.map.put("func_184924_a", "applyPlayerTag");
		ObfuscationPart1.map.put("func_184925_a", "listObjectives");
		ObfuscationPart1.map.put("func_184926_a", "getObjectiveNames");
		ObfuscationPart1.map.put("func_184927_a", "getObjectiveNames");
		ObfuscationPart1.map.put("func_184928_b", "incrementAllWorldTimes");
		ObfuscationPart1.map.put("func_184929_a", "setAllWorldTimes");
		ObfuscationPart1.map.put("func_184930_a", "toggleRainfall");
		ObfuscationPart1.map.put("func_184931_a", "getWorldBorder");
		ObfuscationPart1.map.put("func_184932_a", "setCommandStatForSender");
		ObfuscationPart1.map.put("func_184951_f", "getTagPredicates");
		ObfuscationPart1.map.put("func_184952_c", "getScorePredicates");
		ObfuscationPart1.map.put("func_184954_b", "getName");
		ObfuscationPart1.map.put("func_184955_a", "getById");
		ObfuscationPart1.map.put("func_184956_a", "getId");
		ObfuscationPart1.map.put("func_184979_a", "byId");
		ObfuscationPart1.map.put("func_184980_a", "getName");
		ObfuscationPart1.map.put("func_184981_a", "getTypeFromString");
		ObfuscationPart1.map.put("func_184982_b", "getMetadata");
		ObfuscationPart1.map.put("func_184993_a", "setNextSpawnData");
		ObfuscationPart1.map.put("func_184994_d", "getCachedEntity");
		ObfuscationPart1.map.put("func_184996_a", "slotClick");
		ObfuscationPart1.map.put("func_185000_c", "broadcastData");
		ObfuscationPart1.map.put("func_185004_b_", "isValidBrewingFuel");
		ObfuscationPart1.map.put("func_185017_b", "getSoundEvent");
		ObfuscationPart1.map.put("func_185040_i", "hasCustomProperties");
		ObfuscationPart1.map.put("func_185043_a", "addPropertyOverride");
		ObfuscationPart1.map.put("func_185045_a", "getPropertyGetter");
		ObfuscationPart1.map.put("func_185052_a", "createArrow");
		ObfuscationPart1.map.put("func_185054_a", "appendHoverTextFromTileEntityTag");
		ObfuscationPart1.map.put("func_185055_a", "makeState");
		ObfuscationPart1.map.put("func_185058_h_", "isArrow");
		ObfuscationPart1.map.put("func_185059_b", "getArrowVelocity");
		ObfuscationPart1.map.put("func_185060_a", "findAmmo");
		ObfuscationPart1.map.put("func_185061_a", "turnBottleIntoItem");
		ObfuscationPart1.map.put("func_185063_a", "scaleMap");
		ObfuscationPart1.map.put("func_185064_b", "enableMapTracking");
		ObfuscationPart1.map.put("func_185069_d", "isUsable");
		ObfuscationPart1.map.put("func_185070_a", "setPotionEffect");
		ObfuscationPart1.map.put("func_185071_a", "setBlock");
		ObfuscationPart1.map.put("func_185074_a", "getBySound");
		ObfuscationPart1.map.put("func_185075_h", "getSound");
		ObfuscationPart1.map.put("func_185078_a", "applyEntityIdToItemStack");
		ObfuscationPart1.map.put("func_185079_a", "applyItemEntityDataToEntity");
		ObfuscationPart1.map.put("func_185082_a", "dispenseArmor");
		ObfuscationPart1.map.put("func_185083_B_", "getEquipmentSlot");
		ObfuscationPart1.map.put("func_185085_a", "apply");
		ObfuscationPart1.map.put("func_185087_a", "wobble");
		ObfuscationPart1.map.put("func_185092_a", "getSpawnToAngle");
		ObfuscationPart1.map.put("func_185093_a", "wobble");
		ObfuscationPart1.map.put("func_185094_a", "getFrameRotation");
		ObfuscationPart1.map.put("func_185108_a", "getById");
		ObfuscationPart1.map.put("func_185110_a", "getModeId");
		ObfuscationPart1.map.put("func_185119_l", "getHorizontalAngle");
		ObfuscationPart1.map.put("func_185129_a", "addAttributeModifier");
		ObfuscationPart1.map.put("func_185132_d", "areItemsEqualIgnoreDurability");
		ObfuscationPart1.map.put("func_185136_b", "isItemEqualIgnoreDurability");
		ObfuscationPart1.map.put("func_185140_b", "notifyOnSet");
		ObfuscationPart1.map.put("func_185141_a", "hasCooldown");
		ObfuscationPart1.map.put("func_185142_b", "removeCooldown");
		ObfuscationPart1.map.put("func_185143_a", "getCooldown");
		ObfuscationPart1.map.put("func_185144_a", "tick");
		ObfuscationPart1.map.put("func_185145_a", "setCooldown");
		ObfuscationPart1.map.put("func_185146_c", "notifyOnRemove");
		ObfuscationPart1.map.put("func_185168_a", "getPotionTypeForName");
		ObfuscationPart1.map.put("func_185170_a", "getEffects");
		ObfuscationPart1.map.put("func_185172_c", "hasInstantEffect");
		ObfuscationPart1.map.put("func_185173_a", "registerPotionType");
		ObfuscationPart1.map.put("func_185174_b", "getNamePrefixed");
		ObfuscationPart1.map.put("func_185175_b", "registerPotionTypes");
		ObfuscationPart1.map.put("func_185181_a", "getPotionColorFromEffectList");
		ObfuscationPart1.map.put("func_185182_a", "addPotionTooltip");
		ObfuscationPart1.map.put("func_185183_a", "getPotionColor");
		ObfuscationPart1.map.put("func_185184_a", "appendEffects");
		ObfuscationPart1.map.put("func_185185_a", "getEffectsFromTag");
		ObfuscationPart1.map.put("func_185186_a", "mergeEffects");
		ObfuscationPart1.map.put("func_185187_c", "getPotionTypeFromNBT");
		ObfuscationPart1.map.put("func_185188_a", "addPotionToItemStack");
		ObfuscationPart1.map.put("func_185189_a", "getEffectsFromStack");
		ObfuscationPart1.map.put("func_185190_b", "getFullEffectsFromItem");
		ObfuscationPart1.map.put("func_185191_c", "getPotionFromItem");
		ObfuscationPart1.map.put("func_185192_b", "getFullEffectsFromTag");
		ObfuscationPart1.map.put("func_185193_a", "addCustomPotionEffectToList");
		ObfuscationPart1.map.put("func_185203_b", "isItemConversionReagent");
		ObfuscationPart1.map.put("func_185205_a", "isReagent");
		ObfuscationPart1.map.put("func_185206_b", "hasItemConversions");
		ObfuscationPart1.map.put("func_185207_a", "init");
		ObfuscationPart1.map.put("func_185208_a", "hasConversions");
		ObfuscationPart1.map.put("func_185209_c", "hasTypeConversions");
		ObfuscationPart1.map.put("func_185211_c", "isTypeConversionReagent");
		ObfuscationPart1.map.put("func_185212_d", "doReaction");
		ObfuscationPart1.map.put("func_185217_a", "getRegisteredPotionType");
		ObfuscationPart1.map.put("func_185257_f", "registerEnchantments");
		ObfuscationPart1.map.put("func_185258_b", "getEnchantmentID");
		ObfuscationPart1.map.put("func_185260_a", "getEntityEquipment");
		ObfuscationPart1.map.put("func_185261_e", "isTreasureEnchantment");
		ObfuscationPart1.map.put("func_185262_c", "getEnchantmentByID");
		ObfuscationPart1.map.put("func_185266_a", "freezeNearby");
		ObfuscationPart1.map.put("func_185270_a", "getWeight");
		ObfuscationPart1.map.put("func_185277_b", "getNbt");
		ObfuscationPart1.map.put("func_185278_a", "toCompoundTag");
		ObfuscationPart1.map.put("func_185282_a", "removeIncompatible");
		ObfuscationPart1.map.put("func_185283_h", "getLootingModifier");
		ObfuscationPart1.map.put("func_185284_a", "getMaxEnchantmentLevel");
		ObfuscationPart1.map.put("func_185287_i", "getAquaAffinityModifier");
		ObfuscationPart1.map.put("func_185291_a", "getEnchantmentDatas");
		ObfuscationPart1.map.put("func_185292_c", "getRespirationModifier");
		ObfuscationPart1.map.put("func_185293_e", "getEfficiencyModifier");
		ObfuscationPart1.map.put("func_185294_d", "getDepthStriderModifier");
		ObfuscationPart1.map.put("func_185295_a", "getRegisteredEnchantment");
		ObfuscationPart1.map.put("func_185314_a", "getTypeName");
		ObfuscationPart1.map.put("func_185315_c", "getEnchantIncreasePerLevel");
		ObfuscationPart1.map.put("func_185316_b", "getMinimalEnchantability");
		ObfuscationPart1.map.put("func_185327_a", "getDistanceSq");
		ObfuscationPart1.map.put("func_185328_a", "parseGameTypeWithDefault");
		ObfuscationPart1.map.put("func_185329_a", "parseGameTypeWithDefault");
		ObfuscationPart1.map.put("func_185331_a", "isValidEmptySpawnBlock");
		ObfuscationPart1.map.put("func_185332_f", "getDistance");
		ObfuscationPart1.map.put("func_185334_h", "toImmutable");
		ObfuscationPart1.map.put("func_185336_p", "setY");
		ObfuscationPart1.map.put("func_185339_c", "retain");
		ObfuscationPart1.map.put("func_185342_g", "retain");
		ObfuscationPart1.map.put("func_185344_t", "release");
		ObfuscationPart1.map.put("func_185345_c", "retain");
		ObfuscationPart1.map.put("func_185346_s", "retain");
		ObfuscationPart1.map.put("func_185352_i", "ignorePlayerSpawnSuitability");
		ObfuscationPart1.map.put("func_185353_n", "getDefaultTemperature");
		ObfuscationPart1.map.put("func_185354_a", "registerBiome");
		ObfuscationPart1.map.put("func_185355_j", "getBaseHeight");
		ObfuscationPart1.map.put("func_185356_b", "getMutationForBiome");
		ObfuscationPart1.map.put("func_185357_a", "getBiomeForId");
		ObfuscationPart1.map.put("func_185358_q", "registerBiomes");
		ObfuscationPart1.map.put("func_185359_l", "getBiomeName");
		ObfuscationPart1.map.put("func_185360_m", "getHeightVariation");
		ObfuscationPart1.map.put("func_185361_o", "getWaterColor");
		ObfuscationPart1.map.put("func_185362_a", "getIdForBiome");
		ObfuscationPart1.map.put("func_185363_b", "isMutation");
		ObfuscationPart1.map.put("func_185378_a", "addDoublePlants");
		ObfuscationPart1.map.put("func_185379_b", "addMushrooms");
		ObfuscationPart1.map.put("func_185395_b", "setRainfall");
		ObfuscationPart1.map.put("func_185396_a", "setRainDisabled");
		ObfuscationPart1.map.put("func_185398_c", "setBaseHeight");
		ObfuscationPart1.map.put("func_185399_a", "setBaseBiome");
		ObfuscationPart1.map.put("func_185400_d", "setHeightVariation");
		ObfuscationPart1.map.put("func_185402_a", "setWaterColor");
		ObfuscationPart1.map.put("func_185410_a", "setTemperature");
		ObfuscationPart1.map.put("func_185411_b", "setSnowEnabled");
		ObfuscationPart1.map.put("func_185426_a", "getSpikesForWorld");
		ObfuscationPart1.map.put("func_185428_a", "getRegisteredBiome");
		ObfuscationPart1.map.put("func_185467_w", "getSoundType");
		ObfuscationPart1.map.put("func_185471_a", "withMirror");
		ObfuscationPart1.map.put("func_185473_a", "getItem");
		ObfuscationPart1.map.put("func_185477_a", "addCollisionBoxToList");
		ObfuscationPart1.map.put("func_185481_k", "isTopSolid");
		ObfuscationPart1.map.put("func_185484_c", "getPackedLightmapCoords");
		ObfuscationPart1.map.put("func_185485_f", "getAmbientOcclusionLightValue");
		ObfuscationPart1.map.put("func_185492_a", "addCollisionBoxToList");
		ObfuscationPart1.map.put("func_185496_a", "getBoundingBox");
		ObfuscationPart1.map.put("func_185499_a", "withRotation");
		ObfuscationPart1.map.put("func_185503_a", "rayTrace");
		ObfuscationPart1.map.put("func_185507_b", "playClickOnSound");
		ObfuscationPart1.map.put("func_185508_c", "playClickOffSound");
		ObfuscationPart1.map.put("func_185514_i", "canSustainBush");
		ObfuscationPart1.map.put("func_185517_a", "getType");
		ObfuscationPart1.map.put("func_185524_e", "getAgeProperty");
		ObfuscationPart1.map.put("func_185525_y", "isMaxAge");
		ObfuscationPart1.map.put("func_185526_g", "getMaxAge");
		ObfuscationPart1.map.put("func_185527_x", "getAge");
		ObfuscationPart1.map.put("func_185528_e", "withAge");
		ObfuscationPart1.map.put("func_185529_b", "getBonemealAgeIncrease");
		ObfuscationPart1.map.put("func_185545_A", "isAlternateInput");
		ObfuscationPart1.map.put("func_185546_B", "isDiode");
		ObfuscationPart1.map.put("func_185547_C", "isSameDiode");
		ObfuscationPart1.map.put("func_185549_e", "getTileDataItemStack");
		ObfuscationPart1.map.put("func_185576_e", "getInstrument");
		ObfuscationPart1.map.put("func_185588_a", "createTilePiston");
		ObfuscationPart1.map.put("func_185589_c", "getTilePistonAt");
		ObfuscationPart1.map.put("func_185592_b", "updateConnectedRails");
		ObfuscationPart1.map.put("func_185601_a", "growTreeRecursive");
		ObfuscationPart1.map.put("func_185602_a", "placeGrownFlower");
		ObfuscationPart1.map.put("func_185603_a", "generatePlant");
		ObfuscationPart1.map.put("func_185604_a", "areAllNeighborsEmpty");
		ObfuscationPart1.map.put("func_185605_c", "placeDeadFlower");
		ObfuscationPart1.map.put("func_185606_b", "canSurvive");
		ObfuscationPart1.map.put("func_185608_b", "canSurviveAt");
		ObfuscationPart1.map.put("func_185615_a", "playClickSound");
		ObfuscationPart1.map.put("func_185616_e", "checkPressed");
		ObfuscationPart1.map.put("func_185617_b", "playReleaseSound");
		ObfuscationPart1.map.put("func_185633_i", "getArmShape");
		ObfuscationPart1.map.put("func_185646_a", "canPush");
		ObfuscationPart1.map.put("func_185654_e", "getCloseSound");
		ObfuscationPart1.map.put("func_185655_g", "getOpenSound");
		ObfuscationPart1.map.put("func_185661_e", "getOrCreatePortalShape");
		ObfuscationPart1.map.put("func_185666_i", "getBoundingBoxIdx");
		ObfuscationPart1.map.put("func_185674_a", "getTypeForItem");
		ObfuscationPart1.map.put("func_185675_i", "isHalfSlab");
		ObfuscationPart1.map.put("func_185679_b", "turnIntoWater");
		ObfuscationPart1.map.put("func_185680_c", "countNeighbors");
		ObfuscationPart1.map.put("func_185681_a", "slightlyMelt");
		ObfuscationPart1.map.put("func_185698_b", "getSlopeFindDistance");
		ObfuscationPart1.map.put("func_185699_x", "getAABBIndex");
		ObfuscationPart1.map.put("func_185704_d", "isDifferentStairs");
		ObfuscationPart1.map.put("func_185705_z", "getCollEighthBlock");
		ObfuscationPart1.map.put("func_185706_d", "getStairsShape");
		ObfuscationPart1.map.put("func_185707_y", "getCollQuarterBlock");
		ObfuscationPart1.map.put("func_185708_x", "getCollisionBoxList");
		ObfuscationPart1.map.put("func_185709_i", "isBlockStairs");
		ObfuscationPart1.map.put("func_185728_i", "getBoundingBoxIndex");
		ObfuscationPart1.map.put("func_185729_a", "getBoundingBoxIndex");
		ObfuscationPart1.map.put("func_185731_a", "playSound");
		ObfuscationPart1.map.put("func_185749_i", "getAABBIndex");
		ObfuscationPart1.map.put("func_185759_i", "canFallThrough");
		ObfuscationPart1.map.put("func_185763_a", "getConnectedRails");
		ObfuscationPart1.map.put("func_185800_a", "toRotation");
		ObfuscationPart1.map.put("func_185802_a", "mirrorRotation");
		ObfuscationPart1.map.put("func_185803_b", "mirror");
		ObfuscationPart1.map.put("func_185830_a", "add");
		ObfuscationPart1.map.put("func_185831_a", "rotate");
		ObfuscationPart1.map.put("func_185833_a", "rotate");
		ObfuscationPart1.map.put("func_185841_e", "getPlaceSound");
		ObfuscationPart1.map.put("func_185842_g", "getFallSound");
		ObfuscationPart1.map.put("func_185843_a", "getVolume");
		ObfuscationPart1.map.put("func_185844_d", "getStepSound");
		ObfuscationPart1.map.put("func_185845_c", "getBreakSound");
		ObfuscationPart1.map.put("func_185846_f", "getHitSound");
		ObfuscationPart1.map.put("func_185847_b", "getPitch");
		ObfuscationPart1.map.put("func_185886_a", "getPropertyName");
		ObfuscationPart1.map.put("func_185887_b", "getBlockHardness");
		ObfuscationPart1.map.put("func_185888_a", "getComparatorInputOverride");
		ObfuscationPart1.map.put("func_185889_a", "getPackedLightmapCoords");
		ObfuscationPart1.map.put("func_185890_d", "getCollisionBoundingBox");
		ObfuscationPart1.map.put("func_185891_c", "getLightOpacity");
		ObfuscationPart1.map.put("func_185892_j", "getAmbientOcclusionLightValue");
		ObfuscationPart1.map.put("func_185893_b", "getStrongPower");
		ObfuscationPart1.map.put("func_185894_c", "shouldSideBeRendered");
		ObfuscationPart1.map.put("func_185895_e", "isTranslucent");
		ObfuscationPart1.map.put("func_185896_q", "isTopSolid");
		ObfuscationPart1.map.put("func_185897_m", "canProvidePower");
		ObfuscationPart1.map.put("func_185898_k", "isBlockNormalCube");
		ObfuscationPart1.map.put("func_185899_b", "getActualState");
		ObfuscationPart1.map.put("func_185900_c", "getBoundingBox");
		ObfuscationPart1.map.put("func_185901_i", "getRenderType");
		ObfuscationPart1.map.put("func_185902_a", "withMirror");
		ObfuscationPart1.map.put("func_185903_a", "getPlayerRelativeBlockHardness");
		ObfuscationPart1.map.put("func_185904_a", "getMaterial");
		ObfuscationPart1.map.put("func_185905_o", "getPushReaction");
		ObfuscationPart1.map.put("func_185906_d", "getLightValue");
		ObfuscationPart1.map.put("func_185907_a", "withRotation");
		ObfuscationPart1.map.put("func_185908_a", "addCollisionBoxToList");
		ObfuscationPart1.map.put("func_185909_g", "getMapColor");
		ObfuscationPart1.map.put("func_185910_a", "collisionRayTrace");
		ObfuscationPart1.map.put("func_185911_a", "getWeakPower");
		ObfuscationPart1.map.put("func_185912_n", "hasComparatorInputOverride");
		ObfuscationPart1.map.put("func_185913_b", "isFullBlock");
		ObfuscationPart1.map.put("func_185914_p", "isOpaqueCube");
		ObfuscationPart1.map.put("func_185915_l", "isNormalCube");
		ObfuscationPart1.map.put("func_185916_f", "useNeighborBrightness");
		ObfuscationPart1.map.put("func_185917_h", "isFullCube");
		ObfuscationPart1.map.put("func_185918_c", "getSelectedBoundingBox");
		ObfuscationPart1.map.put("func_185919_a", "validateProperty");
		ObfuscationPart1.map.put("func_185920_a", "getProperty");
		ObfuscationPart1.map.put("func_185922_a", "getFingerLength");
		ObfuscationPart1.map.put("func_185927_a", "matches");
		ObfuscationPart1.map.put("func_185929_b", "parseValue");
		ObfuscationPart1.map.put("func_185931_b", "populate");
	}

}
