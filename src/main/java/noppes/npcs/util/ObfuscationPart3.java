package noppes.npcs.util;

import java.util.HashMap;
import java.util.Map;

public class ObfuscationPart3 {
	public static Map<String, String> map = new HashMap<String, String>();

	static {
		ObfuscationPart3.map.put("func_70067_L", "canBeCollidedWith");
		ObfuscationPart3.map.put("func_70068_e", "getDistanceSq");
		ObfuscationPart3.map.put("func_70070_b", "getBrightnessForRender");
		ObfuscationPart3.map.put("func_70071_h_", "onUpdate");
		ObfuscationPart3.map.put("func_70072_I", "handleWaterMovement");
		ObfuscationPart3.map.put("func_70074_a", "onKillEntity");
		ObfuscationPart3.map.put("func_70075_an", "canBeAttackedWithItem");
		ObfuscationPart3.map.put("func_70076_C", "outOfWorld");
		ObfuscationPart3.map.put("func_70077_a", "onStruckByLightning");
		ObfuscationPart3.map.put("func_70079_am", "getRotationYawHead");
		ObfuscationPart3.map.put("func_70080_a", "setPositionAndRotation");
		ObfuscationPart3.map.put("func_70081_e", "dealFireDamage");
		ObfuscationPart3.map.put("func_70082_c", "turn");
		ObfuscationPart3.map.put("func_70083_f", "getFlag");
		ObfuscationPart3.map.put("func_70086_ai", "getAir");
		ObfuscationPart3.map.put("func_70087_a", "newDoubleNBTList");
		ObfuscationPart3.map.put("func_70088_a", "entityInit");
		ObfuscationPart3.map.put("func_70089_S", "isEntityAlive");
		ObfuscationPart3.map.put("func_70090_H", "isInWater");
		ObfuscationPart3.map.put("func_70091_d", "move");
		ObfuscationPart3.map.put("func_70092_e", "getDistanceSq");
		ObfuscationPart3.map.put("func_70093_af", "isSneaking");
		ObfuscationPart3.map.put("func_70094_T", "isEntityInsideOpaqueBlock");
		ObfuscationPart3.map.put("func_70095_a", "setSneaking");
		ObfuscationPart3.map.put("func_70097_a", "attackEntityFrom");
		ObfuscationPart3.map.put("func_70098_U", "updateRidden");
		ObfuscationPart3.map.put("func_70099_a", "entityDropItem");
		ObfuscationPart3.map.put("func_70100_b_", "onCollideWithPlayer");
		ObfuscationPart3.map.put("func_70101_b", "setRotation");
		ObfuscationPart3.map.put("func_70103_a", "handleStatusUpdate");
		ObfuscationPart3.map.put("func_70104_M", "canBePushed");
		ObfuscationPart3.map.put("func_70105_a", "setSize");
		ObfuscationPart3.map.put("func_70106_y", "setDead");
		ObfuscationPart3.map.put("func_70107_b", "setPosition");
		ObfuscationPart3.map.put("func_70108_f", "applyEntityCollision");
		ObfuscationPart3.map.put("func_70110_aj", "setInWeb");
		ObfuscationPart3.map.put("func_70111_Y", "getCollisionBorderSize");
		ObfuscationPart3.map.put("func_70112_a", "isInRangeToRenderDist");
		ObfuscationPart3.map.put("func_70114_g", "getCollisionBox");
		ObfuscationPart3.map.put("func_70184_a", "onImpact");
		ObfuscationPart3.map.put("func_70185_h", "getGravityVelocity");
		ObfuscationPart3.map.put("func_70186_c", "shoot");
		ObfuscationPart3.map.put("func_70227_a", "onImpact");
		ObfuscationPart3.map.put("func_70239_b", "setDamage");
		ObfuscationPart3.map.put("func_70240_a", "setKnockbackStrength");
		ObfuscationPart3.map.put("func_70241_g", "getIsCritical");
		ObfuscationPart3.map.put("func_70242_d", "getDamage");
		ObfuscationPart3.map.put("func_70243_d", "setIsCritical");
		ObfuscationPart3.map.put("func_70265_b", "setTimeSinceHit");
		ObfuscationPart3.map.put("func_70266_a", "setDamageTaken");
		ObfuscationPart3.map.put("func_70267_i", "getForwardDirection");
		ObfuscationPart3.map.put("func_70268_h", "getTimeSinceHit");
		ObfuscationPart3.map.put("func_70269_c", "setForwardDirection");
		ObfuscationPart3.map.put("func_70271_g", "getDamageTaken");
		ObfuscationPart3.map.put("func_70288_d", "setAgeToCreativeDespawnTime");
		ObfuscationPart3.map.put("func_70289_a", "combineItems");
		ObfuscationPart3.map.put("func_70296_d", "markDirty");
		ObfuscationPart3.map.put("func_70297_j_", "getInventoryStackLimit");
		ObfuscationPart3.map.put("func_70298_a", "decrStackSize");
		ObfuscationPart3.map.put("func_70299_a", "setInventorySlotContents");
		ObfuscationPart3.map.put("func_70300_a", "isUsableByPlayer");
		ObfuscationPart3.map.put("func_70301_a", "getStackInSlot");
		ObfuscationPart3.map.put("func_70302_i_", "getSizeInventory");
		ObfuscationPart3.map.put("func_70304_b", "removeStackFromSlot");
		ObfuscationPart3.map.put("func_70429_k", "decrementAnimations");
		ObfuscationPart3.map.put("func_70431_c", "hasItemStack");
		ObfuscationPart3.map.put("func_70432_d", "storeItemStack");
		ObfuscationPart3.map.put("func_70436_m", "dropAllItems");
		ObfuscationPart3.map.put("func_70437_b", "setItemStack");
		ObfuscationPart3.map.put("func_70440_f", "armorItemInSlot");
		ObfuscationPart3.map.put("func_70441_a", "addItemStackToInventory");
		ObfuscationPart3.map.put("func_70442_a", "writeToNBT");
		ObfuscationPart3.map.put("func_70443_b", "readFromNBT");
		ObfuscationPart3.map.put("func_70445_o", "getItemStack");
		ObfuscationPart3.map.put("func_70447_i", "getFirstEmptyStack");
		ObfuscationPart3.map.put("func_70448_g", "getCurrentItem");
		ObfuscationPart3.map.put("func_70449_g", "damageArmor");
		ObfuscationPart3.map.put("func_70451_h", "getHotbarSize");
		ObfuscationPart3.map.put("func_70452_e", "storePartialItemStack");
		ObfuscationPart3.map.put("func_70453_c", "changeCurrentItem");
		ObfuscationPart3.map.put("func_70455_b", "copyInventory");
		ObfuscationPart3.map.put("func_70463_b", "getStackInRowAndColumn");
		ObfuscationPart3.map.put("func_70468_h", "getCurrentRecipe");
		ObfuscationPart3.map.put("func_70469_d", "inventoryResetNeededOnSlotChange");
		ObfuscationPart3.map.put("func_70470_g", "resetRecipeAndSlots");
		ObfuscationPart3.map.put("func_70471_c", "setCurrentRecipeIndex");
		ObfuscationPart3.map.put("func_70486_a", "loadInventoryFromNBT");
		ObfuscationPart3.map.put("func_70487_g", "saveInventoryToNBT");
		ObfuscationPart3.map.put("func_70489_a", "getPos");
		ObfuscationPart3.map.put("func_70491_i", "getDamage");
		ObfuscationPart3.map.put("func_70492_c", "setDamage");
		ObfuscationPart3.map.put("func_70493_k", "getRollingDirection");
		ObfuscationPart3.map.put("func_70494_i", "setRollingDirection");
		ObfuscationPart3.map.put("func_70495_a", "getPosOffset");
		ObfuscationPart3.map.put("func_70496_j", "getRollingAmplitude");
		ObfuscationPart3.map.put("func_70497_h", "setRollingAmplitude");
		ObfuscationPart3.map.put("func_70515_d", "explode");
		ObfuscationPart3.map.put("func_70518_d", "onValidSurface");
		ObfuscationPart3.map.put("func_70526_d", "getXpValue");
		ObfuscationPart3.map.put("func_70527_a", "getXPSplit");
		ObfuscationPart3.map.put("func_70528_g", "getTextureByXP");
		ObfuscationPart3.map.put("func_70534_d", "getRedColorF");
		ObfuscationPart3.map.put("func_70535_g", "getBlueColorF");
		ObfuscationPart3.map.put("func_70536_a", "setParticleTextureIndex");
		ObfuscationPart3.map.put("func_70537_b", "getFXLayer");
		ObfuscationPart3.map.put("func_70538_b", "setRBGColorF");
		ObfuscationPart3.map.put("func_70541_f", "multipleParticleScaleBy");
		ObfuscationPart3.map.put("func_70542_f", "getGreenColorF");
		ObfuscationPart3.map.put("func_70543_e", "multiplyVelocity");
		ObfuscationPart3.map.put("func_70589_b", "setBaseSpellTextureIndex");
		ObfuscationPart3.map.put("func_70599_aP", "getSoundVolume");
		ObfuscationPart3.map.put("func_70601_bi", "getCanSpawnHere");
		ObfuscationPart3.map.put("func_70603_bj", "getRenderSizeModifier");
		ObfuscationPart3.map.put("func_70604_c", "setRevengeTarget");
		ObfuscationPart3.map.put("func_70605_aq", "getMoveHelper");
		ObfuscationPart3.map.put("func_70606_j", "setHealth");
		ObfuscationPart3.map.put("func_70608_bn", "isPlayerSleeping");
		ObfuscationPart3.map.put("func_70609_aI", "onDeathUpdate");
		ObfuscationPart3.map.put("func_70610_aX", "isMovementBlocked");
		ObfuscationPart3.map.put("func_70613_aW", "isServerWorld");
		ObfuscationPart3.map.put("func_70615_aA", "eatGrassBonus");
		ObfuscationPart3.map.put("func_70617_f_", "isOnLadder");
		ObfuscationPart3.map.put("func_70619_bc", "updateAITasks");
		ObfuscationPart3.map.put("func_70623_bb", "despawnEntity");
		ObfuscationPart3.map.put("func_70624_b", "setAttackTarget");
		ObfuscationPart3.map.put("func_70625_a", "faceEntity");
		ObfuscationPart3.map.put("func_70626_be", "updateEntityActionState");
		ObfuscationPart3.map.put("func_70627_aG", "getTalkInterval");
		ObfuscationPart3.map.put("func_70628_a", "dropFewItems");
		ObfuscationPart3.map.put("func_70629_bd", "handleJumpWater");
		ObfuscationPart3.map.put("func_70631_g_", "isChild");
		ObfuscationPart3.map.put("func_70634_a", "setPositionAndUpdate");
		ObfuscationPart3.map.put("func_70635_at", "getEntitySenses");
		ObfuscationPart3.map.put("func_70636_d", "onLivingUpdate");
		ObfuscationPart3.map.put("func_70637_d", "setJumping");
		ObfuscationPart3.map.put("func_70638_az", "getAttackTarget");
		ObfuscationPart3.map.put("func_70641_bl", "getMaxSpawnedInChunk");
		ObfuscationPart3.map.put("func_70642_aH", "playLivingSound");
		ObfuscationPart3.map.put("func_70643_av", "getRevengeTarget");
		ObfuscationPart3.map.put("func_70644_a", "isPotionActive");
		ObfuscationPart3.map.put("func_70645_a", "onDeath");
		ObfuscationPart3.map.put("func_70646_bf", "getVerticalFaceSpeed");
		ObfuscationPart3.map.put("func_70647_i", "getSoundPitch");
		ObfuscationPart3.map.put("func_70648_aU", "canBreatheUnderwater");
		ObfuscationPart3.map.put("func_70650_aV", "ableToCauseSkullDrop");
		ObfuscationPart3.map.put("func_70651_bq", "getActivePotionEffects");
		ObfuscationPart3.map.put("func_70652_k", "attackEntityAsMob");
		ObfuscationPart3.map.put("func_70653_a", "knockBack");
		ObfuscationPart3.map.put("func_70654_ax", "getIdleTime");
		ObfuscationPart3.map.put("func_70655_b", "applyArmorCalculations");
		ObfuscationPart3.map.put("func_70656_aK", "spawnExplosionParticle");
		ObfuscationPart3.map.put("func_70657_f", "setMoveVertical");
		ObfuscationPart3.map.put("func_70658_aO", "getTotalArmorValue");
		ObfuscationPart3.map.put("func_70659_e", "setAIMoveSpeed");
		ObfuscationPart3.map.put("func_70660_b", "getActivePotionEffect");
		ObfuscationPart3.map.put("func_70661_as", "getNavigator");
		ObfuscationPart3.map.put("func_70662_br", "isEntityUndead");
		ObfuscationPart3.map.put("func_70663_b", "updateRotation");
		ObfuscationPart3.map.put("func_70664_aZ", "jump");
		ObfuscationPart3.map.put("func_70665_d", "damageEntity");
		ObfuscationPart3.map.put("func_70668_bt", "getCreatureAttribute");
		ObfuscationPart3.map.put("func_70669_a", "renderBrokenItemStack");
		ObfuscationPart3.map.put("func_70670_a", "onNewPotionEffect");
		ObfuscationPart3.map.put("func_70671_ap", "getLookHelper");
		ObfuscationPart3.map.put("func_70672_c", "applyPotionDamageCalculations");
		ObfuscationPart3.map.put("func_70674_bp", "clearActivePotions");
		ObfuscationPart3.map.put("func_70675_k", "damageArmor");
		ObfuscationPart3.map.put("func_70676_i", "getLook");
		ObfuscationPart3.map.put("func_70678_g", "getSwingProgress");
		ObfuscationPart3.map.put("func_70679_bo", "updatePotionEffects");
		ObfuscationPart3.map.put("func_70681_au", "getRNG");
		ObfuscationPart3.map.put("func_70682_h", "decreaseAirSupply");
		ObfuscationPart3.map.put("func_70683_ar", "getJumpHelper");
		ObfuscationPart3.map.put("func_70684_aJ", "isPlayer");
		ObfuscationPart3.map.put("func_70685_l", "canEntityBeSeen");
		ObfuscationPart3.map.put("func_70686_a", "canAttackClass");
		ObfuscationPart3.map.put("func_70687_e", "isPotionApplicable");
		ObfuscationPart3.map.put("func_70688_c", "onFinishedPotionEffect");
		ObfuscationPart3.map.put("func_70689_ay", "getAIMoveSpeed");
		ObfuscationPart3.map.put("func_70690_d", "addPotionEffect");
		ObfuscationPart3.map.put("func_70691_i", "heal");
		ObfuscationPart3.map.put("func_70692_ba", "canDespawn");
		ObfuscationPart3.map.put("func_70693_a", "getExperiencePoints");
		ObfuscationPart3.map.put("func_70695_b", "onChangedPotionEffect");
		ObfuscationPart3.map.put("func_70781_l", "hasPath");
		ObfuscationPart3.map.put("func_70799_a", "setSlimeSize");
		ObfuscationPart3.map.put("func_70800_m", "canDamagePlayer");
		ObfuscationPart3.map.put("func_70802_j", "createInstance");
		ObfuscationPart3.map.put("func_70805_n", "getAttackStrength");
		ObfuscationPart3.map.put("func_70806_k", "getJumpDelay");
		ObfuscationPart3.map.put("func_70807_r", "makesSoundOnJump");
		ObfuscationPart3.map.put("func_70808_l", "alterSquishAmount");
		ObfuscationPart3.map.put("func_70809_q", "getSlimeSize");
		ObfuscationPart3.map.put("func_70814_o", "isValidLightLevel");
		ObfuscationPart3.map.put("func_70816_c", "teleportToEntity");
		ObfuscationPart3.map.put("func_70820_n", "teleportRandomly");
		ObfuscationPart3.map.put("func_70821_d", "shouldAttackPlayer");
		ObfuscationPart3.map.put("func_70823_r", "isScreaming");
		ObfuscationPart3.map.put("func_70825_j", "teleportTo");
		ObfuscationPart3.map.put("func_70829_a", "setCreeperState");
		ObfuscationPart3.map.put("func_70830_n", "getPowered");
		ObfuscationPart3.map.put("func_70831_j", "getCreeperFlashIntensity");
		ObfuscationPart3.map.put("func_70832_p", "getCreeperState");
		ObfuscationPart3.map.put("func_70835_c", "becomeAngryAt");
		ObfuscationPart3.map.put("func_70839_e", "setBesideClimbableBlock");
		ObfuscationPart3.map.put("func_70841_p", "isBesideClimbableBlock");
		ObfuscationPart3.map.put("func_70844_e", "setOnFire");
		ObfuscationPart3.map.put("func_70845_n", "isCharged");
		ObfuscationPart3.map.put("func_70849_f", "setPlayerCreated");
		ObfuscationPart3.map.put("func_70850_q", "isPlayerCreated");
		ObfuscationPart3.map.put("func_70851_e", "setHoldingRose");
		ObfuscationPart3.map.put("func_70852_n", "getVillage");
		ObfuscationPart3.map.put("func_70853_p", "getHoldRoseTick");
		ObfuscationPart3.map.put("func_70854_o", "getAttackTimer");
		ObfuscationPart3.map.put("func_70873_a", "setGrowingAge");
		ObfuscationPart3.map.put("func_70874_b", "getGrowingAge");
		ObfuscationPart3.map.put("func_70875_t", "resetInLove");
		ObfuscationPart3.map.put("func_70877_b", "isBreedingItem");
		ObfuscationPart3.map.put("func_70878_b", "canMateWith");
		ObfuscationPart3.map.put("func_70880_s", "isInLove");
		ObfuscationPart3.map.put("func_70890_k", "getHeadRotationAngleX");
		ObfuscationPart3.map.put("func_70892_o", "getSheared");
		ObfuscationPart3.map.put("func_70893_e", "setSheared");
		ObfuscationPart3.map.put("func_70894_j", "getHeadRotationPointY");
		ObfuscationPart3.map.put("func_70900_e", "setSaddled");
		ObfuscationPart3.map.put("func_70901_n", "getSaddled");
		ObfuscationPart3.map.put("func_70902_q", "getOwner");
		ObfuscationPart3.map.put("func_70903_f", "setTamed");
		ObfuscationPart3.map.put("func_70904_g", "setSitting");
		ObfuscationPart3.map.put("func_70906_o", "isSitting");
		ObfuscationPart3.map.put("func_70907_r", "getAISit");
		ObfuscationPart3.map.put("func_70908_e", "playTameEffect");
		ObfuscationPart3.map.put("func_70909_n", "isTamed");
		ObfuscationPart3.map.put("func_70912_b", "setTameSkin");
		ObfuscationPart3.map.put("func_70913_u", "getTameSkin");
		ObfuscationPart3.map.put("func_70915_j", "getShadingWhileWet");
		ObfuscationPart3.map.put("func_70916_h", "setAngry");
		ObfuscationPart3.map.put("func_70917_k", "getInterestedAngle");
		ObfuscationPart3.map.put("func_70918_i", "setBegging");
		ObfuscationPart3.map.put("func_70919_bu", "isAngry");
		ObfuscationPart3.map.put("func_70920_v", "getTailRotation");
		ObfuscationPart3.map.put("func_70921_u", "isWolfWet");
		ObfuscationPart3.map.put("func_70922_bv", "isBegging");
		ObfuscationPart3.map.put("func_70923_f", "getShakeAngle");
		ObfuscationPart3.map.put("func_70930_a", "setRecipes");
		ObfuscationPart3.map.put("func_70931_l_", "getCustomer");
		ObfuscationPart3.map.put("func_70932_a_", "setCustomer");
		ObfuscationPart3.map.put("func_70933_a", "useRecipe");
		ObfuscationPart3.map.put("func_70934_b", "getRecipes");
		ObfuscationPart3.map.put("func_70938_b", "setProfession");
		ObfuscationPart3.map.put("func_70939_f", "setPlaying");
		ObfuscationPart3.map.put("func_70940_q", "isTrading");
		ObfuscationPart3.map.put("func_70941_o", "isMating");
		ObfuscationPart3.map.put("func_70945_p", "isPlaying");
		ObfuscationPart3.map.put("func_70946_n", "getProfession");
		ObfuscationPart3.map.put("func_70947_e", "setMating");
		ObfuscationPart3.map.put("func_70965_a", "attackEntityFromPart");
		ObfuscationPart3.map.put("func_70969_j", "updateDragonEnderCrystal");
		ObfuscationPart3.map.put("func_70970_a", "collideWithEntities");
		ObfuscationPart3.map.put("func_70971_b", "attackEntitiesInList");
		ObfuscationPart3.map.put("func_70972_a", "destroyBlocksInAABB");
		ObfuscationPart3.map.put("func_70973_b", "simplifyAngle");
		ObfuscationPart3.map.put("func_70974_a", "getMovementOffsets");
		ObfuscationPart3.map.put("func_70996_bM", "shouldHeal");
		ObfuscationPart3.map.put("func_70999_a", "wakeUpPlayer");
		ObfuscationPart3.map.put("func_71000_j", "addMovementStat");
		ObfuscationPart3.map.put("func_71001_a", "onItemPickup");
		ObfuscationPart3.map.put("func_71004_bE", "respawnPlayer");
		ObfuscationPart3.map.put("func_71005_bN", "getInventoryEnderChest");
		ObfuscationPart3.map.put("func_71007_a", "displayGUIChest");
		ObfuscationPart3.map.put("func_71009_b", "onCriticalHit");
		ObfuscationPart3.map.put("func_71015_k", "addMountedMovementStat");
		ObfuscationPart3.map.put("func_71016_p", "sendPlayerAbilities");
		ObfuscationPart3.map.put("func_71019_a", "dropItem");
		ObfuscationPart3.map.put("func_71020_j", "addExhaustion");
		ObfuscationPart3.map.put("func_71023_q", "addExperience");
		ObfuscationPart3.map.put("func_71024_bL", "getFoodStats");
		ObfuscationPart3.map.put("func_71026_bH", "isPlayerFullyAsleep");
		ObfuscationPart3.map.put("func_71029_a", "addStat");
		ObfuscationPart3.map.put("func_71033_a", "setGameType");
		ObfuscationPart3.map.put("func_71036_o", "onItemUseFinish");
		ObfuscationPart3.map.put("func_71037_bA", "getScore");
		ObfuscationPart3.map.put("func_71040_bB", "dropItem");
		ObfuscationPart3.map.put("func_71043_e", "canEat");
		ObfuscationPart3.map.put("func_71044_o", "collideWithPlayer");
		ObfuscationPart3.map.put("func_71047_c", "onEnchantmentCritical");
		ObfuscationPart3.map.put("func_71050_bK", "xpBarCap");
		ObfuscationPart3.map.put("func_71051_bG", "getBedOrientationInDegrees");
		ObfuscationPart3.map.put("func_71053_j", "closeScreen");
		ObfuscationPart3.map.put("func_71059_n", "attackTargetEntityWithCurrentItem");
		ObfuscationPart3.map.put("func_71060_bI", "getSleepTimer");
		ObfuscationPart3.map.put("func_71061_d_", "doWaterSplashEffect");
		ObfuscationPart3.map.put("func_71064_a", "addStat");
		ObfuscationPart3.map.put("func_71110_a", "sendAllContents");
		ObfuscationPart3.map.put("func_71111_a", "sendSlotContents");
		ObfuscationPart3.map.put("func_71112_a", "sendWindowProperty");
		ObfuscationPart3.map.put("func_71113_k", "updateHeldItem");
		ObfuscationPart3.map.put("func_71114_r", "getPlayerIP");
		ObfuscationPart3.map.put("func_71116_b", "addSelfToInternalCraftingInventory");
		ObfuscationPart3.map.put("func_71117_bO", "getNextWindowId");
		ObfuscationPart3.map.put("func_71118_n", "setPlayerHealthUpdated");
		ObfuscationPart3.map.put("func_71120_a", "sendContainerToPlayer");
		ObfuscationPart3.map.put("func_71121_q", "getServerWorld");
		ObfuscationPart3.map.put("func_71122_b", "handleFalling");
		ObfuscationPart3.map.put("func_71123_m", "mountEntityAndWakeUp");
		ObfuscationPart3.map.put("func_71127_g", "onUpdateEntity");
		ObfuscationPart3.map.put("func_71128_l", "closeContainer");
		ObfuscationPart3.map.put("func_71150_b", "setPlayerSPHealth");
		ObfuscationPart3.map.put("func_71152_a", "setXPStats");
		ObfuscationPart3.map.put("func_71165_d", "sendChatMessage");
		ObfuscationPart3.map.put("func_71187_D", "getCommandManager");
		ObfuscationPart3.map.put("func_71188_g", "setAllowPvp");
		ObfuscationPart3.map.put("func_71189_e", "setHostname");
		ObfuscationPart3.map.put("func_71190_q", "updateTimeLightAndEntities");
		ObfuscationPart3.map.put("func_71191_d", "setBuildLimit");
		ObfuscationPart3.map.put("func_71192_d", "setUserMessage");
		ObfuscationPart3.map.put("func_71193_K", "allowSpawnMonsters");
		ObfuscationPart3.map.put("func_71194_c", "canCreateBonusChest");
		ObfuscationPart3.map.put("func_71195_b_", "getUserMessage");
		ObfuscationPart3.map.put("func_71197_b", "init");
		ObfuscationPart3.map.put("func_71198_k", "logDebug");
		ObfuscationPart3.map.put("func_71199_h", "isHardcore");
		ObfuscationPart3.map.put("func_71200_ad", "serverIsInRunLoop");
		ObfuscationPart3.map.put("func_71201_j", "logSevere");
		ObfuscationPart3.map.put("func_71204_b", "setDemo");
		ObfuscationPart3.map.put("func_71205_p", "setMOTD");
		ObfuscationPart3.map.put("func_71206_a", "shareToLAN");
		ObfuscationPart3.map.put("func_71207_Z", "getBuildLimit");
		ObfuscationPart3.map.put("func_71208_b", "setServerPort");
		ObfuscationPart3.map.put("func_71209_f", "getFile");
		ObfuscationPart3.map.put("func_71211_k", "getServerHostname");
		ObfuscationPart3.map.put("func_71213_z", "getOnlinePlayerNames");
		ObfuscationPart3.map.put("func_71214_G", "getServerOwner");
		ObfuscationPart3.map.put("func_71215_F", "getServerPort");
		ObfuscationPart3.map.put("func_71216_a_", "outputPercentRemaining");
		ObfuscationPart3.map.put("func_71217_p", "tick");
		ObfuscationPart3.map.put("func_71218_a", "getWorld");
		ObfuscationPart3.map.put("func_71219_W", "isPVPEnabled");
		ObfuscationPart3.map.put("func_71220_V", "getCanSpawnNPCs");
		ObfuscationPart3.map.put("func_71221_J", "getWorldName");
		ObfuscationPart3.map.put("func_71222_d", "initialWorldChunkLoad");
		ObfuscationPart3.map.put("func_71223_ag", "enableProfiling");
		ObfuscationPart3.map.put("func_71224_l", "setServerOwner");
		ObfuscationPart3.map.put("func_71225_e", "canStructuresSpawn");
		ObfuscationPart3.map.put("func_71228_a", "finalTick");
		ObfuscationPart3.map.put("func_71229_d", "setOnlineMode");
		ObfuscationPart3.map.put("func_71230_b", "addServerInfoToCrashReport");
		ObfuscationPart3.map.put("func_71231_X", "isFlightAllowed");
		ObfuscationPart3.map.put("func_71233_x", "getCurrentPlayerCount");
		ObfuscationPart3.map.put("func_71234_u", "getPort");
		ObfuscationPart3.map.put("func_71235_a", "setGameType");
		ObfuscationPart3.map.put("func_71236_h", "logWarning");
		ObfuscationPart3.map.put("func_71237_c", "convertMapIfNeeded");
		ObfuscationPart3.map.put("func_71238_n", "getDataDirectory");
		ObfuscationPart3.map.put("func_71239_B", "isDebuggingEnabled");
		ObfuscationPart3.map.put("func_71240_o", "systemExitNow");
		ObfuscationPart3.map.put("func_71241_aa", "isServerStopped");
		ObfuscationPart3.map.put("func_71242_L", "isDemo");
		ObfuscationPart3.map.put("func_71243_i", "clearCurrentTask");
		ObfuscationPart3.map.put("func_71244_g", "logInfo");
		ObfuscationPart3.map.put("func_71245_h", "setAllowFlight");
		ObfuscationPart3.map.put("func_71246_n", "setWorldName");
		ObfuscationPart3.map.put("func_71247_a", "loadAllWorlds");
		ObfuscationPart3.map.put("func_71249_w", "getMinecraftVersion");
		ObfuscationPart3.map.put("func_71250_E", "getKeyPair");
		ObfuscationPart3.map.put("func_71251_e", "setCanSpawnAnimals");
		ObfuscationPart3.map.put("func_71252_i", "handleRConCommand");
		ObfuscationPart3.map.put("func_71253_a", "setKeyPair");
		ObfuscationPart3.map.put("func_71254_M", "getActiveAnvilConverter");
		ObfuscationPart3.map.put("func_71255_r", "getAllowNether");
		ObfuscationPart3.map.put("func_71256_s", "startServerThread");
		ObfuscationPart3.map.put("func_71257_f", "setCanSpawnNPCs");
		ObfuscationPart3.map.put("func_71258_A", "getPlugins");
		ObfuscationPart3.map.put("func_71259_af", "getTickCounter");
		ObfuscationPart3.map.put("func_71260_j", "stopServer");
		ObfuscationPart3.map.put("func_71261_m", "setFolderName");
		ObfuscationPart3.map.put("func_71262_S", "isDedicatedServer");
		ObfuscationPart3.map.put("func_71263_m", "initiateShutdown");
		ObfuscationPart3.map.put("func_71264_H", "isSinglePlayer");
		ObfuscationPart3.map.put("func_71265_f", "getGameType");
		ObfuscationPart3.map.put("func_71266_T", "isServerInOnlineMode");
		ObfuscationPart3.map.put("func_71267_a", "saveAllWorlds");
		ObfuscationPart3.map.put("func_71268_U", "getCanSpawnAnimals");
		ObfuscationPart3.map.put("func_71270_I", "getFolderName");
		ObfuscationPart3.map.put("func_71273_Y", "getMOTD");
		ObfuscationPart3.map.put("func_71274_v", "getMotd");
		ObfuscationPart3.map.put("func_71275_y", "getMaxPlayers");
		ObfuscationPart3.map.put("func_71277_t", "getHostname");
		ObfuscationPart3.map.put("func_71278_l", "isServerRunning");
		ObfuscationPart3.map.put("func_71279_ae", "getGuiEnabled");
		ObfuscationPart3.map.put("func_71326_a", "saveProperties");
		ObfuscationPart3.map.put("func_71327_a", "getIntProperty");
		ObfuscationPart3.map.put("func_71328_a", "setProperty");
		ObfuscationPart3.map.put("func_71329_c", "getSettingsFilename");
		ObfuscationPart3.map.put("func_71330_a", "getStringProperty");
		ObfuscationPart3.map.put("func_71331_a", "addPendingCommand");
		ObfuscationPart3.map.put("func_71332_a", "getBooleanProperty");
		ObfuscationPart3.map.put("func_71333_ah", "executePendingCommands");
		ObfuscationPart3.map.put("func_71344_c", "getPublic");
		ObfuscationPart3.map.put("func_71351_a", "setServerData");
		ObfuscationPart3.map.put("func_71352_k", "toggleFullscreen");
		ObfuscationPart3.map.put("func_71353_a", "loadWorld");
		ObfuscationPart3.map.put("func_71354_a", "setDimensionAndSpawnPlayer");
		ObfuscationPart3.map.put("func_71355_q", "isDemo");
		ObfuscationPart3.map.put("func_71356_B", "isSingleplayer");
		ObfuscationPart3.map.put("func_71359_d", "getSaveLoader");
		ObfuscationPart3.map.put("func_71361_d", "checkGLError");
		ObfuscationPart3.map.put("func_71363_D", "stopIntegratedServer");
		ObfuscationPart3.map.put("func_71364_i", "setIngameNotInFocus");
		ObfuscationPart3.map.put("func_71366_a", "displayDebugInfo");
		ObfuscationPart3.map.put("func_71369_N", "getGLMaximumTextureSize");
		ObfuscationPart3.map.put("func_71370_a", "resize");
		ObfuscationPart3.map.put("func_71371_a", "launchIntegratedServer");
		ObfuscationPart3.map.put("func_71372_G", "isFullScreen");
		ObfuscationPart3.map.put("func_71375_t", "isFancyGraphicsEnabled");
		ObfuscationPart3.map.put("func_71377_b", "displayCrashReport");
		ObfuscationPart3.map.put("func_71378_E", "getPlayerUsageSnooper");
		ObfuscationPart3.map.put("func_71379_u", "isAmbientOcclusionEnabled");
		ObfuscationPart3.map.put("func_71381_h", "setIngameFocus");
		ObfuscationPart3.map.put("func_71382_s", "isGuiEnabled");
		ObfuscationPart3.map.put("func_71383_b", "updateDebugProfilerName");
		ObfuscationPart3.map.put("func_71384_a", "init");
		ObfuscationPart3.map.put("func_71385_j", "displayInGameMenu");
		ObfuscationPart3.map.put("func_71386_F", "getSystemTime");
		ObfuscationPart3.map.put("func_71387_A", "isIntegratedServerRunning");
		ObfuscationPart3.map.put("func_71389_H", "startTimerHackThread");
		ObfuscationPart3.map.put("func_71396_d", "addGraphicsAndWorldToCrashReport");
		ObfuscationPart3.map.put("func_71398_f", "freeMemory");
		ObfuscationPart3.map.put("func_71400_g", "shutdown");
		ObfuscationPart3.map.put("func_71401_C", "getIntegratedServer");
		ObfuscationPart3.map.put("func_71403_a", "loadWorld");
		ObfuscationPart3.map.put("func_71404_a", "crashed");
		ObfuscationPart3.map.put("func_71405_e", "shutdownMinecraftApplet");
		ObfuscationPart3.map.put("func_71407_l", "runTick");
		ObfuscationPart3.map.put("func_71410_x", "getMinecraft");
		ObfuscationPart3.map.put("func_71411_J", "runGameLoop");
		ObfuscationPart3.map.put("func_71497_f", "getFile");
		ObfuscationPart3.map.put("func_71498_d", "getCauseStackTraceOrString");
		ObfuscationPart3.map.put("func_71499_a", "addCrashSectionThrowable");
		ObfuscationPart3.map.put("func_71501_a", "getDescription");
		ObfuscationPart3.map.put("func_71502_e", "getCompleteReport");
		ObfuscationPart3.map.put("func_71503_h", "getWittyComment");
		ObfuscationPart3.map.put("func_71504_g", "populateEnvironment");
		ObfuscationPart3.map.put("func_71505_b", "getCrashCause");
		ObfuscationPart3.map.put("func_71506_a", "getSectionsInStringBuilder");
		ObfuscationPart3.map.put("func_71507_a", "addCrashSection");
		ObfuscationPart3.map.put("func_71514_a", "getAliases");
		ObfuscationPart3.map.put("func_71517_b", "getName");
		ObfuscationPart3.map.put("func_71518_a", "getUsage");
		ObfuscationPart3.map.put("func_71521_c", "getCommandSenderAsPlayer");
		ObfuscationPart3.map.put("func_71523_a", "doesStringStartWith");
		ObfuscationPart3.map.put("func_71527_a", "joinNiceString");
		ObfuscationPart3.map.put("func_71529_a", "setCommandListener");
		ObfuscationPart3.map.put("func_71530_a", "getListOfStringsMatchingLastWord");
		ObfuscationPart3.map.put("func_71539_b", "getGameModeFromCommand");
		ObfuscationPart3.map.put("func_71555_a", "getCommands");
		ObfuscationPart3.map.put("func_71556_a", "executeCommand");
		ObfuscationPart3.map.put("func_71557_a", "getPossibleCommands");
		ObfuscationPart3.map.put("func_71559_a", "dropFirstString");
		ObfuscationPart3.map.put("func_71560_a", "registerCommand");
		ObfuscationPart3.map.put("func_71565_a", "filterAllowedCharacters");
		ObfuscationPart3.map.put("func_71566_a", "isAllowedCharacter");
		ObfuscationPart3.map.put("func_71575_a", "getCrashReport");
		ObfuscationPart3.map.put("func_72314_b", "grow");
		ObfuscationPart3.map.put("func_72316_a", "calculateXOffset");
		ObfuscationPart3.map.put("func_72317_d", "offset");
		ObfuscationPart3.map.put("func_72318_a", "contains");
		ObfuscationPart3.map.put("func_72320_b", "getAverageEdgeLength");
		ObfuscationPart3.map.put("func_72321_a", "expand");
		ObfuscationPart3.map.put("func_72322_c", "calculateZOffset");
		ObfuscationPart3.map.put("func_72323_b", "calculateYOffset");
		ObfuscationPart3.map.put("func_72326_a", "intersects");
		ObfuscationPart3.map.put("func_72327_a", "calculateIntercept");
		ObfuscationPart3.map.put("func_72352_l", "getMaxPlayers");
		ObfuscationPart3.map.put("func_72354_b", "updateTimeAndWeatherForPlayer");
		ObfuscationPart3.map.put("func_72355_a", "initializeConnectionToPlayer");
		ObfuscationPart3.map.put("func_72358_d", "serverUpdateMovingPlayer");
		ObfuscationPart3.map.put("func_72363_f", "getBannedIPs");
		ObfuscationPart3.map.put("func_72364_a", "setPlayerManager");
		ObfuscationPart3.map.put("func_72365_p", "getServerInstance");
		ObfuscationPart3.map.put("func_72367_e", "playerLoggedOut");
		ObfuscationPart3.map.put("func_72368_a", "recreatePlayerEntity");
		ObfuscationPart3.map.put("func_72369_d", "getOnlinePlayerNames");
		ObfuscationPart3.map.put("func_72371_a", "setWhiteListEnabled");
		ObfuscationPart3.map.put("func_72372_a", "getEntityViewDistance");
		ObfuscationPart3.map.put("func_72373_m", "getAvailablePlayerDat");
		ObfuscationPart3.map.put("func_72374_b", "onTick");
		ObfuscationPart3.map.put("func_72375_a", "preparePlayer");
		ObfuscationPart3.map.put("func_72377_c", "playerLoggedIn");
		ObfuscationPart3.map.put("func_72378_q", "getHostPlayerData");
		ObfuscationPart3.map.put("func_72380_a", "readPlayerDataFromFile");
		ObfuscationPart3.map.put("func_72381_a", "setPlayerGameTypeBasedOnOther");
		ObfuscationPart3.map.put("func_72382_j", "getPlayersMatchingAddress");
		ObfuscationPart3.map.put("func_72383_n", "isWhiteListEnabled");
		ObfuscationPart3.map.put("func_72385_f", "syncPlayerInventory");
		ObfuscationPart3.map.put("func_72387_b", "setCommandsAllowedForAll");
		ObfuscationPart3.map.put("func_72389_g", "saveAllPlayerData");
		ObfuscationPart3.map.put("func_72391_b", "writePlayerData");
		ObfuscationPart3.map.put("func_72392_r", "removeAllPlayers");
		ObfuscationPart3.map.put("func_72394_k", "getCurrentPlayerCount");
		ObfuscationPart3.map.put("func_72395_o", "getViewDistance");
		ObfuscationPart3.map.put("func_72417_t", "loadOpsList");
		ObfuscationPart3.map.put("func_72418_v", "readWhiteList");
		ObfuscationPart3.map.put("func_72419_u", "saveOpsList");
		ObfuscationPart3.map.put("func_72421_w", "saveWhiteList");
		ObfuscationPart3.map.put("func_72429_b", "getIntermediateWithXValue");
		ObfuscationPart3.map.put("func_72430_b", "dotProduct");
		ObfuscationPart3.map.put("func_72431_c", "crossProduct");
		ObfuscationPart3.map.put("func_72432_b", "normalize");
		ObfuscationPart3.map.put("func_72433_c", "length");
		ObfuscationPart3.map.put("func_72434_d", "getIntermediateWithZValue");
		ObfuscationPart3.map.put("func_72435_c", "getIntermediateWithYValue");
		ObfuscationPart3.map.put("func_72436_e", "squareDistanceTo");
		ObfuscationPart3.map.put("func_72438_d", "distanceTo");
		ObfuscationPart3.map.put("func_72441_c", "add");
		ObfuscationPart3.map.put("func_72444_a", "subtractReverse");
		ObfuscationPart3.map.put("func_72591_c", "getRequestId");
		ObfuscationPart3.map.put("func_72592_a", "getRandomChallenge");
		ObfuscationPart3.map.put("func_72593_a", "hasExpired");
		ObfuscationPart3.map.put("func_72594_b", "getChallengeValue");
		ObfuscationPart3.map.put("func_72601_a", "registerSocket");
		ObfuscationPart3.map.put("func_72602_a", "startThread");
		ObfuscationPart3.map.put("func_72603_d", "getNumberOfPlayers");
		ObfuscationPart3.map.put("func_72604_a", "closeSocket");
		ObfuscationPart3.map.put("func_72605_a", "closeServerSocket_do");
		ObfuscationPart3.map.put("func_72606_c", "logWarning");
		ObfuscationPart3.map.put("func_72607_a", "logDebug");
		ObfuscationPart3.map.put("func_72608_b", "closeServerSocket");
		ObfuscationPart3.map.put("func_72609_b", "logInfo");
		ObfuscationPart3.map.put("func_72610_d", "logSevere");
		ObfuscationPart3.map.put("func_72611_e", "closeAllSockets");
		ObfuscationPart3.map.put("func_72612_a", "closeAllSockets_do");
		ObfuscationPart3.map.put("func_72613_c", "isRunning");
		ObfuscationPart3.map.put("func_72620_a", "sendResponsePacket");
		ObfuscationPart3.map.put("func_72621_a", "parseIncomingPacket");
		ObfuscationPart3.map.put("func_72622_d", "sendAuthChallenge");
		ObfuscationPart3.map.put("func_72623_a", "stopWithException");
		ObfuscationPart3.map.put("func_72624_b", "createQueryResponse");
		ObfuscationPart3.map.put("func_72625_a", "getRequestID");
		ObfuscationPart3.map.put("func_72626_g", "initQuerySystem");
		ObfuscationPart3.map.put("func_72627_c", "verifyClientAuth");
		ObfuscationPart3.map.put("func_72628_f", "cleanQueryClientsMap");
		ObfuscationPart3.map.put("func_72645_g", "cleanClientThreadsMap");
		ObfuscationPart3.map.put("func_72646_f", "initClientThreadList");
		ObfuscationPart3.map.put("func_72653_g", "closeSocket");
		ObfuscationPart3.map.put("func_72654_a", "sendResponse");
		ObfuscationPart3.map.put("func_72655_a", "sendMultipacketResponse");
		ObfuscationPart3.map.put("func_72656_f", "sendLoginFailedResponse");
		ObfuscationPart3.map.put("func_72661_a", "getBytesAsString");
		ObfuscationPart3.map.put("func_72662_b", "getRemainingBytesAsLEInt");
		ObfuscationPart3.map.put("func_72663_a", "getByteAsHexString");
		ObfuscationPart3.map.put("func_72664_c", "getBytesAsBEint");
		ObfuscationPart3.map.put("func_72665_b", "getBytesAsLEInt");
		ObfuscationPart3.map.put("func_72667_a", "writeInt");
		ObfuscationPart3.map.put("func_72668_a", "writeShort");
		ObfuscationPart3.map.put("func_72669_b", "reset");
		ObfuscationPart3.map.put("func_72670_a", "writeByteArray");
		ObfuscationPart3.map.put("func_72671_a", "writeString");
		ObfuscationPart3.map.put("func_72672_a", "toByteArray");
		ObfuscationPart3.map.put("func_72683_a", "addPlayer");
		ObfuscationPart3.map.put("func_72684_a", "overlaps");
		ObfuscationPart3.map.put("func_72685_d", "updateMovingPlayer");
		ObfuscationPart3.map.put("func_72686_a", "getFurthestViewableBlock");
		ObfuscationPart3.map.put("func_72688_a", "getWorldServer");
		ObfuscationPart3.map.put("func_72693_b", "tick");
		ObfuscationPart3.map.put("func_72694_a", "isPlayerWatchingChunk");
		ObfuscationPart3.map.put("func_72695_c", "removePlayer");
		ObfuscationPart3.map.put("func_72703_a", "onEntityAdded");
		ObfuscationPart3.map.put("func_72709_b", "onEntityRemoved");
		ObfuscationPart3.map.put("func_72712_a", "loadRenderers");
		ObfuscationPart3.map.put("func_72720_a", "createBindEntityOutlineFbs");
		ObfuscationPart3.map.put("func_72721_a", "hasCloudFog");
		ObfuscationPart3.map.put("func_72723_d", "getDebugInfoEntities");
		ObfuscationPart3.map.put("func_72728_f", "deleteAllDisplayLists");
		ObfuscationPart3.map.put("func_72731_b", "drawSelectionBox");
		ObfuscationPart3.map.put("func_72732_a", "setWorldAndLoadRenderers");
		ObfuscationPart3.map.put("func_72734_e", "updateClouds");
		ObfuscationPart3.map.put("func_72735_c", "getDebugInfoRenders");
		ObfuscationPart3.map.put("func_72785_a", "track");
		ObfuscationPart3.map.put("func_72786_a", "track");
		ObfuscationPart3.map.put("func_72787_a", "removePlayerFromTrackers");
		ObfuscationPart3.map.put("func_72788_a", "tick");
		ObfuscationPart3.map.put("func_72790_b", "untrack");
		ObfuscationPart3.map.put("func_72791_a", "track");
		ObfuscationPart3.map.put("func_72800_K", "getHeight");
		ObfuscationPart3.map.put("func_72806_N", "isEmpty");
		ObfuscationPart3.map.put("func_72819_i", "getThunderStrength");
		ObfuscationPart3.map.put("func_72820_D", "getWorldTime");
		ObfuscationPart3.map.put("func_72823_a", "setData");
		ObfuscationPart3.map.put("func_72824_f", "getCloudColour");
		ObfuscationPart3.map.put("func_72826_c", "getCelestialAngle");
		ObfuscationPart3.map.put("func_72827_u", "getProviderName");
		ObfuscationPart3.map.put("func_72829_c", "checkBlockCollision");
		ObfuscationPart3.map.put("func_72833_a", "getSkyColor");
		ObfuscationPart3.map.put("func_72835_b", "tick");
		ObfuscationPart3.map.put("func_72838_d", "spawnEntity");
		ObfuscationPart3.map.put("func_72839_b", "getEntitiesWithinAABBExcludingEntity");
		ObfuscationPart3.map.put("func_72841_b", "getUniqueDataId");
		ObfuscationPart3.map.put("func_72842_a", "getBlockDensity");
		ObfuscationPart3.map.put("func_72843_D", "setRandomSeed");
		ObfuscationPart3.map.put("func_72847_b", "onEntityRemoved");
		ObfuscationPart3.map.put("func_72848_b", "removeEventListener");
		ObfuscationPart3.map.put("func_72853_d", "getMoonPhase");
		ObfuscationPart3.map.put("func_72854_c", "updateAllPlayersSleepingFlag");
		ObfuscationPart3.map.put("func_72855_b", "checkNoEntityCollision");
		ObfuscationPart3.map.put("func_72857_a", "findNearestEntityWithinAABB");
		ObfuscationPart3.map.put("func_72860_G", "getSaveHandler");
		ObfuscationPart3.map.put("func_72863_F", "getChunkProvider");
		ObfuscationPart3.map.put("func_72866_a", "updateEntityWithOptionalForce");
		ObfuscationPart3.map.put("func_72867_j", "getRainStrength");
		ObfuscationPart3.map.put("func_72870_g", "updateEntity");
		ObfuscationPart3.map.put("func_72872_a", "getEntitiesWithinAABB");
		ObfuscationPart3.map.put("func_72875_a", "isMaterialInBB");
		ObfuscationPart3.map.put("func_72876_a", "createExplosion");
		ObfuscationPart3.map.put("func_72877_b", "setWorldTime");
		ObfuscationPart3.map.put("func_72880_h", "getStarBrightness");
		ObfuscationPart3.map.put("func_72882_A", "sendQuittingDisconnectingPacket");
		ObfuscationPart3.map.put("func_72885_a", "newExplosion");
		ObfuscationPart3.map.put("func_72890_a", "getClosestPlayerToEntity");
		ObfuscationPart3.map.put("func_72891_a", "setAllowedSpawnTypes");
		ObfuscationPart3.map.put("func_72894_k", "setRainStrength");
		ObfuscationPart3.map.put("func_72896_J", "isRaining");
		ObfuscationPart3.map.put("func_72897_h", "joinEntityInSurroundings");
		ObfuscationPart3.map.put("func_72900_e", "removeEntity");
		ObfuscationPart3.map.put("func_72901_a", "rayTraceBlocks");
		ObfuscationPart3.map.put("func_72905_C", "getSeed");
		ObfuscationPart3.map.put("func_72906_B", "checkSessionLock");
		ObfuscationPart3.map.put("func_72907_a", "countEntities");
		ObfuscationPart3.map.put("func_72910_y", "getLoadedEntityList");
		ObfuscationPart3.map.put("func_72911_I", "isThundering");
		ObfuscationPart3.map.put("func_72912_H", "getWorldInfo");
		ObfuscationPart3.map.put("func_72914_a", "addWorldInfoToCrashReport");
		ObfuscationPart3.map.put("func_72916_c", "isSpawnChunk");
		ObfuscationPart3.map.put("func_72917_a", "checkNoEntityCollision");
		ObfuscationPart3.map.put("func_72918_a", "handleMaterialAcceleration");
		ObfuscationPart3.map.put("func_72919_O", "getHorizon");
		ObfuscationPart3.map.put("func_72920_a", "getPendingBlockUpdates");
		ObfuscationPart3.map.put("func_72923_a", "onEntityAdded");
		ObfuscationPart3.map.put("func_72924_a", "getPlayerEntityByName");
		ObfuscationPart3.map.put("func_72929_e", "getCelestialAngleRadians");
		ObfuscationPart3.map.put("func_72933_a", "rayTraceBlocks");
		ObfuscationPart3.map.put("func_72935_r", "isDaytime");
		ObfuscationPart3.map.put("func_72939_s", "updateEntities");
		ObfuscationPart3.map.put("func_72940_L", "getActualHeight");
		ObfuscationPart3.map.put("func_72942_c", "addWeatherEffect");
		ObfuscationPart3.map.put("func_72943_a", "loadData");
		ObfuscationPart3.map.put("func_72947_a", "calculateInitialWeather");
		ObfuscationPart3.map.put("func_72948_g", "getFogColor");
		ObfuscationPart3.map.put("func_72953_d", "containsAnyLiquid");
		ObfuscationPart3.map.put("func_72954_a", "addEventListener");
		ObfuscationPart3.map.put("func_72955_a", "tickUpdates");
		ObfuscationPart3.map.put("func_72959_q", "getBiomeProvider");
		ObfuscationPart3.map.put("func_72960_a", "setEntityState");
		ObfuscationPart3.map.put("func_72963_a", "initialize");
		ObfuscationPart3.map.put("func_72964_e", "getChunkFromChunkCoords");
		ObfuscationPart3.map.put("func_72966_v", "calculateInitialSkylight");
		ObfuscationPart3.map.put("func_72967_a", "calculateSkylightSubtracted");
		ObfuscationPart3.map.put("func_72970_h", "createChunkProvider");
		ObfuscationPart3.map.put("func_72971_b", "getSunBrightness");
		ObfuscationPart3.map.put("func_72973_f", "removeEntityDangerously");
		ObfuscationPart3.map.put("func_72974_f", "setInitialSpawnLocation");
		ObfuscationPart3.map.put("func_72975_g", "markBlocksDirtyVertical");
		ObfuscationPart3.map.put("func_72979_l", "updateWeather");
		ObfuscationPart3.map.put("func_72981_t", "getDebugLoadedEntities");
		ObfuscationPart3.map.put("func_73022_a", "removeAllEntities");
		ObfuscationPart3.map.put("func_73025_a", "doPreChunk");
		ObfuscationPart3.map.put("func_73027_a", "addEntityToWorld");
		ObfuscationPart3.map.put("func_73028_b", "removeEntityFromWorld");
		ObfuscationPart3.map.put("func_73029_E", "doVoidFogParticles");
		ObfuscationPart3.map.put("func_73031_a", "invalidateBlockReceiveRegion");
		ObfuscationPart3.map.put("func_73039_n", "getEntityTracker");
		ObfuscationPart3.map.put("func_73041_k", "flush");
		ObfuscationPart3.map.put("func_73042_a", "saveLevel");
		ObfuscationPart3.map.put("func_73044_a", "saveAllChunks");
		ObfuscationPart3.map.put("func_73045_a", "getEntityByID");
		ObfuscationPart3.map.put("func_73046_m", "getMinecraftServer");
		ObfuscationPart3.map.put("func_73047_i", "createBonusChest");
		ObfuscationPart3.map.put("func_73051_P", "resetRainAndThunder");
		ObfuscationPart3.map.put("func_73052_b", "createSpawnPosition");
		ObfuscationPart3.map.put("func_73053_d", "wakeAllPlayers");
		ObfuscationPart3.map.put("func_73056_e", "areAllPlayersAsleep");
		ObfuscationPart3.map.put("func_73075_a", "updateBlockRemoving");
		ObfuscationPart3.map.put("func_73076_a", "setGameType");
		ObfuscationPart3.map.put("func_73077_b", "initializeGameType");
		ObfuscationPart3.map.put("func_73080_a", "setWorld");
		ObfuscationPart3.map.put("func_73081_b", "getGameType");
		ObfuscationPart3.map.put("func_73083_d", "isCreative");
		ObfuscationPart3.map.put("func_73101_e", "sendDemoReminder");
		ObfuscationPart3.map.put("func_73106_e", "getPartialBlockDamage");
		ObfuscationPart3.map.put("func_73107_a", "setPartialBlockDamage");
		ObfuscationPart3.map.put("func_73117_b", "updatePlayerEntity");
		ObfuscationPart3.map.put("func_73118_a", "removeFromTrackedPlayers");
		ObfuscationPart3.map.put("func_73119_a", "sendDestroyEntityPacketToTrackedPlayers");
		ObfuscationPart3.map.put("func_73121_d", "isPlayerWatchingThisChunk");
		ObfuscationPart3.map.put("func_73122_a", "updatePlayerList");
		ObfuscationPart3.map.put("func_73123_c", "removeTrackedPlayerSymmetric");
		ObfuscationPart3.map.put("func_73125_b", "updatePlayerEntities");
		ObfuscationPart3.map.put("func_73148_d", "makeString");
		ObfuscationPart3.map.put("func_73149_a", "chunkExists");
		ObfuscationPart3.map.put("func_73152_e", "getLoadedChunkCount");
		ObfuscationPart3.map.put("func_73156_b", "tick");
		ObfuscationPart3.map.put("func_73157_c", "canSave");
		ObfuscationPart3.map.put("func_73158_c", "loadChunk");
		ObfuscationPart3.map.put("func_73234_b", "unloadChunk");
		ObfuscationPart3.map.put("func_73239_e", "loadChunkFromFile");
		ObfuscationPart3.map.put("func_73240_a", "queueUnloadAll");
		ObfuscationPart3.map.put("func_73242_b", "saveChunkData");
		ObfuscationPart3.map.put("func_73243_a", "saveChunkExtraData");
		ObfuscationPart3.map.put("func_73660_a", "update");
		ObfuscationPart3.map.put("func_73665_c", "getPropertiesFile");
		ObfuscationPart3.map.put("func_73666_a", "generateNewProperties");
		ObfuscationPart3.map.put("func_73667_a", "setProperty");
		ObfuscationPart3.map.put("func_73668_b", "saveProperties");
		ObfuscationPart3.map.put("func_73669_a", "getIntProperty");
		ObfuscationPart3.map.put("func_73670_a", "getBooleanProperty");
		ObfuscationPart3.map.put("func_73671_a", "getStringProperty");
		ObfuscationPart3.map.put("func_73680_d", "getBanEndDate");
		ObfuscationPart3.map.put("func_73682_e", "hasBanExpired");
		ObfuscationPart3.map.put("func_73686_f", "getBanReason");
		ObfuscationPart3.map.put("func_73718_a", "setLoadingProgress");
		ObfuscationPart3.map.put("func_73719_c", "displayLoadingString");
		ObfuscationPart3.map.put("func_73720_a", "displaySavingString");
		ObfuscationPart3.map.put("func_73721_b", "resetProgressAndMessage");
		ObfuscationPart3.map.put("func_73722_d", "displayString");
		ObfuscationPart3.map.put("func_73728_b", "drawVerticalLine");
		ObfuscationPart3.map.put("func_73729_b", "drawTexturedModalRect");
		ObfuscationPart3.map.put("func_73730_a", "drawHorizontalLine");
		ObfuscationPart3.map.put("func_73731_b", "drawString");
		ObfuscationPart3.map.put("func_73732_a", "drawCenteredString");
		ObfuscationPart3.map.put("func_73733_a", "drawGradientRect");
		ObfuscationPart3.map.put("func_73734_a", "drawRect");
		ObfuscationPart3.map.put("func_73831_a", "updateTick");
		ObfuscationPart3.map.put("func_73833_a", "setRecordPlayingMessage");
		ObfuscationPart3.map.put("func_73834_c", "getUpdateCounter");
		ObfuscationPart3.map.put("func_73863_a", "drawScreen");
		ObfuscationPart3.map.put("func_73864_a", "mouseClicked");
		ObfuscationPart3.map.put("func_73866_w_", "initGui");
		ObfuscationPart3.map.put("func_73868_f", "doesGuiPauseGame");
		ObfuscationPart3.map.put("func_73869_a", "keyTyped");
		ObfuscationPart3.map.put("func_73876_c", "updateScreen");
		ObfuscationPart3.map.put("func_73878_a", "confirmClicked");
		ObfuscationPart3.map.put("func_73968_a", "rotateAndBlurSkybox");
		ObfuscationPart3.map.put("func_73969_a", "addSingleplayerMultiplayerButtons");
		ObfuscationPart3.map.put("func_73970_b", "drawPanorama");
		ObfuscationPart3.map.put("func_73971_c", "renderSkybox");
		ObfuscationPart3.map.put("func_73972_b", "addDemoButtons");
		ObfuscationPart3.map.put("func_74275_a", "updateTimer");
		ObfuscationPart3.map.put("func_74290_a", "getTimestampedPNGFileForDirectory");
		ObfuscationPart3.map.put("func_74296_a", "getOptionFloatValue");
		ObfuscationPart3.map.put("func_74297_c", "getKeyBinding");
		ObfuscationPart3.map.put("func_74298_c", "getKeyDisplayString");
		ObfuscationPart3.map.put("func_74299_a", "getTranslation");
		ObfuscationPart3.map.put("func_74300_a", "loadOptions");
		ObfuscationPart3.map.put("func_74303_b", "saveOptions");
		ObfuscationPart3.map.put("func_74304_a", "setOptionFloatValue");
		ObfuscationPart3.map.put("func_74305_a", "parseFloat");
		ObfuscationPart3.map.put("func_74306_a", "setOptionValue");
		ObfuscationPart3.map.put("func_74308_b", "getOptionOrdinalValue");
		ObfuscationPart3.map.put("func_74372_a", "grabMouseCursor");
		ObfuscationPart3.map.put("func_74373_b", "ungrabMouseCursor");
		ObfuscationPart3.map.put("func_74374_c", "mouseXYChange");
		ObfuscationPart3.map.put("func_74378_d", "getTranslation");
		ObfuscationPart3.map.put("func_74379_a", "byOrdinal");
		ObfuscationPart3.map.put("func_74380_a", "isFloat");
		ObfuscationPart3.map.put("func_74381_c", "getOrdinal");
		ObfuscationPart3.map.put("func_74382_b", "isBoolean");
		ObfuscationPart3.map.put("func_74428_b", "processReceivedPackets");
		ObfuscationPart3.map.put("func_74430_c", "getRemoteAddress");
		ObfuscationPart3.map.put("func_74505_d", "unpressKey");
		ObfuscationPart3.map.put("func_74506_a", "unPressAllKeys");
		ObfuscationPart3.map.put("func_74507_a", "onTick");
		ObfuscationPart3.map.put("func_74508_b", "resetKeyBindingArrayAndHash");
		ObfuscationPart3.map.put("func_74510_a", "setKeyBindState");
		ObfuscationPart3.map.put("func_74517_a", "setColorBuffer");
		ObfuscationPart3.map.put("func_74518_a", "disableStandardItemLighting");
		ObfuscationPart3.map.put("func_74519_b", "enableStandardItemLighting");
		ObfuscationPart3.map.put("func_74520_c", "enableGUIStandardItemLighting");
		ObfuscationPart3.map.put("func_74521_a", "setColorBuffer");
		ObfuscationPart3.map.put("func_74523_b", "deleteDisplayLists");
		ObfuscationPart3.map.put("func_74524_c", "createDirectByteBuffer");
		ObfuscationPart3.map.put("func_74526_a", "generateDisplayLists");
		ObfuscationPart3.map.put("func_74527_f", "createDirectIntBuffer");
		ObfuscationPart3.map.put("func_74529_h", "createDirectFloatBuffer");
		ObfuscationPart3.map.put("func_74539_c", "getChatLineID");
		ObfuscationPart3.map.put("func_74540_b", "getUpdatedCounter");
		ObfuscationPart3.map.put("func_74583_a", "updateRenderInfo");
		ObfuscationPart3.map.put("func_74732_a", "getId");
		ObfuscationPart3.map.put("func_74734_a", "write");
		ObfuscationPart3.map.put("func_74737_b", "copy");
		ObfuscationPart3.map.put("func_74742_a", "appendTag");
		ObfuscationPart3.map.put("func_74744_a", "removeTag");
		ObfuscationPart3.map.put("func_74745_c", "tagCount");
		ObfuscationPart3.map.put("func_74757_a", "setBoolean");
		ObfuscationPart3.map.put("func_74759_k", "getIntArray");
		ObfuscationPart3.map.put("func_74760_g", "getFloat");
		ObfuscationPart3.map.put("func_74762_e", "getInteger");
		ObfuscationPart3.map.put("func_74763_f", "getLong");
		ObfuscationPart3.map.put("func_74764_b", "hasKey");
		ObfuscationPart3.map.put("func_74765_d", "getShort");
		ObfuscationPart3.map.put("func_74767_n", "getBoolean");
		ObfuscationPart3.map.put("func_74768_a", "setInteger");
		ObfuscationPart3.map.put("func_74769_h", "getDouble");
		ObfuscationPart3.map.put("func_74770_j", "getByteArray");
		ObfuscationPart3.map.put("func_74771_c", "getByte");
		ObfuscationPart3.map.put("func_74772_a", "setLong");
		ObfuscationPart3.map.put("func_74773_a", "setByteArray");
		ObfuscationPart3.map.put("func_74774_a", "setByte");
		ObfuscationPart3.map.put("func_74775_l", "getCompoundTag");
		ObfuscationPart3.map.put("func_74776_a", "setFloat");
		ObfuscationPart3.map.put("func_74777_a", "setShort");
		ObfuscationPart3.map.put("func_74778_a", "setString");
		ObfuscationPart3.map.put("func_74779_i", "getString");
		ObfuscationPart3.map.put("func_74780_a", "setDouble");
		ObfuscationPart3.map.put("func_74781_a", "getTag");
		ObfuscationPart3.map.put("func_74782_a", "setTag");
		ObfuscationPart3.map.put("func_74783_a", "setIntArray");
		ObfuscationPart3.map.put("func_74793_a", "safeWrite");
		ObfuscationPart3.map.put("func_74794_a", "read");
		ObfuscationPart3.map.put("func_74795_b", "write");
		ObfuscationPart3.map.put("func_74796_a", "readCompressed");
		ObfuscationPart3.map.put("func_74797_a", "read");
		ObfuscationPart3.map.put("func_74799_a", "writeCompressed");
		ObfuscationPart3.map.put("func_74800_a", "write");
		ObfuscationPart3.map.put("func_74803_a", "translateKeyFormat");
		ObfuscationPart3.map.put("func_74805_b", "translateKey");
		ObfuscationPart3.map.put("func_74808_a", "getInstance");
		ObfuscationPart3.map.put("func_74837_a", "translateToLocalFormatted");
		ObfuscationPart3.map.put("func_74838_a", "translateToLocal");
		ObfuscationPart3.map.put("func_74844_a", "getErrorObjects");
		ObfuscationPart3.map.put("func_74860_a", "isLiquidInStructureBoundingBox");
		ObfuscationPart3.map.put("func_74861_a", "buildComponent");
		ObfuscationPart3.map.put("func_74862_a", "getYWithOffset");
		ObfuscationPart3.map.put("func_74865_a", "getXWithOffset");
		ObfuscationPart3.map.put("func_74871_b", "clearCurrentPositionBlocksUpwards");
		ObfuscationPart3.map.put("func_74873_b", "getZWithOffset");
		ObfuscationPart3.map.put("func_74874_b", "getBoundingBox");
		ObfuscationPart3.map.put("func_74875_a", "addComponentParts");
		ObfuscationPart3.map.put("func_74877_c", "getComponentType");
		ObfuscationPart3.map.put("func_74878_a", "fillWithAir");
		ObfuscationPart3.map.put("func_74882_a", "fillWithRandomizedBlocks");
		ObfuscationPart3.map.put("func_74883_a", "findIntersecting");
		ObfuscationPart3.map.put("func_74889_b", "getAverageGroundLevel");
		ObfuscationPart3.map.put("func_74891_a", "getNextComponentNN");
		ObfuscationPart3.map.put("func_74893_a", "spawnVillagers");
		ObfuscationPart3.map.put("func_74894_b", "getNextComponentPP");
		ObfuscationPart3.map.put("func_74895_a", "canVillageGoDeeper");
		ObfuscationPart3.map.put("func_74935_a", "offsetToAverageGroundLevel");
		ObfuscationPart3.map.put("func_74960_a", "getTotalWeight");
		ObfuscationPart3.map.put("func_74961_b", "getNextComponentX");
		ObfuscationPart3.map.put("func_74963_a", "getNextComponentNormal");
		ObfuscationPart3.map.put("func_74964_a", "isAboveGround");
		ObfuscationPart3.map.put("func_74965_c", "getNextComponentZ");
		ObfuscationPart3.map.put("func_74986_a", "getNextComponentNormal");
		ObfuscationPart3.map.put("func_74987_c", "getNextComponentZ");
		ObfuscationPart3.map.put("func_74988_a", "getRandomDoor");
		ObfuscationPart3.map.put("func_74989_b", "getNextComponentX");
		ObfuscationPart3.map.put("func_74990_a", "placeDoor");
		ObfuscationPart3.map.put("func_74991_a", "canStrongholdGoDeeper");
		ObfuscationPart3.map.put("func_75047_a", "canSpawnStructureAtCoords");
		ObfuscationPart3.map.put("func_75049_b", "getStructureStart");
		ObfuscationPart3.map.put("func_75059_a", "getSpawnList");
		ObfuscationPart3.map.put("func_75062_a", "selectBlocks");
		ObfuscationPart3.map.put("func_75067_a", "markAvailableHeight");
		ObfuscationPart3.map.put("func_75068_a", "generateStructure");
		ObfuscationPart3.map.put("func_75069_d", "isSizeableStructure");
		ObfuscationPart3.map.put("func_75070_a", "setRandomHeight");
		ObfuscationPart3.map.put("func_75071_a", "getBoundingBox");
		ObfuscationPart3.map.put("func_75072_c", "updateBoundingBox");
		ObfuscationPart3.map.put("func_75079_a", "updatePieceWeight");
		ObfuscationPart3.map.put("func_75084_a", "getStructureVillageWeightedPieceList");
		ObfuscationPart3.map.put("func_75085_a", "canSpawnMoreVillagePiecesOfType");
		ObfuscationPart3.map.put("func_75086_a", "canSpawnMoreVillagePieces");
		ObfuscationPart3.map.put("func_75091_a", "writeCapabilitiesToNBT");
		ObfuscationPart3.map.put("func_75092_a", "setFlySpeed");
		ObfuscationPart3.map.put("func_75093_a", "getFlySpeed");
		ObfuscationPart3.map.put("func_75094_b", "getWalkSpeed");
		ObfuscationPart3.map.put("func_75095_b", "readCapabilitiesFromNBT");
		ObfuscationPart3.map.put("func_75112_a", "readNBT");
		ObfuscationPart3.map.put("func_75113_a", "addExhaustion");
		ObfuscationPart3.map.put("func_75114_a", "setFoodLevel");
		ObfuscationPart3.map.put("func_75115_e", "getSaturationLevel");
		ObfuscationPart3.map.put("func_75116_a", "getFoodLevel");
		ObfuscationPart3.map.put("func_75117_b", "writeNBT");
		ObfuscationPart3.map.put("func_75118_a", "onUpdate");
		ObfuscationPart3.map.put("func_75119_b", "setFoodSaturationLevel");
		ObfuscationPart3.map.put("func_75121_c", "needFood");
		ObfuscationPart3.map.put("func_75122_a", "addStats");
		ObfuscationPart3.map.put("func_75128_a", "setCanCraft");
		ObfuscationPart3.map.put("func_75129_b", "getCanCraft");
		ObfuscationPart3.map.put("func_75130_a", "onCraftMatrixChanged");
		ObfuscationPart3.map.put("func_75132_a", "addListener");
		ObfuscationPart3.map.put("func_75134_a", "onContainerClosed");
		ObfuscationPart3.map.put("func_75135_a", "mergeItemStack");
		ObfuscationPart3.map.put("func_75136_a", "getNextTransactionID");
		ObfuscationPart3.map.put("func_75137_b", "updateProgressBar");
		ObfuscationPart3.map.put("func_75138_a", "getInventory");
		ObfuscationPart3.map.put("func_75139_a", "getSlot");
		ObfuscationPart3.map.put("func_75140_a", "enchantItem");
		ObfuscationPart3.map.put("func_75141_a", "putStackInSlot");
		ObfuscationPart3.map.put("func_75142_b", "detectAndSendChanges");
		ObfuscationPart3.map.put("func_75145_c", "canInteractWith");
		ObfuscationPart3.map.put("func_75146_a", "addSlotToContainer");
		ObfuscationPart3.map.put("func_75147_a", "getSlotFromInventory");
		ObfuscationPart3.map.put("func_75174_d", "getMerchantInventory");
		ObfuscationPart3.map.put("func_75175_c", "setCurrentRecipeIndex");
		ObfuscationPart3.map.put("func_75189_a", "canSpawnMoreStructuresOfType");
		ObfuscationPart3.map.put("func_75190_a", "canSpawnMoreStructures");
		ObfuscationPart3.map.put("func_75198_a", "prepareStructurePieces");
		ObfuscationPart3.map.put("func_75202_c", "canAddStructurePieces");
		ObfuscationPart3.map.put("func_75208_c", "onCrafting");
		ObfuscationPart3.map.put("func_75209_a", "decrStackSize");
		ObfuscationPart3.map.put("func_75210_a", "onCrafting");
		ObfuscationPart3.map.put("func_75211_c", "getStack");
		ObfuscationPart3.map.put("func_75214_a", "isItemValid");
		ObfuscationPart3.map.put("func_75215_d", "putStack");
		ObfuscationPart3.map.put("func_75216_d", "getHasStack");
		ObfuscationPart3.map.put("func_75217_a", "isHere");
		ObfuscationPart3.map.put("func_75218_e", "onSlotChanged");
		ObfuscationPart3.map.put("func_75219_a", "getSlotStackLimit");
		ObfuscationPart3.map.put("func_75220_a", "onSlotChange");
		ObfuscationPart3.map.put("func_75230_a", "doTrade");
		ObfuscationPart3.map.put("func_75243_a_", "canHoldPotion");
		ObfuscationPart3.map.put("func_75246_d", "updateTask");
		ObfuscationPart3.map.put("func_75247_h", "getMutexBits");
		ObfuscationPart3.map.put("func_75248_a", "setMutexBits");
		ObfuscationPart3.map.put("func_75249_e", "startExecuting");
		ObfuscationPart3.map.put("func_75250_a", "shouldExecute");
		ObfuscationPart3.map.put("func_75251_c", "resetTask");
		ObfuscationPart3.map.put("func_75252_g", "isInterruptible");
		ObfuscationPart3.map.put("func_75253_b", "shouldContinueExecuting");
		ObfuscationPart3.map.put("func_75270_a", "setSitting");
		ObfuscationPart3.map.put("func_75277_f", "isRunning");
		ObfuscationPart3.map.put("func_75295_a", "canEasilyReach");
		ObfuscationPart3.map.put("func_75296_a", "isSuitableTarget");
		ObfuscationPart3.map.put("func_75366_f", "findPossibleShelter");
		ObfuscationPart3.map.put("func_75382_a", "hasTemptationItemInHand");
		ObfuscationPart3.map.put("func_75388_i", "spawnBaby");
		ObfuscationPart3.map.put("func_75389_f", "getNearbyMate");
		ObfuscationPart3.map.put("func_75412_a", "findNearestDoor");
		ObfuscationPart3.map.put("func_75413_a", "doesDoorListContain");
		ObfuscationPart3.map.put("func_75414_f", "resizeDoorList");
		ObfuscationPart3.map.put("func_75446_f", "checkSufficientDoorsPresentForNewVillager");
		ObfuscationPart3.map.put("func_75447_i", "giveBirth");
		ObfuscationPart3.map.put("func_75461_b", "findRandomTargetBlockAwayFrom");
		ObfuscationPart3.map.put("func_75462_c", "findRandomTargetBlock");
		ObfuscationPart3.map.put("func_75463_a", "findRandomTarget");
		ObfuscationPart3.map.put("func_75464_a", "findRandomTargetBlockTowards");
		ObfuscationPart3.map.put("func_75466_d", "resetDoorOpeningRestrictionCounter");
		ObfuscationPart3.map.put("func_75468_f", "getDoorOpeningRestrictionCounter");
		ObfuscationPart3.map.put("func_75470_e", "incrementDoorOpeningRestrictionCounter");
		ObfuscationPart3.map.put("func_75473_b", "getLastActivityTimestamp");
		ObfuscationPart3.map.put("func_75474_b", "getDistanceSquared");
		ObfuscationPart3.map.put("func_75484_a", "setPath");
		ObfuscationPart3.map.put("func_75485_k", "canNavigate");
		ObfuscationPart3.map.put("func_75487_m", "removeSunnyPath");
		ObfuscationPart3.map.put("func_75488_a", "getPathToXYZ");
		ObfuscationPart3.map.put("func_75489_a", "setSpeed");
		ObfuscationPart3.map.put("func_75492_a", "tryMoveToXYZ");
		ObfuscationPart3.map.put("func_75493_a", "isDirectPathBetweenPoints");
		ObfuscationPart3.map.put("func_75494_a", "getPathToEntityLiving");
		ObfuscationPart3.map.put("func_75497_a", "tryMoveToEntityLiving");
		ObfuscationPart3.map.put("func_75499_g", "clearPath");
		ObfuscationPart3.map.put("func_75500_f", "noPath");
		ObfuscationPart3.map.put("func_75501_e", "onUpdateNavigation");
		ObfuscationPart3.map.put("func_75502_i", "getEntityPosition");
		ObfuscationPart3.map.put("func_75505_d", "getPath");
		ObfuscationPart3.map.put("func_75506_l", "isInLiquid");
		ObfuscationPart3.map.put("func_75508_h", "pathFollow");
		ObfuscationPart3.map.put("func_75522_a", "canSee");
		ObfuscationPart3.map.put("func_75523_a", "clearSensingCache");
		ObfuscationPart3.map.put("func_75528_a", "tick");
		ObfuscationPart3.map.put("func_75529_b", "trySetupSiege");
		ObfuscationPart3.map.put("func_75530_c", "spawnZombie");
		ObfuscationPart3.map.put("func_75540_b", "getVillageList");
		ObfuscationPart3.map.put("func_75543_d", "dropOldestVillagerPosition");
		ObfuscationPart3.map.put("func_75544_a", "tick");
		ObfuscationPart3.map.put("func_75545_e", "addNewDoorsToVillageOrCreateVillage");
		ObfuscationPart3.map.put("func_75549_c", "removeAnnihilatedVillages");
		ObfuscationPart3.map.put("func_75557_k", "removeDeadAndOutOfRangeDoors");
		ObfuscationPart3.map.put("func_75558_f", "getVillageDoorInfoList");
		ObfuscationPart3.map.put("func_75560_a", "tick");
		ObfuscationPart3.map.put("func_75561_d", "getTicksSinceLastDoorAdding");
		ObfuscationPart3.map.put("func_75562_e", "getNumVillagers");
		ObfuscationPart3.map.put("func_75565_j", "removeDeadAndOldAgressors");
		ObfuscationPart3.map.put("func_75566_g", "isAnnihilated");
		ObfuscationPart3.map.put("func_75567_c", "getNumVillageDoors");
		ObfuscationPart3.map.put("func_75568_b", "getVillageRadius");
		ObfuscationPart3.map.put("func_75571_b", "findNearestVillageAggressor");
		ObfuscationPart3.map.put("func_75572_i", "updateNumVillagers");
		ObfuscationPart3.map.put("func_75573_l", "updateVillageRadiusAndCenter");
		ObfuscationPart3.map.put("func_75575_a", "addOrRenewAgressor");
		ObfuscationPart3.map.put("func_75576_a", "addVillageDoorInfo");
		ObfuscationPart3.map.put("func_75579_h", "updateNumIronGolems");
		ObfuscationPart3.map.put("func_75598_a", "getCreatureClass");
		ObfuscationPart3.map.put("func_75599_d", "getPeacefulCreature");
		ObfuscationPart3.map.put("func_75601_b", "getMaxNumberOfCreature");
		ObfuscationPart3.map.put("func_75615_a", "createEntityFromNBT");
		ObfuscationPart3.map.put("func_75616_a", "createEntityByID");
		ObfuscationPart3.map.put("func_75621_b", "getEntityString");
		ObfuscationPart3.map.put("func_75638_b", "getSpeed");
		ObfuscationPart3.map.put("func_75639_a", "limitAngle");
		ObfuscationPart3.map.put("func_75640_a", "isUpdating");
		ObfuscationPart3.map.put("func_75641_c", "onUpdateMoveHelper");
		ObfuscationPart3.map.put("func_75642_a", "setMoveTo");
		ObfuscationPart3.map.put("func_75649_a", "onUpdateLook");
		ObfuscationPart3.map.put("func_75650_a", "setLookPosition");
		ObfuscationPart3.map.put("func_75651_a", "setLookPositionWithEntity");
		ObfuscationPart3.map.put("func_75652_a", "updateRotation");
		ObfuscationPart3.map.put("func_75660_a", "setJumping");
		ObfuscationPart3.map.put("func_75661_b", "doJump");
		ObfuscationPart3.map.put("func_75664_a", "updateRenderAngles");
		ObfuscationPart3.map.put("func_75665_a", "computeAngleWithBound");
		ObfuscationPart3.map.put("func_75734_a", "waitForFinish");
		ObfuscationPart3.map.put("func_75735_a", "queueIO");
		ObfuscationPart3.map.put("func_75736_b", "processQueue");
		ObfuscationPart3.map.put("func_75742_a", "getOrLoadData");
		ObfuscationPart3.map.put("func_75743_a", "getUniqueDataId");
		ObfuscationPart3.map.put("func_75744_a", "saveAllData");
		ObfuscationPart3.map.put("func_75745_a", "setData");
		ObfuscationPart3.map.put("func_75746_b", "loadIdCounts");
		ObfuscationPart3.map.put("func_75747_a", "saveData");
		ObfuscationPart3.map.put("func_75752_b", "readPlayerData");
		ObfuscationPart3.map.put("func_75753_a", "writePlayerData");
		ObfuscationPart3.map.put("func_75754_f", "getAvailablePlayerDat");
		ObfuscationPart3.map.put("func_75755_a", "saveWorldInfoWithPlayer");
		ObfuscationPart3.map.put("func_75756_e", "getPlayerNBTManager");
		ObfuscationPart3.map.put("func_75757_d", "loadWorldInfo");
		ObfuscationPart3.map.put("func_75758_b", "getMapFileFromName");
		ObfuscationPart3.map.put("func_75759_a", "flush");
		ObfuscationPart3.map.put("func_75761_a", "saveWorldInfo");
		ObfuscationPart3.map.put("func_75762_c", "checkSessionLock");
		ObfuscationPart3.map.put("func_75763_a", "getChunkLoader");
		ObfuscationPart3.map.put("func_75765_b", "getWorldDirectory");
		ObfuscationPart3.map.put("func_75766_h", "setSessionLock");
		ObfuscationPart3.map.put("func_75773_a", "canContinue");
		ObfuscationPart3.map.put("func_75774_a", "onUpdateTasks");
		ObfuscationPart3.map.put("func_75775_b", "canUse");
		ObfuscationPart3.map.put("func_75776_a", "addTask");
		ObfuscationPart3.map.put("func_75777_a", "areTasksCompatible");
		ObfuscationPart3.map.put("func_75783_h", "getCheatsEnabled");
		ObfuscationPart3.map.put("func_75784_e", "getLastTimePlayed");
		ObfuscationPart3.map.put("func_75785_d", "requiresConversion");
		ObfuscationPart3.map.put("func_75786_a", "getFileName");
		ObfuscationPart3.map.put("func_75788_b", "getDisplayName");
		ObfuscationPart3.map.put("func_75789_g", "isHardcoreModeEnabled");
		ObfuscationPart3.map.put("func_75790_f", "getEnumGameType");
		ObfuscationPart3.map.put("func_75799_b", "getSaveList");
		ObfuscationPart3.map.put("func_75800_d", "flushCache");
		ObfuscationPart3.map.put("func_75801_b", "isOldMapFormat");
		ObfuscationPart3.map.put("func_75802_e", "deleteWorldDirectory");
		ObfuscationPart3.map.put("func_75803_c", "getWorldInfo");
		ObfuscationPart3.map.put("func_75804_a", "getSaveLoader");
		ObfuscationPart3.map.put("func_75805_a", "convertMapFormat");
		ObfuscationPart3.map.put("func_75806_a", "renameWorld");
		ObfuscationPart3.map.put("func_75807_a", "deleteFiles");
		ObfuscationPart3.map.put("func_75809_f", "createFile");
		ObfuscationPart3.map.put("func_75810_a", "addRegionFilesToCollection");
		ObfuscationPart3.map.put("func_75811_a", "convertChunks");
		ObfuscationPart3.map.put("func_75812_c", "getSaveVersion");
		ObfuscationPart3.map.put("func_75813_a", "convertFile");
		ObfuscationPart3.map.put("func_75814_c", "writeNextIO");
		ObfuscationPart3.map.put("func_75815_a", "loadChunk");
		ObfuscationPart3.map.put("func_75816_a", "saveChunk");
		ObfuscationPart3.map.put("func_75817_a", "chunkTick");
		ObfuscationPart3.map.put("func_75818_b", "flush");
		ObfuscationPart3.map.put("func_75819_b", "saveExtraChunkData");
		ObfuscationPart3.map.put("func_75820_a", "writeChunkToNBT");
		ObfuscationPart3.map.put("func_75822_a", "checkedReadChunkFromNBT");
		ObfuscationPart3.map.put("func_75823_a", "readChunkFromNBT");
		ObfuscationPart3.map.put("func_75824_a", "addChunkToPending");
		ObfuscationPart3.map.put("func_75829_a", "distanceTo");
		ObfuscationPart3.map.put("func_75830_a", "makeHash");
		ObfuscationPart3.map.put("func_75831_a", "isAssigned");
		ObfuscationPart3.map.put("func_75832_b", "distanceToSquared");
		ObfuscationPart3.map.put("func_75843_a", "format");
		ObfuscationPart3.map.put("func_75844_c", "dequeue");
		ObfuscationPart3.map.put("func_75845_e", "isPathEmpty");
		ObfuscationPart3.map.put("func_75846_b", "sortForward");
		ObfuscationPart3.map.put("func_75847_a", "sortBack");
		ObfuscationPart3.map.put("func_75848_a", "clearPath");
		ObfuscationPart3.map.put("func_75849_a", "addPoint");
		ObfuscationPart3.map.put("func_75850_a", "changeDistance");
		ObfuscationPart3.map.put("func_75853_a", "createPath");
		ObfuscationPart3.map.put("func_75870_c", "getFinalPathPoint");
		ObfuscationPart3.map.put("func_75871_b", "setCurrentPathLength");
		ObfuscationPart3.map.put("func_75872_c", "setCurrentPathIndex");
		ObfuscationPart3.map.put("func_75873_e", "getCurrentPathIndex");
		ObfuscationPart3.map.put("func_75874_d", "getCurrentPathLength");
		ObfuscationPart3.map.put("func_75875_a", "incrementPathIndex");
		ObfuscationPart3.map.put("func_75876_a", "isSamePath");
		ObfuscationPart3.map.put("func_75877_a", "getPathPointFromIndex");
		ObfuscationPart3.map.put("func_75878_a", "getPosition");
		ObfuscationPart3.map.put("func_75879_b", "isFinished");
		ObfuscationPart3.map.put("func_75881_a", "getVectorFromIndex");
		ObfuscationPart3.map.put("func_75885_a", "cipherOperation");
		ObfuscationPart3.map.put("func_75886_a", "createTheCipherInstance");
		ObfuscationPart3.map.put("func_75887_a", "decryptSharedKey");
		ObfuscationPart3.map.put("func_75889_b", "decryptData");
		ObfuscationPart3.map.put("func_75890_a", "createNewSharedKey");
		ObfuscationPart3.map.put("func_75891_b", "generateKeyPair");
		ObfuscationPart3.map.put("func_75893_a", "digestOperation");
		ObfuscationPart3.map.put("func_75894_a", "encryptData");
		ObfuscationPart3.map.put("func_75895_a", "getServerIdHash");
		ObfuscationPart3.map.put("func_75896_a", "decodePublicKey");
		ObfuscationPart3.map.put("func_75902_a", "nextInt");
		ObfuscationPart3.map.put("func_75903_a", "initChunkSeed");
		ObfuscationPart3.map.put("func_75904_a", "getInts");
		ObfuscationPart3.map.put("func_75905_a", "initWorldGenSeed");
		ObfuscationPart3.map.put("func_75915_a", "magnify");
		ObfuscationPart3.map.put("func_75918_d", "initCraftableStats");
		ObfuscationPart3.map.put("func_75924_a", "replaceAllSimilarBlocks");
		ObfuscationPart3.map.put("func_75925_c", "initStats");
		ObfuscationPart3.map.put("func_75966_h", "initIndependentStat");
		ObfuscationPart3.map.put("func_75968_a", "format");
		ObfuscationPart3.map.put("func_75971_g", "registerStat");
		ObfuscationPart3.map.put("func_76030_b", "getValue");
		ObfuscationPart3.map.put("func_76031_a", "getHash");
		ObfuscationPart3.map.put("func_76036_e", "removeEntry");
		ObfuscationPart3.map.put("func_76037_b", "containsItem");
		ObfuscationPart3.map.put("func_76038_a", "addKey");
		ObfuscationPart3.map.put("func_76040_a", "insert");
		ObfuscationPart3.map.put("func_76041_a", "lookup");
		ObfuscationPart3.map.put("func_76043_a", "getSlotIndex");
		ObfuscationPart3.map.put("func_76044_g", "computeHash");
		ObfuscationPart3.map.put("func_76045_c", "lookupEntry");
		ObfuscationPart3.map.put("func_76046_c", "clearMap");
		ObfuscationPart3.map.put("func_76047_h", "grow");
		ObfuscationPart3.map.put("func_76048_a", "copyTo");
		ObfuscationPart3.map.put("func_76049_d", "removeObject");
		ObfuscationPart3.map.put("func_76056_b", "setSpawnY");
		ObfuscationPart3.map.put("func_76057_l", "getLastTimePlayed");
		ObfuscationPart3.map.put("func_76058_a", "setSpawnX");
		ObfuscationPart3.map.put("func_76059_o", "isRaining");
		ObfuscationPart3.map.put("func_76060_a", "setGameType");
		ObfuscationPart3.map.put("func_76061_m", "isThundering");
		ObfuscationPart3.map.put("func_76062_a", "setWorldName");
		ObfuscationPart3.map.put("func_76063_b", "getSeed");
		ObfuscationPart3.map.put("func_76064_a", "updateTagCompound");
		ObfuscationPart3.map.put("func_76065_j", "getWorldName");
		ObfuscationPart3.map.put("func_76067_t", "getTerrainType");
		ObfuscationPart3.map.put("func_76068_b", "setWorldTime");
		ObfuscationPart3.map.put("func_76069_a", "setThundering");
		ObfuscationPart3.map.put("func_76070_v", "isInitialized");
		ObfuscationPart3.map.put("func_76071_n", "getThunderTime");
		ObfuscationPart3.map.put("func_76072_h", "getPlayerNBTTagCompound");
		ObfuscationPart3.map.put("func_76073_f", "getWorldTime");
		ObfuscationPart3.map.put("func_76074_e", "getSpawnZ");
		ObfuscationPart3.map.put("func_76075_d", "getSpawnY");
		ObfuscationPart3.map.put("func_76077_q", "getGameType");
		ObfuscationPart3.map.put("func_76078_e", "setSaveVersion");
		ObfuscationPart3.map.put("func_76079_c", "getSpawnX");
		ObfuscationPart3.map.put("func_76080_g", "setRainTime");
		ObfuscationPart3.map.put("func_76082_a", "cloneNBTCompound");
		ObfuscationPart3.map.put("func_76083_p", "getRainTime");
		ObfuscationPart3.map.put("func_76084_b", "setRaining");
		ObfuscationPart3.map.put("func_76085_a", "setTerrainType");
		ObfuscationPart3.map.put("func_76086_u", "areCommandsAllowed");
		ObfuscationPart3.map.put("func_76087_c", "setSpawnZ");
		ObfuscationPart3.map.put("func_76088_k", "getSaveVersion");
		ObfuscationPart3.map.put("func_76089_r", "isMapFeaturesEnabled");
		ObfuscationPart3.map.put("func_76090_f", "setThunderTime");
		ObfuscationPart3.map.put("func_76091_d", "setServerInitialized");
		ObfuscationPart3.map.put("func_76092_g", "getSizeOnDisk");
		ObfuscationPart3.map.put("func_76093_s", "isHardcoreModeEnabled");
		ObfuscationPart3.map.put("func_76123_f", "ceil");
		ObfuscationPart3.map.put("func_76124_d", "lfloor");
		ObfuscationPart3.map.put("func_76125_a", "clamp");
		ObfuscationPart3.map.put("func_76126_a", "sin");
		ObfuscationPart3.map.put("func_76127_a", "average");
		ObfuscationPart3.map.put("func_76128_c", "floor");
		ObfuscationPart3.map.put("func_76129_c", "sqrt");
		ObfuscationPart3.map.put("func_76130_a", "abs");
		ObfuscationPart3.map.put("func_76131_a", "clamp");
		ObfuscationPart3.map.put("func_76132_a", "absMax");
		ObfuscationPart3.map.put("func_76133_a", "sqrt");
		ObfuscationPart3.map.put("func_76134_b", "cos");
		ObfuscationPart3.map.put("func_76135_e", "abs");
		ObfuscationPart3.map.put("func_76136_a", "getInt");
		ObfuscationPart3.map.put("func_76137_a", "intFloorDiv");
		ObfuscationPart3.map.put("func_76138_g", "wrapDegrees");
		ObfuscationPart3.map.put("func_76140_b", "fastFloor");
		ObfuscationPart3.map.put("func_76141_d", "floor");
		ObfuscationPart3.map.put("func_76142_g", "wrapDegrees");
		ObfuscationPart3.map.put("func_76143_f", "ceil");
		ObfuscationPart3.map.put("func_76179_a", "buildPostString");
		ObfuscationPart3.map.put("func_76181_a", "getSuitableLanPort");
		ObfuscationPart3.map.put("func_76184_a", "readFromNBT");
		ObfuscationPart3.map.put("func_76185_a", "markDirty");
		ObfuscationPart3.map.put("func_76186_a", "setDirty");
		ObfuscationPart3.map.put("func_76188_b", "isDirty");
		ObfuscationPart3.map.put("func_76191_a", "updateVisiblePlayers");
		ObfuscationPart3.map.put("func_76217_h", "getCanBurn");
		ObfuscationPart3.map.put("func_76218_k", "isOpaque");
		ObfuscationPart3.map.put("func_76219_n", "setNoPushMobility");
		ObfuscationPart3.map.put("func_76220_a", "isSolid");
		ObfuscationPart3.map.put("func_76221_f", "setRequiresTool");
		ObfuscationPart3.map.put("func_76222_j", "isReplaceable");
		ObfuscationPart3.map.put("func_76223_p", "setTranslucent");
		ObfuscationPart3.map.put("func_76224_d", "isLiquid");
		ObfuscationPart3.map.put("func_76225_o", "setImmovableMobility");
		ObfuscationPart3.map.put("func_76226_g", "setBurning");
		ObfuscationPart3.map.put("func_76228_b", "blocksLight");
		ObfuscationPart3.map.put("func_76229_l", "isToolNotRequired");
		ObfuscationPart3.map.put("func_76230_c", "blocksMovement");
		ObfuscationPart3.map.put("func_76231_i", "setReplaceable");
		ObfuscationPart3.map.put("func_76271_a", "getRandomItem");
		ObfuscationPart3.map.put("func_76272_a", "getTotalWeight");
		ObfuscationPart3.map.put("func_76273_a", "getRandomItem");
		ObfuscationPart3.map.put("func_76304_a", "generateNoiseOctaves");
		ObfuscationPart3.map.put("func_76305_a", "generateNoiseOctaves");
		ObfuscationPart3.map.put("func_76308_a", "populateNoiseArray");
		ObfuscationPart3.map.put("func_76309_a", "grad2");
		ObfuscationPart3.map.put("func_76310_a", "grad");
		ObfuscationPart3.map.put("func_76311_b", "lerp");
		ObfuscationPart3.map.put("func_76316_a", "onInventoryChanged");
		ObfuscationPart3.map.put("func_76317_a", "clearProfiling");
		ObfuscationPart3.map.put("func_76318_c", "endStartSection");
		ObfuscationPart3.map.put("func_76319_b", "endSection");
		ObfuscationPart3.map.put("func_76320_a", "startSection");
		ObfuscationPart3.map.put("func_76321_b", "getProfilingData");
		ObfuscationPart3.map.put("func_76322_c", "getNameOfLastSection");
		ObfuscationPart3.map.put("func_76329_a", "getColor");
		ObfuscationPart3.map.put("func_76333_a", "smooth");
		ObfuscationPart3.map.put("func_76337_a", "ticksToElapsedTime");
		ObfuscationPart3.map.put("func_76338_a", "stripControlCodes");
		ObfuscationPart3.map.put("func_76340_b", "getSecond");
		ObfuscationPart3.map.put("func_76341_a", "getFirst");
		ObfuscationPart3.map.put("func_76345_d", "getHungerDamage");
		ObfuscationPart3.map.put("func_76346_g", "getTrueSource");
		ObfuscationPart3.map.put("func_76347_k", "isFireDamage");
		ObfuscationPart3.map.put("func_76348_h", "setDamageBypassesArmor");
		ObfuscationPart3.map.put("func_76349_b", "setProjectile");
		ObfuscationPart3.map.put("func_76350_n", "isDifficultyScaled");
		ObfuscationPart3.map.put("func_76351_m", "setDifficultyScaled");
		ObfuscationPart3.map.put("func_76352_a", "isProjectile");
		ObfuscationPart3.map.put("func_76353_a", "causeArrowDamage");
		ObfuscationPart3.map.put("func_76354_b", "causeIndirectMagicDamage");
		ObfuscationPart3.map.put("func_76355_l", "getDamageType");
		ObfuscationPart3.map.put("func_76356_a", "causeThrownDamage");
		ObfuscationPart3.map.put("func_76357_e", "canHarmInCreative");
		ObfuscationPart3.map.put("func_76358_a", "causeMobDamage");
		ObfuscationPart3.map.put("func_76359_i", "setDamageAllowedInCreativeMode");
		ObfuscationPart3.map.put("func_76361_j", "setFireDamage");
		ObfuscationPart3.map.put("func_76362_a", "causeFireballDamage");
		ObfuscationPart3.map.put("func_76363_c", "isUnblockable");
		ObfuscationPart3.map.put("func_76364_f", "getImmediateSource");
		ObfuscationPart3.map.put("func_76365_a", "causePlayerDamage");
		ObfuscationPart3.map.put("func_76390_b", "setPotionName");
		ObfuscationPart3.map.put("func_76392_e", "getStatusIconIndex");
		ObfuscationPart3.map.put("func_76393_a", "getName");
		ObfuscationPart3.map.put("func_76394_a", "performEffect");
		ObfuscationPart3.map.put("func_76397_a", "isReady");
		ObfuscationPart3.map.put("func_76398_f", "isBadEffect");
		ObfuscationPart3.map.put("func_76399_b", "setIconIndex");
		ObfuscationPart3.map.put("func_76400_d", "hasStatusIcon");
		ObfuscationPart3.map.put("func_76401_j", "getLiquidColor");
		ObfuscationPart3.map.put("func_76403_b", "isInstant");
		ObfuscationPart3.map.put("func_76404_a", "setEffectiveness");
		ObfuscationPart3.map.put("func_76445_a", "getIntCache");
		ObfuscationPart3.map.put("func_76446_a", "resetIntCache");
		ObfuscationPart3.map.put("func_76452_a", "combine");
		ObfuscationPart3.map.put("func_76453_d", "getEffectName");
		ObfuscationPart3.map.put("func_76454_e", "deincrementDuration");
		ObfuscationPart3.map.put("func_76455_a", "onUpdate");
		ObfuscationPart3.map.put("func_76457_b", "performEffect");
		ObfuscationPart3.map.put("func_76458_c", "getAmplifier");
		ObfuscationPart3.map.put("func_76459_b", "getDuration");
		ObfuscationPart3.map.put("func_76463_a", "startSnooper");
		ObfuscationPart3.map.put("func_76465_c", "getCurrentStats");
		ObfuscationPart3.map.put("func_76467_g", "addJvmArgsToSnooper");
		ObfuscationPart3.map.put("func_76468_d", "isSnooperRunning");
		ObfuscationPart3.map.put("func_76470_e", "stopSnooper");
		ObfuscationPart3.map.put("func_76471_b", "addMemoryStatsToSnooper");
		ObfuscationPart3.map.put("func_76489_a", "generateLeafNodeList");
		ObfuscationPart3.map.put("func_76490_a", "layerSize");
		ObfuscationPart3.map.put("func_76493_c", "leafNodeNeedsBase");
		ObfuscationPart3.map.put("func_76495_b", "leafSize");
		ObfuscationPart3.map.put("func_76497_e", "validTreeLocation");
		ObfuscationPart3.map.put("func_76543_b", "pickMobSpawner");
		ObfuscationPart3.map.put("func_76549_c", "getChunkInputStream");
		ObfuscationPart3.map.put("func_76550_a", "createOrLoadRegionFile");
		ObfuscationPart3.map.put("func_76551_a", "clearRegionFileReferences");
		ObfuscationPart3.map.put("func_76552_d", "getChunkOutputStream");
		ObfuscationPart3.map.put("func_76556_a", "generateLightBrightnessTable");
		ObfuscationPart3.map.put("func_76557_i", "getAverageGroundLevel");
		ObfuscationPart3.map.put("func_76558_a", "setWorld");
		ObfuscationPart3.map.put("func_76559_b", "getMoonPhase");
		ObfuscationPart3.map.put("func_76560_a", "calcSunriseSunsetColors");
		ObfuscationPart3.map.put("func_76561_g", "isSkyColored");
		ObfuscationPart3.map.put("func_76562_b", "getFogColor");
		ObfuscationPart3.map.put("func_76563_a", "calculateCelestialAngle");
		ObfuscationPart3.map.put("func_76565_k", "getVoidFogYFactor");
		ObfuscationPart3.map.put("func_76566_a", "canCoordinateBeSpawn");
		ObfuscationPart3.map.put("func_76567_e", "canRespawnHere");
		ObfuscationPart3.map.put("func_76568_b", "doesXZShowFog");
		ObfuscationPart3.map.put("func_76569_d", "isSurfaceWorld");
		ObfuscationPart3.map.put("func_76571_f", "getCloudHeight");
		ObfuscationPart3.map.put("func_76572_b", "init");
		ObfuscationPart3.map.put("func_76581_a", "set");
		ObfuscationPart3.map.put("func_76582_a", "get");
		ObfuscationPart3.map.put("func_76587_i", "getBlockStorageArray");
		ObfuscationPart3.map.put("func_76590_a", "generateHeightMap");
		ObfuscationPart3.map.put("func_76594_o", "enqueueRelightChecks");
		ObfuscationPart3.map.put("func_76595_e", "propagateSkylightOcclusion");
		ObfuscationPart3.map.put("func_76599_g", "checkSkylightNeighborHeight");
		ObfuscationPart3.map.put("func_76600_a", "isAtLocation");
		ObfuscationPart3.map.put("func_76601_a", "needsSaving");
		ObfuscationPart3.map.put("func_76602_a", "setStorageArrays");
		ObfuscationPart3.map.put("func_76603_b", "generateSkylightMap");
		ObfuscationPart3.map.put("func_76605_m", "getBiomeArray");
		ObfuscationPart3.map.put("func_76606_c", "isEmptyBetween");
		ObfuscationPart3.map.put("func_76608_a", "removeEntityAtIndex");
		ObfuscationPart3.map.put("func_76609_d", "updateSkylightNeighborHeight");
		ObfuscationPart3.map.put("func_76611_b", "getHeightValue");
		ObfuscationPart3.map.put("func_76612_a", "addEntity");
		ObfuscationPart3.map.put("func_76613_n", "resetRelightChecks");
		ObfuscationPart3.map.put("func_76615_h", "relightBlock");
		ObfuscationPart3.map.put("func_76616_a", "setBiomeArray");
		ObfuscationPart3.map.put("func_76617_a", "getRandomWithSeed");
		ObfuscationPart3.map.put("func_76621_g", "isEmpty");
		ObfuscationPart3.map.put("func_76622_b", "removeEntity");
		ObfuscationPart3.map.put("func_76623_d", "onUnload");
		ObfuscationPart3.map.put("func_76625_h", "getTopFilledSegment");
		ObfuscationPart3.map.put("func_76630_e", "markDirty");
		ObfuscationPart3.map.put("func_76631_c", "onLoad");
		ObfuscationPart3.map.put("func_76632_l", "getPos");
		ObfuscationPart3.map.put("func_76657_c", "setSkyLight");
		ObfuscationPart3.map.put("func_76659_c", "setBlockLight");
		ObfuscationPart3.map.put("func_76661_k", "getBlockLight");
		ObfuscationPart3.map.put("func_76662_d", "getYLocation");
		ObfuscationPart3.map.put("func_76663_a", "isEmpty");
		ObfuscationPart3.map.put("func_76666_d", "setSkyLight");
		ObfuscationPart3.map.put("func_76670_c", "getSkyLight");
		ObfuscationPart3.map.put("func_76671_l", "getSkyLight");
		ObfuscationPart3.map.put("func_76672_e", "recalculateRefCounts");
		ObfuscationPart3.map.put("func_76674_d", "getBlockLight");
		ObfuscationPart3.map.put("func_76675_b", "needsRandomTick");
		ObfuscationPart3.map.put("func_76677_d", "setBlockLight");
		ObfuscationPart3.map.put("func_76686_a", "get");
		ObfuscationPart3.map.put("func_76690_a", "convertToAnvilFormat");
		ObfuscationPart3.map.put("func_76691_a", "load");
		ObfuscationPart3.map.put("func_76704_a", "getChunkDataInputStream");
		ObfuscationPart3.map.put("func_76705_d", "outOfBounds");
		ObfuscationPart3.map.put("func_76706_a", "write");
		ObfuscationPart3.map.put("func_76707_e", "getOffset");
		ObfuscationPart3.map.put("func_76708_c", "close");
		ObfuscationPart3.map.put("func_76709_c", "isChunkSaved");
		ObfuscationPart3.map.put("func_76710_b", "getChunkDataOutputStream");
		ObfuscationPart3.map.put("func_76711_a", "setOffset");
		ObfuscationPart3.map.put("func_76712_a", "write");
		ObfuscationPart3.map.put("func_76713_b", "setChunkTimestamp");
		ObfuscationPart3.map.put("func_76727_i", "getRainfall");
		ObfuscationPart3.map.put("func_76729_a", "createBiomeDecorator");
		ObfuscationPart3.map.put("func_76730_b", "getRandomWorldGenForGrass");
		ObfuscationPart3.map.put("func_76731_a", "getSkyColorByTemp");
		ObfuscationPart3.map.put("func_76736_e", "isHighHumidity");
		ObfuscationPart3.map.put("func_76738_d", "canRain");
		ObfuscationPart3.map.put("func_76741_f", "getSpawningChance");
		ObfuscationPart3.map.put("func_76746_c", "getEnableSnow");
		ObfuscationPart3.map.put("func_76747_a", "getSpawnableList");
		ObfuscationPart3.map.put("func_76793_b", "genStandardOre2");
		ObfuscationPart3.map.put("func_76795_a", "genStandardOre1");
		ObfuscationPart3.map.put("func_76797_b", "generateOres");
		ObfuscationPart3.map.put("func_76838_a", "cleanupCache");
		ObfuscationPart3.map.put("func_76839_e", "getCachedBiomes");
		ObfuscationPart3.map.put("func_76840_a", "getEntry");
		ObfuscationPart3.map.put("func_76885_a", "getBiome");
		ObfuscationPart3.map.put("func_76931_a", "getBiomes");
		ObfuscationPart3.map.put("func_76932_a", "getBiomesToSpawnIn");
		ObfuscationPart3.map.put("func_76933_b", "getBiomes");
		ObfuscationPart3.map.put("func_76937_a", "getBiomesForGeneration");
		ObfuscationPart3.map.put("func_76938_b", "cleanupCache");
		ObfuscationPart3.map.put("func_76939_a", "getTemperatureAtHeight");
		ObfuscationPart3.map.put("func_76940_a", "areBiomesViable");
		ObfuscationPart3.map.put("func_76975_c", "renderShadow");
		ObfuscationPart3.map.put("func_76977_a", "renderEntityOnFire");
		ObfuscationPart3.map.put("func_76978_a", "renderOffsetAABB");
		ObfuscationPart3.map.put("func_76979_b", "doRenderShadowAndFire");
		ObfuscationPart3.map.put("func_76982_b", "getWorldFromRenderManager");
		ObfuscationPart3.map.put("func_76983_a", "getFontRendererFromRenderManager");
		ObfuscationPart3.map.put("func_76986_a", "doRender");
		ObfuscationPart3.map.put("func_77008_a", "setLightmap");
		ObfuscationPart3.map.put("func_77010_a", "renderPainting");
		ObfuscationPart3.map.put("func_77030_a", "getColorMultiplier");
		ObfuscationPart3.map.put("func_77034_a", "interpolateRotation");
		ObfuscationPart3.map.put("func_77036_a", "renderModel");
		ObfuscationPart3.map.put("func_77037_a", "getDeathMaxRotation");
		ObfuscationPart3.map.put("func_77039_a", "renderLivingAt");
		ObfuscationPart3.map.put("func_77040_d", "getSwingProgress");
		ObfuscationPart3.map.put("func_77041_b", "preRenderCallback");
		ObfuscationPart3.map.put("func_77043_a", "applyRotations");
		ObfuscationPart3.map.put("func_77044_a", "handleRotationFloat");
		ObfuscationPart3.map.put("func_77124_a", "setCanBeCreated");
		ObfuscationPart3.map.put("func_77125_e", "isVersioned");
		ObfuscationPart3.map.put("func_77126_d", "canBeCreated");
		ObfuscationPart3.map.put("func_77127_a", "getName");
		ObfuscationPart3.map.put("func_77128_b", "getUnlocalizedName");
		ObfuscationPart3.map.put("func_77129_f", "setVersioned");
		ObfuscationPart3.map.put("func_77130_a", "byName");
		ObfuscationPart3.map.put("func_77131_c", "getVersion");
		ObfuscationPart3.map.put("func_77132_a", "getWorldTypeForGeneratorVersion");
		ObfuscationPart3.map.put("func_77142_a", "getByName");
		ObfuscationPart3.map.put("func_77144_e", "isSurvivalOrAdventure");
		ObfuscationPart3.map.put("func_77145_d", "isCreative");
		ObfuscationPart3.map.put("func_77146_a", "getByID");
		ObfuscationPart3.map.put("func_77147_a", "configurePlayerCapabilities");
		ObfuscationPart3.map.put("func_77148_a", "getID");
		ObfuscationPart3.map.put("func_77149_b", "getName");
		ObfuscationPart3.map.put("func_77158_f", "getHardcoreEnabled");
		ObfuscationPart3.map.put("func_77159_a", "enableBonusChest");
		ObfuscationPart3.map.put("func_77160_d", "getSeed");
		ObfuscationPart3.map.put("func_77161_a", "getGameTypeById");
		ObfuscationPart3.map.put("func_77162_e", "getGameType");
		ObfuscationPart3.map.put("func_77163_i", "areCommandsAllowed");
		ObfuscationPart3.map.put("func_77164_g", "isMapFeaturesEnabled");
		ObfuscationPart3.map.put("func_77165_h", "getTerrainType");
		ObfuscationPart3.map.put("func_77166_b", "enableCommands");
		ObfuscationPart3.map.put("func_77167_c", "isBonusChestEnabled");
		ObfuscationPart3.map.put("func_77176_a", "setScheduledTime");
		ObfuscationPart3.map.put("func_77191_a", "performWorldGenSpawning");
		ObfuscationPart3.map.put("func_77192_a", "findChunksForSpawning");
		ObfuscationPart3.map.put("func_77201_a", "readRecipiesFromTags");
		ObfuscationPart3.map.put("func_77202_a", "getRecipiesAsTags");
		ObfuscationPart3.map.put("func_77203_a", "canRecipeBeUsed");
		ObfuscationPart3.map.put("func_77272_a", "asLong");
		ObfuscationPart3.map.put("func_77277_b", "getPlayerKnockbackMap");
		ObfuscationPart3.map.put("func_77278_a", "doExplosionA");
		ObfuscationPart3.map.put("func_77279_a", "doExplosionB");
		ObfuscationPart3.map.put("func_77316_c", "getTranslatedName");
		ObfuscationPart3.map.put("func_77317_b", "getMaxEnchantability");
		ObfuscationPart3.map.put("func_77318_a", "calcModifierDamage");
		ObfuscationPart3.map.put("func_77319_d", "getMinLevel");
		ObfuscationPart3.map.put("func_77320_a", "getName");
		ObfuscationPart3.map.put("func_77321_a", "getMinEnchantability");
		ObfuscationPart3.map.put("func_77322_b", "setName");
		ObfuscationPart3.map.put("func_77324_c", "getRarity");
		ObfuscationPart3.map.put("func_77325_b", "getMaxLevel");
		ObfuscationPart3.map.put("func_77326_a", "canApplyTogether");
		ObfuscationPart3.map.put("func_77390_a", "readFromTags");
		ObfuscationPart3.map.put("func_77394_a", "getItemToBuy");
		ObfuscationPart3.map.put("func_77395_g", "writeToTags");
		ObfuscationPart3.map.put("func_77396_b", "getSecondItemToBuy");
		ObfuscationPart3.map.put("func_77397_d", "getItemToSell");
		ObfuscationPart3.map.put("func_77398_c", "hasSecondItemToBuy");
		ObfuscationPart3.map.put("func_77399_f", "incrementToolUses");
		ObfuscationPart3.map.put("func_77444_a", "readStat");
		ObfuscationPart3.map.put("func_77466_a", "getFoliageColorPine");
		ObfuscationPart3.map.put("func_77467_a", "setFoliageBiomeColorizer");
		ObfuscationPart3.map.put("func_77468_c", "getFoliageColorBasic");
		ObfuscationPart3.map.put("func_77469_b", "getFoliageColorBirch");
		ObfuscationPart3.map.put("func_77470_a", "getFoliageColor");
		ObfuscationPart3.map.put("func_77472_b", "setClientActiveTexture");
		ObfuscationPart3.map.put("func_77473_a", "setActiveTexture");
		ObfuscationPart3.map.put("func_77474_a", "initializeTextures");
		ObfuscationPart3.map.put("func_77475_a", "setLightmapTextureCoords");
		ObfuscationPart3.map.put("func_77479_a", "setGrassBiomeColorizer");
		ObfuscationPart3.map.put("func_77480_a", "getGrassColor");
		ObfuscationPart3.map.put("func_77487_a", "getServerMotd");
		ObfuscationPart3.map.put("func_77488_b", "getServerIpPort");
		ObfuscationPart3.map.put("func_77489_c", "updateLastSeen");
		ObfuscationPart3.map.put("func_77493_a", "calculateModifier");
		ObfuscationPart3.map.put("func_77501_a", "getKnockbackModifier");
		ObfuscationPart3.map.put("func_77504_a", "addRandomEnchantment");
		ObfuscationPart3.map.put("func_77506_a", "getEnchantmentLevel");
		ObfuscationPart3.map.put("func_77508_a", "getEnchantmentModifierDamage");
		ObfuscationPart3.map.put("func_77513_b", "buildEnchantmentList");
		ObfuscationPart3.map.put("func_77514_a", "calcItemStackEnchantability");
		ObfuscationPart3.map.put("func_77516_a", "applyEnchantmentModifierArray");
		ObfuscationPart3.map.put("func_77518_a", "applyEnchantmentModifier");
		ObfuscationPart3.map.put("func_77523_b", "getAdFromPingResponse");
		ObfuscationPart3.map.put("func_77524_a", "getMotdFromPingResponse");
		ObfuscationPart3.map.put("func_77525_a", "getPingResponse");
		ObfuscationPart3.map.put("func_77551_a", "addServer");
		ObfuscationPart3.map.put("func_77552_b", "setWasNotUpdated");
		ObfuscationPart3.map.put("func_77553_a", "getWasUpdated");
		ObfuscationPart3.map.put("func_77554_c", "getLanServers");
		ObfuscationPart3.map.put("func_77557_a", "canEnchantItem");
		ObfuscationPart3.map.put("func_77569_a", "matches");
		ObfuscationPart3.map.put("func_77571_b", "getRecipeOutput");
		ObfuscationPart3.map.put("func_77572_b", "getCraftingResult");
		ObfuscationPart3.map.put("func_77573_a", "checkMatch");
		ObfuscationPart3.map.put("func_77599_b", "getSmeltingList");
		ObfuscationPart3.map.put("func_77602_a", "instance");
		ObfuscationPart3.map.put("func_77612_l", "getMaxDamage");
		ObfuscationPart3.map.put("func_77613_e", "getRarity");
		ObfuscationPart3.map.put("func_77614_k", "getHasSubtypes");
		ObfuscationPart3.map.put("func_77615_a", "onPlayerStoppedUsing");
		ObfuscationPart3.map.put("func_77616_k", "isEnchantable");
		ObfuscationPart3.map.put("func_77619_b", "getItemEnchantability");
		ObfuscationPart3.map.put("func_77621_a", "rayTrace");
		ObfuscationPart3.map.put("func_77622_d", "onCreated");
		ObfuscationPart3.map.put("func_77624_a", "addInformation");
		ObfuscationPart3.map.put("func_77625_d", "setMaxStackSize");
		ObfuscationPart3.map.put("func_77626_a", "getMaxItemUseDuration");
		ObfuscationPart3.map.put("func_77627_a", "setHasSubtypes");
		ObfuscationPart3.map.put("func_77629_n_", "shouldRotateAroundWhenRendering");
		ObfuscationPart3.map.put("func_77634_r", "hasContainerItem");
		ObfuscationPart3.map.put("func_77636_d", "hasEffect");
		ObfuscationPart3.map.put("func_77637_a", "setCreativeTab");
		ObfuscationPart3.map.put("func_77639_j", "getItemStackLimit");
		ObfuscationPart3.map.put("func_77640_w", "getCreativeTab");
		ObfuscationPart3.map.put("func_77642_a", "setContainerItem");
		ObfuscationPart3.map.put("func_77643_m_", "isMap");
		ObfuscationPart3.map.put("func_77644_a", "hitEntity");
		ObfuscationPart3.map.put("func_77645_m", "isDamageable");
		ObfuscationPart3.map.put("func_77647_b", "getMetadata");
		ObfuscationPart3.map.put("func_77651_p", "getShareTag");
		ObfuscationPart3.map.put("func_77653_i", "getItemStackDisplayName");
		ObfuscationPart3.map.put("func_77654_b", "onItemUseFinish");
		ObfuscationPart3.map.put("func_77655_b", "setUnlocalizedName");
		ObfuscationPart3.map.put("func_77656_e", "setMaxDamage");
		ObfuscationPart3.map.put("func_77657_g", "getUnlocalizedNameInefficiently");
		ObfuscationPart3.map.put("func_77658_a", "getUnlocalizedName");
		ObfuscationPart3.map.put("func_77659_a", "onItemRightClick");
		ObfuscationPart3.map.put("func_77661_b", "getItemUseAction");
		ObfuscationPart3.map.put("func_77662_d", "isFull3D");
		ObfuscationPart3.map.put("func_77663_a", "onUpdate");
		ObfuscationPart3.map.put("func_77664_n", "setFull3D");
		ObfuscationPart3.map.put("func_77667_c", "getUnlocalizedName");
		ObfuscationPart3.map.put("func_77668_q", "getContainerItem");
		ObfuscationPart3.map.put("func_77828_a", "validBookTagContents");
		ObfuscationPart3.map.put("func_77840_a", "spawnCreature");
		ObfuscationPart3.map.put("func_77842_f", "getMaterialName");
		ObfuscationPart3.map.put("func_77845_h", "isWolfsFavoriteMeat");
		ObfuscationPart3.map.put("func_77848_i", "setAlwaysEdible");
		ObfuscationPart3.map.put("func_77849_c", "onFoodEaten");
		ObfuscationPart3.map.put("func_77861_e", "getToolMaterialName");
		ObfuscationPart3.map.put("func_77872_a", "updateMapData");
		ObfuscationPart3.map.put("func_77873_a", "getMapData");
		ObfuscationPart3.map.put("func_77942_o", "hasTagCompound");
		ObfuscationPart3.map.put("func_77945_a", "updateAnimation");
		ObfuscationPart3.map.put("func_77946_l", "copy");
		ObfuscationPart3.map.put("func_77948_v", "isItemEnchanted");
		ObfuscationPart3.map.put("func_77950_b", "onItemUseFinish");
		ObfuscationPart3.map.put("func_77951_h", "isItemDamaged");
		ObfuscationPart3.map.put("func_77952_i", "getItemDamage");
		ObfuscationPart3.map.put("func_77953_t", "getRarity");
		ObfuscationPart3.map.put("func_77955_b", "writeToNBT");
		ObfuscationPart3.map.put("func_77956_u", "isItemEnchantable");
		ObfuscationPart3.map.put("func_77957_a", "useItemRightClick");
		ObfuscationPart3.map.put("func_77958_k", "getMaxDamage");
		ObfuscationPart3.map.put("func_77959_d", "isItemStackEqual");
		ObfuscationPart3.map.put("func_77960_j", "getMetadata");
		ObfuscationPart3.map.put("func_77961_a", "hitEntity");
		ObfuscationPart3.map.put("func_77962_s", "hasEffect");
		ObfuscationPart3.map.put("func_77964_b", "setItemDamage");
		ObfuscationPart3.map.put("func_77966_a", "addEnchantment");
		ObfuscationPart3.map.put("func_77969_a", "isItemEqual");
		ObfuscationPart3.map.put("func_77970_a", "areItemStackTagsEqual");
		ObfuscationPart3.map.put("func_77972_a", "damageItem");
		ObfuscationPart3.map.put("func_77973_b", "getItem");
		ObfuscationPart3.map.put("func_77974_b", "onPlayerStoppedUsing");
		ObfuscationPart3.map.put("func_77975_n", "getItemUseAction");
		ObfuscationPart3.map.put("func_77976_d", "getMaxStackSize");
		ObfuscationPart3.map.put("func_77977_a", "getUnlocalizedName");
		ObfuscationPart3.map.put("func_77978_p", "getTagCompound");
		ObfuscationPart3.map.put("func_77979_a", "splitStack");
		ObfuscationPart3.map.put("func_77980_a", "onCrafting");
		ObfuscationPart3.map.put("func_77981_g", "getHasSubtypes");
		ObfuscationPart3.map.put("func_77982_d", "setTagCompound");
		ObfuscationPart3.map.put("func_77983_a", "setTagInfo");
		ObfuscationPart3.map.put("func_77984_f", "isItemStackDamageable");
		ObfuscationPart3.map.put("func_77985_e", "isStackable");
		ObfuscationPart3.map.put("func_77986_q", "getEnchantmentTagList");
		ObfuscationPart3.map.put("func_77988_m", "getMaxItemUseDuration");
		ObfuscationPart3.map.put("func_77989_b", "areItemStacksEqual");
		ObfuscationPart3.map.put("func_77995_e", "getEnchantability");
		ObfuscationPart3.map.put("func_77996_d", "getHarvestLevel");
		ObfuscationPart3.map.put("func_77997_a", "getMaxUses");
		ObfuscationPart3.map.put("func_77998_b", "getEfficiency");
		ObfuscationPart3.map.put("func_78000_c", "getAttackDamage");
		ObfuscationPart3.map.put("func_78013_b", "getTabLabel");
		ObfuscationPart3.map.put("func_78014_h", "setNoTitle");
		ObfuscationPart3.map.put("func_78015_f", "getBackgroundImageName");
		ObfuscationPart3.map.put("func_78016_d", "createIcon");
		ObfuscationPart3.map.put("func_78017_i", "hasScrollbar");
		ObfuscationPart3.map.put("func_78018_a", "displayAllRelevantItems");
		ObfuscationPart3.map.put("func_78019_g", "drawInForegroundOfTab");
		ObfuscationPart3.map.put("func_78020_k", "getColumn");
		ObfuscationPart3.map.put("func_78021_a", "getIndex");
		ObfuscationPart3.map.put("func_78022_j", "setNoScrollbar");
		ObfuscationPart3.map.put("func_78023_l", "isOnTopRow");
		ObfuscationPart3.map.put("func_78024_c", "getUnlocalizedName");
		ObfuscationPart3.map.put("func_78025_a", "setBackgroundImageName");
		ObfuscationPart3.map.put("func_78044_b", "getDamageReductionAmount");
		ObfuscationPart3.map.put("func_78045_a", "getEnchantability");
		ObfuscationPart3.map.put("func_78046_a", "getDurability");
		ObfuscationPart3.map.put("func_78084_a", "getTextureOffset");
		ObfuscationPart3.map.put("func_78085_a", "setTextureOffset");
		ObfuscationPart3.map.put("func_78086_a", "setLivingAnimations");
		ObfuscationPart3.map.put("func_78087_a", "setRotationAngles");
		ObfuscationPart3.map.put("func_78088_a", "render");
		ObfuscationPart3.map.put("func_78164_a", "renderSign");
		ObfuscationPart3.map.put("func_78172_a", "triangleWave");
		ObfuscationPart3.map.put("func_78214_a", "updateRotations");
		ObfuscationPart3.map.put("func_78231_a", "renderAll");
		ObfuscationPart3.map.put("func_78235_a", "flipFace");
		ObfuscationPart3.map.put("func_78240_a", "setTexturePosition");
		ObfuscationPart3.map.put("func_78244_a", "setBoxName");
		ObfuscationPart3.map.put("func_78255_a", "renderStringAtPos");
		ObfuscationPart3.map.put("func_78256_a", "getStringWidth");
		ObfuscationPart3.map.put("func_78257_a", "loadGlyphTexture");
		ObfuscationPart3.map.put("func_78259_e", "sizeStringToWidth");
		ObfuscationPart3.map.put("func_78260_a", "getBidiFlag");
		ObfuscationPart3.map.put("func_78262_a", "trimStringToWidth");
		ObfuscationPart3.map.put("func_78263_a", "getCharWidth");
		ObfuscationPart3.map.put("func_78264_a", "setUnicodeFlag");
		ObfuscationPart3.map.put("func_78265_b", "resetStyles");
		ObfuscationPart3.map.put("func_78266_a", "renderDefaultChar");
		ObfuscationPart3.map.put("func_78267_b", "getWordWrappedHeight");
		ObfuscationPart3.map.put("func_78268_b", "renderSplitString");
		ObfuscationPart3.map.put("func_78269_a", "trimStringToWidth");
		ObfuscationPart3.map.put("func_78270_c", "isFormatSpecial");
		ObfuscationPart3.map.put("func_78271_c", "listFormattedStringToWidth");
		ObfuscationPart3.map.put("func_78272_b", "isFormatColor");
		ObfuscationPart3.map.put("func_78273_d", "trimStringNewline");
		ObfuscationPart3.map.put("func_78274_b", "renderStringAligned");
		ObfuscationPart3.map.put("func_78275_b", "setBidiFlag");
		ObfuscationPart3.map.put("func_78276_b", "drawString");
		ObfuscationPart3.map.put("func_78277_a", "renderUnicodeChar");
		ObfuscationPart3.map.put("func_78279_b", "drawSplitString");
		ObfuscationPart3.map.put("func_78280_d", "wrapFormattedStringToWidth");
		ObfuscationPart3.map.put("func_78282_e", "getFormatFromString");
		ObfuscationPart3.map.put("func_78324_d", "getScaledHeight_double");
		ObfuscationPart3.map.put("func_78325_e", "getScaleFactor");
		ObfuscationPart3.map.put("func_78326_a", "getScaledWidth");
		ObfuscationPart3.map.put("func_78327_c", "getScaledWidth_double");
		ObfuscationPart3.map.put("func_78328_b", "getScaledHeight");
		ObfuscationPart3.map.put("func_78381_a", "draw");
		ObfuscationPart3.map.put("func_78432_a", "parseUserSkin");
		ObfuscationPart3.map.put("func_78433_b", "setAreaOpaque");
		ObfuscationPart3.map.put("func_78440_a", "renderItemInFirstPerson");
		ObfuscationPart3.map.put("func_78441_a", "updateEquippedItem");
		ObfuscationPart3.map.put("func_78442_d", "renderFireInFirstPerson");
		ObfuscationPart3.map.put("func_78447_b", "renderOverlays");
		ObfuscationPart3.map.put("func_78448_c", "renderWaterOverlayTexture");
		ObfuscationPart3.map.put("func_78464_a", "updateRenderer");
		ObfuscationPart3.map.put("func_78466_h", "updateFogColor");
		ObfuscationPart3.map.put("func_78467_g", "orientCamera");
		ObfuscationPart3.map.put("func_78468_a", "setupFog");
		ObfuscationPart3.map.put("func_78469_a", "setFogColorBuffer");
		ObfuscationPart3.map.put("func_78470_f", "updateTorchFlicker");
		ObfuscationPart3.map.put("func_78471_a", "renderWorld");
		ObfuscationPart3.map.put("func_78472_g", "updateLightmap");
		ObfuscationPart3.map.put("func_78473_a", "getMouseOver");
		ObfuscationPart3.map.put("func_78474_d", "renderRainSnow");
		ObfuscationPart3.map.put("func_78475_f", "applyBobbing");
		ObfuscationPart3.map.put("func_78476_b", "renderHand");
		ObfuscationPart3.map.put("func_78477_e", "updateFovModifierHand");
		ObfuscationPart3.map.put("func_78478_c", "setupOverlayRendering");
		ObfuscationPart3.map.put("func_78479_a", "setupCameraTransform");
		ObfuscationPart3.map.put("func_78481_a", "getFOVModifier");
		ObfuscationPart3.map.put("func_78482_e", "hurtCameraEffect");
		ObfuscationPart3.map.put("func_78484_h", "addRainParticles");
		ObfuscationPart3.map.put("func_78546_a", "isBoundingBoxInFrustum");
		ObfuscationPart3.map.put("func_78547_a", "setPosition");
		ObfuscationPart3.map.put("func_78548_b", "isBoxInFrustum");
		ObfuscationPart3.map.put("func_78553_b", "isBoxInFrustum");
		ObfuscationPart3.map.put("func_78558_a", "getInstance");
		ObfuscationPart3.map.put("func_78560_b", "init");
		ObfuscationPart3.map.put("func_78713_a", "getEntityRenderObject");
		ObfuscationPart3.map.put("func_78714_a", "getDistanceToCamera");
		ObfuscationPart3.map.put("func_78715_a", "getEntityClassRenderObject");
		ObfuscationPart3.map.put("func_78716_a", "getFontRenderer");
		ObfuscationPart3.map.put("func_78717_a", "setWorld");
		ObfuscationPart3.map.put("func_78745_b", "flipPlayer");
		ObfuscationPart3.map.put("func_78746_a", "setGameType");
		ObfuscationPart3.map.put("func_78747_a", "isSpectator");
		ObfuscationPart3.map.put("func_78748_a", "setPlayerCapabilities");
		ObfuscationPart3.map.put("func_78749_i", "extendedReach");
		ObfuscationPart3.map.put("func_78750_j", "syncCurrentPlayItem");
		ObfuscationPart3.map.put("func_78752_a", "sendPacketDropItem");
		ObfuscationPart3.map.put("func_78755_b", "shouldDrawHUD");
		ObfuscationPart3.map.put("func_78756_a", "sendEnchantPacket");
		ObfuscationPart3.map.put("func_78757_d", "getBlockReachDistance");
		ObfuscationPart3.map.put("func_78758_h", "isInCreativeMode");
		ObfuscationPart3.map.put("func_78761_a", "sendSlotPacket");
		ObfuscationPart3.map.put("func_78762_g", "isNotCreative");
		ObfuscationPart3.map.put("func_78763_f", "gameIsSurvivalOrAdventure");
		ObfuscationPart3.map.put("func_78764_a", "attackEntity");
		ObfuscationPart3.map.put("func_78765_e", "updateController");
		ObfuscationPart3.map.put("func_78766_c", "onStoppedUsingItem");
		ObfuscationPart3.map.put("func_78767_c", "resetBlockRemoving");
		ObfuscationPart3.map.put("func_78784_a", "setTextureOffset");
		ObfuscationPart3.map.put("func_78785_a", "render");
		ObfuscationPart3.map.put("func_78786_a", "addBox");
		ObfuscationPart3.map.put("func_78787_b", "setTextureSize");
		ObfuscationPart3.map.put("func_78788_d", "compileDisplayList");
		ObfuscationPart3.map.put("func_78789_a", "addBox");
		ObfuscationPart3.map.put("func_78790_a", "addBox");
		ObfuscationPart3.map.put("func_78791_b", "renderWithRotation");
		ObfuscationPart3.map.put("func_78792_a", "addChild");
		ObfuscationPart3.map.put("func_78793_a", "setRotationPoint");
		ObfuscationPart3.map.put("func_78794_c", "postRender");
		ObfuscationPart3.map.put("func_78822_a", "doPlace");
		ObfuscationPart3.map.put("func_78823_a", "isValid");
		ObfuscationPart3.map.put("func_78836_a", "getNBTCompound");
		ObfuscationPart3.map.put("func_78837_a", "getServerDataFromNBTCompound");
		ObfuscationPart3.map.put("func_78849_a", "addServerData");
		ObfuscationPart3.map.put("func_78850_a", "getServerData");
		ObfuscationPart3.map.put("func_78851_b", "removeServerData");
		ObfuscationPart3.map.put("func_78853_a", "loadServerList");
		ObfuscationPart3.map.put("func_78855_b", "saveServerList");
		ObfuscationPart3.map.put("func_78856_c", "countServers");
		ObfuscationPart3.map.put("func_78857_a", "swapServers");
		ObfuscationPart3.map.put("func_78860_a", "fromString");
		ObfuscationPart3.map.put("func_78861_a", "getIP");
		ObfuscationPart3.map.put("func_78862_a", "getInt");
		ObfuscationPart3.map.put("func_78863_b", "getServerAddress");
		ObfuscationPart3.map.put("func_78864_b", "getPort");
		ObfuscationPart3.map.put("func_78868_a", "updateEffects");
		ObfuscationPart3.map.put("func_78869_b", "getStatistics");
		ObfuscationPart3.map.put("func_78870_a", "clearEffects");
		ObfuscationPart3.map.put("func_78872_b", "renderLitParticles");
		ObfuscationPart3.map.put("func_78873_a", "addEffect");
		ObfuscationPart3.map.put("func_78874_a", "renderParticles");
		ObfuscationPart3.map.put("func_78880_d", "getZSize");
		ObfuscationPart3.map.put("func_78882_c", "getYSize");
		ObfuscationPart3.map.put("func_78883_b", "getXSize");
		ObfuscationPart3.map.put("func_78884_a", "intersectsWith");
		ObfuscationPart3.map.put("func_78885_a", "intersectsWith");
		ObfuscationPart3.map.put("func_78886_a", "offset");
		ObfuscationPart3.map.put("func_78887_a", "getNewBoundingBox");
		ObfuscationPart3.map.put("func_78888_b", "expandTo");
		ObfuscationPart3.map.put("func_78898_a", "updatePlayerMoveState");
		ObfuscationPart3.map.put("func_78909_a", "getColorIndex");
		ObfuscationPart3.map.put("func_78914_f", "noColor");
		ObfuscationPart3.map.put("func_80003_ah", "getPlayerUsageSnooper");
		ObfuscationPart3.map.put("func_80006_f", "getUniqueID");
		ObfuscationPart3.map.put("func_82010_a", "registerTickable");
		ObfuscationPart3.map.put("func_82142_c", "setInvisible");
		ObfuscationPart3.map.put("func_82143_as", "getMaxFallHeight");
		ObfuscationPart3.map.put("func_82145_z", "getMaxInPortalTime");
		ObfuscationPart3.map.put("func_82147_ab", "getPortalCooldown");
		ObfuscationPart3.map.put("func_82149_j", "copyLocationAndAnglesFrom");
		ObfuscationPart3.map.put("func_82150_aj", "isInvisible");
		ObfuscationPart3.map.put("func_82160_b", "dropEquipment");
		ObfuscationPart3.map.put("func_82166_i", "getArmSwingAnimationEnd");
		ObfuscationPart3.map.put("func_82167_n", "collideWithEntity");
		ObfuscationPart3.map.put("func_82168_bl", "updateArmSwingProgress");
		ObfuscationPart3.map.put("func_82171_bF", "canBeSteered");
		ObfuscationPart3.map.put("func_82187_q", "setLookingForHome");
		ObfuscationPart3.map.put("func_82194_d", "getWorld");
		ObfuscationPart3.map.put("func_82195_e", "attackDragonFrom");
		ObfuscationPart3.map.put("func_82196_d", "attackEntityWithRangedAttack");
		ObfuscationPart3.map.put("func_82197_f", "setDrinkingPotion");
		ObfuscationPart3.map.put("func_82203_t", "getWatchedTargetId");
		ObfuscationPart3.map.put("func_82204_b", "rotlerp");
		ObfuscationPart3.map.put("func_82205_o", "isArmored");
		ObfuscationPart3.map.put("func_82206_m", "ignite");
		ObfuscationPart3.map.put("func_82207_a", "getHeadYRotation");
		ObfuscationPart3.map.put("func_82208_v", "getHeadY");
		ObfuscationPart3.map.put("func_82209_a", "launchWitherSkullToCoords");
		ObfuscationPart3.map.put("func_82210_r", "getHeadXRotation");
		ObfuscationPart3.map.put("func_82211_c", "updateWatchedTargetId");
		ObfuscationPart3.map.put("func_82212_n", "getInvulTime");
		ObfuscationPart3.map.put("func_82213_w", "getHeadZ");
		ObfuscationPart3.map.put("func_82214_u", "getHeadX");
		ObfuscationPart3.map.put("func_82215_s", "setInvulTime");
		ObfuscationPart3.map.put("func_82216_a", "launchWitherSkullToEntity");
		ObfuscationPart3.map.put("func_82227_f", "setChild");
		ObfuscationPart3.map.put("func_82230_o", "isConverting");
		ObfuscationPart3.map.put("func_82235_h", "getIsBatHanging");
		ObfuscationPart3.map.put("func_82236_f", "setIsBatHanging");
		ObfuscationPart3.map.put("func_82242_a", "addExperienceLevel");
		ObfuscationPart3.map.put("func_82243_bO", "getArmorVisibility");
		ObfuscationPart3.map.put("func_82245_bX", "isSpawnForced");
		ObfuscationPart3.map.put("func_82329_d", "getWidthPixels");
		ObfuscationPart3.map.put("func_82330_g", "getHeightPixels");
		ObfuscationPart3.map.put("func_82333_j", "getRotation");
		ObfuscationPart3.map.put("func_82334_a", "setDisplayedItem");
		ObfuscationPart3.map.put("func_82335_i", "getDisplayedItem");
		ObfuscationPart3.map.put("func_82336_g", "setItemRotation");
		ObfuscationPart3.map.put("func_82338_g", "setAlphaF");
		ObfuscationPart3.map.put("func_82341_c", "getMotionFactor");
		ObfuscationPart3.map.put("func_82342_d", "isInvulnerable");
		ObfuscationPart3.map.put("func_82343_e", "setInvulnerable");
		ObfuscationPart3.map.put("func_82356_Z", "isCommandBlockEnabled");
		ObfuscationPart3.map.put("func_82357_ak", "getSpawnProtectionSize");
		ObfuscationPart3.map.put("func_82358_a", "isUsernameIndex");
		ObfuscationPart3.map.put("func_82362_a", "getRequiredPermissionLevel");
		ObfuscationPart3.map.put("func_82370_a", "getUsernameIndex");
		ObfuscationPart3.map.put("func_82377_a", "matchesMultiplePlayers");
		ObfuscationPart3.map.put("func_82378_b", "isSelector");
		ObfuscationPart3.map.put("func_82381_h", "getArgumentMap");
		ObfuscationPart3.map.put("func_82386_a", "matchOnePlayer");
		ObfuscationPart3.map.put("func_82400_a", "getRenderYaw");
		ObfuscationPart3.map.put("func_82402_b", "renderItem");
		ObfuscationPart3.map.put("func_82422_c", "transformHeldFull3DItemLayer");
		ObfuscationPart3.map.put("func_82448_a", "transferEntityToWorld");
		ObfuscationPart3.map.put("func_82482_a", "dispense");
		ObfuscationPart3.map.put("func_82485_a", "playDispenseSound");
		ObfuscationPart3.map.put("func_82486_a", "doDispense");
		ObfuscationPart3.map.put("func_82487_b", "dispenseStack");
		ObfuscationPart3.map.put("func_82488_a", "getWorldEventDataFrom");
		ObfuscationPart3.map.put("func_82489_a", "spawnDispenseParticles");
		ObfuscationPart3.map.put("func_82498_a", "getProjectileInaccuracy");
		ObfuscationPart3.map.put("func_82499_a", "getProjectileEntity");
		ObfuscationPart3.map.put("func_82500_b", "getProjectileVelocity");
		ObfuscationPart3.map.put("func_82566_a", "setWorldsForAll");
		ObfuscationPart3.map.put("func_82568_a", "getMapInfo");
		ObfuscationPart3.map.put("func_82571_y", "getGeneratorOptions");
		ObfuscationPart3.map.put("func_82572_b", "setWorldTotalTime");
		ObfuscationPart3.map.put("func_82573_f", "getWorldTotalTime");
		ObfuscationPart3.map.put("func_82574_x", "getGameRulesInstance");
		ObfuscationPart3.map.put("func_82580_o", "removeTag");
		ObfuscationPart3.map.put("func_82581_a", "createCrashReport");
		ObfuscationPart3.map.put("func_82582_d", "isEmpty");
		ObfuscationPart3.map.put("func_82594_a", "getObject");
		ObfuscationPart3.map.put("func_82595_a", "putObject");
		ObfuscationPart3.map.put("func_82599_e", "getFrontOffsetZ");
		ObfuscationPart3.map.put("func_82600_a", "byIndex");
		ObfuscationPart3.map.put("func_82601_c", "getFrontOffsetZ");
		ObfuscationPart3.map.put("func_82615_a", "getX");
		ObfuscationPart3.map.put("func_82616_c", "getZ");
		ObfuscationPart3.map.put("func_82617_b", "getY");
		ObfuscationPart3.map.put("func_82618_k", "getWorld");
		ObfuscationPart3.map.put("func_82644_b", "getWorldFeatures");
		ObfuscationPart3.map.put("func_82645_d", "updateLayers");
		ObfuscationPart3.map.put("func_82647_a", "setBiome");
		ObfuscationPart3.map.put("func_82648_a", "getBiome");
		ObfuscationPart3.map.put("func_82649_e", "getDefaultFlatGenerator");
		ObfuscationPart3.map.put("func_82650_c", "getFlatLayers");
		ObfuscationPart3.map.put("func_82651_a", "createFlatGeneratorFromString");
		ObfuscationPart3.map.put("func_82656_d", "getMinY");
		ObfuscationPart3.map.put("func_82657_a", "getLayerCount");
		ObfuscationPart3.map.put("func_82658_c", "getFillBlockMeta");
		ObfuscationPart3.map.put("func_82660_d", "setMinY");
		ObfuscationPart3.map.put("func_82667_a", "getMonsters");
		ObfuscationPart3.map.put("func_82683_b", "setDefaultPlayerReputation");
		ObfuscationPart3.map.put("func_82684_a", "getPlayerReputation");
		ObfuscationPart3.map.put("func_82685_c", "getNearestTargetPlayer");
		ObfuscationPart3.map.put("func_82686_i", "isMatingSeason");
		ObfuscationPart3.map.put("func_82687_d", "isPlayerReputationTooLow");
		ObfuscationPart3.map.put("func_82688_a", "modifyPlayerReputation");
		ObfuscationPart3.map.put("func_82689_b", "writeVillageDataToNBT");
		ObfuscationPart3.map.put("func_82690_a", "readVillageDataFromNBT");
		ObfuscationPart3.map.put("func_82691_a", "setWorld");
		ObfuscationPart3.map.put("func_82692_h", "endMatingSeason");
		ObfuscationPart3.map.put("func_82705_e", "getAnimal");
		ObfuscationPart3.map.put("func_82712_a", "getDouble");
		ObfuscationPart3.map.put("func_82713_a", "getDouble");
		ObfuscationPart3.map.put("func_82714_a", "getInt");
		ObfuscationPart3.map.put("func_82715_a", "getInt");
		ObfuscationPart3.map.put("func_82716_a", "nextDouble");
		ObfuscationPart3.map.put("func_82719_a", "writeCustomPotionEffectToNBT");
		ObfuscationPart3.map.put("func_82720_e", "getIsAmbient");
		ObfuscationPart3.map.put("func_82722_b", "readCustomPotionEffectFromNBT");
		ObfuscationPart3.map.put("func_82725_o", "isMagicDamage");
		ObfuscationPart3.map.put("func_82726_p", "setMagicDamage");
		ObfuscationPart3.map.put("func_82734_g", "getChunksLowestHorizon");
		ObfuscationPart3.map.put("func_82736_K", "getGameRules");
		ObfuscationPart3.map.put("func_82737_E", "getTotalWorldTime");
		ObfuscationPart3.map.put("func_82738_a", "setTotalWorldTime");
		ObfuscationPart3.map.put("func_82742_i", "resetUpdateEntityTick");
		ObfuscationPart3.map.put("func_82743_f", "getCreationCloudUpdateTick");
		ObfuscationPart3.map.put("func_82744_b", "setCloudUpdateTick");
		ObfuscationPart3.map.put("func_82747_f", "getId");
		ObfuscationPart3.map.put("func_82749_j", "getGeneratorOptions");
		ObfuscationPart3.map.put("func_82750_a", "setGeneratorOptions");
		ObfuscationPart3.map.put("func_82752_c", "hasLimitedInteractions");
		ObfuscationPart3.map.put("func_82753_a", "setPriority");
		ObfuscationPart3.map.put("func_82756_a", "getString");
		ObfuscationPart3.map.put("func_82757_a", "setValue");
		ObfuscationPart3.map.put("func_82758_b", "getBoolean");
		ObfuscationPart3.map.put("func_82763_b", "getRules");
		ObfuscationPart3.map.put("func_82764_b", "setOrCreateGameRule");
		ObfuscationPart3.map.put("func_82765_e", "hasRule");
		ObfuscationPart3.map.put("func_82766_b", "getBoolean");
		ObfuscationPart3.map.put("func_82767_a", "getString");
		ObfuscationPart3.map.put("func_82768_a", "readFromNBT");
		ObfuscationPart3.map.put("func_82770_a", "writeToNBT");
		ObfuscationPart3.map.put("func_82781_a", "getEnchantments");
		ObfuscationPart3.map.put("func_82782_a", "setEnchantments");
		ObfuscationPart3.map.put("func_82783_a", "increaseMaxTradeUses");
		ObfuscationPart3.map.put("func_82784_g", "isRecipeDisabled");
		ObfuscationPart3.map.put("func_82785_h", "compensateToolUses");
		ObfuscationPart3.map.put("func_82787_a", "findMatchingResult");
		ObfuscationPart3.map.put("func_82788_x", "canItemEditBlocks");
		ObfuscationPart3.map.put("func_82789_a", "getIsRepairable");
		ObfuscationPart3.map.put("func_82812_d", "getArmorMaterial");
		ObfuscationPart3.map.put("func_82813_b", "setColor");
		ObfuscationPart3.map.put("func_82814_b", "getColor");
		ObfuscationPart3.map.put("func_82815_c", "removeColor");
		ObfuscationPart3.map.put("func_82816_b_", "hasColor");
		ObfuscationPart3.map.put("func_82833_r", "getDisplayName");
		ObfuscationPart3.map.put("func_82835_x", "canEditBlocks");
		ObfuscationPart3.map.put("func_82836_z", "getItemFrame");
		ObfuscationPart3.map.put("func_82837_s", "hasDisplayName");
		ObfuscationPart3.map.put("func_82838_A", "getRepairCost");
		ObfuscationPart3.map.put("func_82839_y", "isOnItemFrame");
		ObfuscationPart3.map.put("func_82840_a", "getTooltip");
		ObfuscationPart3.map.put("func_82841_c", "setRepairCost");
		ObfuscationPart3.map.put("func_82842_a", "setItemFrame");
		ObfuscationPart3.map.put("func_82846_b", "transferStackInSlot");
		ObfuscationPart3.map.put("func_82847_b", "removeListener");
		ObfuscationPart3.map.put("func_82848_d", "updateRepairOutput");
		ObfuscationPart3.map.put("func_82850_a", "updateItemName");
		ObfuscationPart3.map.put("func_82869_a", "canTakeStack");
		ObfuscationPart3.map.put("func_82877_b", "setPlayerWalkSpeed");
		ObfuscationPart3.map.put("func_82879_c", "sendSettingsToServer");
		ObfuscationPart3.map.put("func_82883_a", "getUnicodeFlag");
		ObfuscationPart3.map.put("func_83015_S", "getCurrentDate");
		ObfuscationPart3.map.put("func_85029_a", "addEntityCrashInfo");
		ObfuscationPart3.map.put("func_85031_j", "hitByEntity");
		ObfuscationPart3.map.put("func_85033_bc", "collideWithNearbyEntities");
		ObfuscationPart3.map.put("func_85034_r", "setArrowCountInEntity");
		ObfuscationPart3.map.put("func_85035_bI", "getArrowCountInEntity");
		ObfuscationPart3.map.put("func_85036_m", "setCombatTask");
		ObfuscationPart3.map.put("func_85039_t", "addScore");
		ObfuscationPart3.map.put("func_85040_s", "setScore");
		ObfuscationPart3.map.put("func_85052_h", "getThrower");
		ObfuscationPart3.map.put("func_85054_d", "searchForOtherItemsNearby");
		ObfuscationPart3.map.put("func_85055_a", "makeCrashReport");
		ObfuscationPart3.map.put("func_85056_g", "getCategory");
		ObfuscationPart3.map.put("func_85057_a", "makeCategoryDepth");
		ObfuscationPart3.map.put("func_85058_a", "makeCategory");
		ObfuscationPart3.map.put("func_85069_a", "firstTwoElementsOfStackTraceMatch");
		ObfuscationPart3.map.put("func_85070_b", "trimStackTraceEntriesFromBottom");
		ObfuscationPart3.map.put("func_85072_a", "appendToStringBuilder");
		ObfuscationPart3.map.put("func_85073_a", "getPrunedStackTrace");
		ObfuscationPart3.map.put("func_85074_a", "getCoordinateInfo");
		ObfuscationPart3.map.put("func_85089_a", "getKey");
		ObfuscationPart3.map.put("func_85090_b", "getValue");
		ObfuscationPart3.map.put("func_85094_b", "renderDebugBoundingBox");
		ObfuscationPart3.map.put("func_85118_a", "addToCrashReport");
		ObfuscationPart3.map.put("func_85144_b", "getCacheSizes");
		ObfuscationPart3.map.put("func_85151_d", "getLowerChestInventory");
		ObfuscationPart3.map.put("func_85156_a", "removeTask");
		ObfuscationPart3.map.put("func_85158_p", "setAdventureModeExempt");
		ObfuscationPart3.map.put("func_85172_a", "sendLeashedEntitiesInChunk");
		ObfuscationPart3.map.put("func_85176_s", "getDefaultTeleporter");
		ObfuscationPart3.map.put("func_85181_a", "getRandomModelBox");
		ObfuscationPart3.map.put("func_85188_a", "makePortal");
		ObfuscationPart3.map.put("func_85189_a", "removeStalePortalLocations");
		ObfuscationPart3.map.put("func_90010_a", "isPartOfLargeChest");
		ObfuscationPart3.map.put("func_90011_a", "createChild");
		ObfuscationPart3.map.put("func_90020_K", "getLimitFramerate");
		ObfuscationPart3.map.put("func_90033_f", "canLoadWorld");
		ObfuscationPart3.map.put("func_90035_a", "getClassFromID");
		ObfuscationPart3.map.put("func_90036_a", "getFireAspectModifier");
		ObfuscationPart3.map.put("func_90999_ad", "canRenderOnFire");
		ObfuscationPart3.map.put("func_92034_a", "createParticle");
		ObfuscationPart3.map.put("func_92035_a", "createBall");
		ObfuscationPart3.map.put("func_92036_a", "createBurst");
		ObfuscationPart3.map.put("func_92037_i", "isFarFromCamera");
		ObfuscationPart3.map.put("func_92038_a", "createShaped");
		ObfuscationPart3.map.put("func_92043_f", "setTwinkle");
		ObfuscationPart3.map.put("func_92045_e", "setTrail");
		ObfuscationPart3.map.put("func_92058_a", "setItem");
		ObfuscationPart3.map.put("func_92059_d", "getItem");
		ObfuscationPart3.map.put("func_92087_a", "causeThornsDamage");
		ObfuscationPart3.map.put("func_92088_a", "makeFireworks");
		ObfuscationPart3.map.put("func_92089_a", "canApply");
		ObfuscationPart3.map.put("func_92092_a", "getBlastDamageReduction");
		ObfuscationPart3.map.put("func_92093_a", "getFireTimeForEntity");
		ObfuscationPart3.map.put("func_92094_a", "shouldHit");
		ObfuscationPart3.map.put("func_92095_b", "getDamage");
		ObfuscationPart3.map.put("func_92097_a", "negateDamage");
		ObfuscationPart3.map.put("func_92099_a", "getEnchantedItem");
		ObfuscationPart3.map.put("func_92110_g", "getEnchantments");
		ObfuscationPart3.map.put("func_92111_a", "getEnchantedItemStack");
		ObfuscationPart3.map.put("func_92115_a", "addEnchantment");
		ObfuscationPart3.map.put("func_94041_b", "isItemValidForSlot");
		ObfuscationPart3.map.put("func_94053_h", "nextTextureIndexX");
		ObfuscationPart3.map.put("func_94059_bO", "getAlwaysRenderNameTagForRender");
		ObfuscationPart3.map.put("func_94060_bK", "getAttackingEntity");
		ObfuscationPart3.map.put("func_94061_f", "setNoAI");
		ObfuscationPart3.map.put("func_94083_c", "getTntPlacedBy");
		ObfuscationPart3.map.put("func_94085_r", "getDefaultDisplayTileOffset");
		ObfuscationPart3.map.put("func_94086_l", "setDisplayTileOffset");
		ObfuscationPart3.map.put("func_94095_a", "killMinecart");
		ObfuscationPart3.map.put("func_94096_e", "setHasDisplayTile");
		ObfuscationPart3.map.put("func_94099_q", "getDisplayTileOffset");
		ObfuscationPart3.map.put("func_94100_s", "hasDisplayTile");
		ObfuscationPart3.map.put("func_94101_h", "applyDrag");
		ObfuscationPart3.map.put("func_94103_c", "explodeCart");
		ObfuscationPart3.map.put("func_94104_d", "getFuseTicks");
		ObfuscationPart3.map.put("func_94105_c", "ignite");
		ObfuscationPart3.map.put("func_94107_f", "setMinecartPowered");
		ObfuscationPart3.map.put("func_94108_c", "isMinecartPowered");
		ObfuscationPart3.map.put("func_94182_a", "addSlot");
		ObfuscationPart3.map.put("func_94183_a", "getStitchHolder");
		ObfuscationPart3.map.put("func_94184_a", "getAllStitchSlots");
		ObfuscationPart3.map.put("func_94185_c", "getOriginY");
		ObfuscationPart3.map.put("func_94186_b", "getOriginX");
		ObfuscationPart3.map.put("func_94194_d", "rotate");
		ObfuscationPart3.map.put("func_94195_e", "isRotated");
		ObfuscationPart3.map.put("func_94196_a", "setNewDimension");
		ObfuscationPart3.map.put("func_94197_a", "getWidth");
		ObfuscationPart3.map.put("func_94199_b", "getHeight");
		ObfuscationPart3.map.put("func_94206_g", "getMinV");
		ObfuscationPart3.map.put("func_94207_b", "getInterpolatedV");
		ObfuscationPart3.map.put("func_94209_e", "getMinU");
		ObfuscationPart3.map.put("func_94210_h", "getMaxV");
		ObfuscationPart3.map.put("func_94211_a", "getIconWidth");
		ObfuscationPart3.map.put("func_94212_f", "getMaxU");
		ObfuscationPart3.map.put("func_94214_a", "getInterpolatedU");
		ObfuscationPart3.map.put("func_94215_i", "getIconName");
		ObfuscationPart3.map.put("func_94216_b", "getIconHeight");
		ObfuscationPart3.map.put("func_94217_a", "copyFrom");
		ObfuscationPart3.map.put("func_94219_l", "updateAnimation");
		ObfuscationPart3.map.put("func_94248_c", "updateAnimations");
		ObfuscationPart3.map.put("func_94277_a", "bindTexture");
		ObfuscationPart3.map.put("func_94305_f", "doStitch");
		ObfuscationPart3.map.put("func_94309_g", "getStichSlots");
		ObfuscationPart3.map.put("func_94310_b", "allocateSlot");
		ObfuscationPart3.map.put("func_94311_c", "expandAndAllocateSlot");
		ObfuscationPart3.map.put("func_94520_b", "isKeyTranslated");
		ObfuscationPart3.map.put("func_94522_b", "canTranslate");
		ObfuscationPart3.map.put("func_94525_a", "computeStackSize");
		ObfuscationPart3.map.put("func_94526_b", "calcRedstoneFromInventory");
		ObfuscationPart3.map.put("func_94527_a", "canAddItemToSlot");
		ObfuscationPart3.map.put("func_94529_b", "extractDragMode");
		ObfuscationPart3.map.put("func_94530_a", "canMergeSlot");
		ObfuscationPart3.map.put("func_94531_b", "canDragIntoSlot");
		ObfuscationPart3.map.put("func_94532_c", "getDragEvent");
		ObfuscationPart3.map.put("func_94533_d", "resetDrag");
		ObfuscationPart3.map.put("func_94534_d", "getQuickcraftMask");
		ObfuscationPart3.map.put("func_94539_a", "causeExplosionDamage");
		ObfuscationPart3.map.put("func_94540_d", "setExplosion");
		ObfuscationPart3.map.put("func_94541_c", "isExplosion");
		ObfuscationPart3.map.put("func_94542_g", "resetFallSuffix");
		ObfuscationPart3.map.put("func_94544_f", "getBestCombatEntry");
		ObfuscationPart3.map.put("func_94545_a", "calculateFallSuffix");
		ObfuscationPart3.map.put("func_94547_a", "trackDamage");
		ObfuscationPart3.map.put("func_94548_b", "getFallSuffix");
		ObfuscationPart3.map.put("func_94549_h", "reset");
		ObfuscationPart3.map.put("func_94550_c", "getBestAttacker");
		ObfuscationPart3.map.put("func_94559_f", "isLivingDamageSrc");
		ObfuscationPart3.map.put("func_94560_a", "getDamageSrc");
		ObfuscationPart3.map.put("func_94561_i", "getDamageAmount");
		ObfuscationPart3.map.put("func_94562_g", "getFallSuffix");
		ObfuscationPart3.map.put("func_94563_c", "getDamage");
		ObfuscationPart3.map.put("func_94613_c", "getExplosivePlacedBy");
		ObfuscationPart3.map.put("func_95999_t", "getCustomNameTag");
		ObfuscationPart3.map.put("func_96092_aw", "isPushedByWater");
		ObfuscationPart3.map.put("func_96094_a", "setCustomNameTag");
		ObfuscationPart3.map.put("func_96095_a", "onActivatorRailPass");
		ObfuscationPart3.map.put("func_96096_ay", "isIgnited");
		ObfuscationPart3.map.put("func_96107_aA", "getXPos");
		ObfuscationPart3.map.put("func_96108_aC", "getZPos");
		ObfuscationPart3.map.put("func_96109_aB", "getYPos");
		ObfuscationPart3.map.put("func_96110_f", "setBlocked");
		ObfuscationPart3.map.put("func_96111_ay", "getBlocked");
		ObfuscationPart3.map.put("func_96112_aD", "captureDroppedItems");
		ObfuscationPart3.map.put("func_96122_a", "canAttackPlayer");
		ObfuscationPart3.map.put("func_96123_co", "getWorldScoreboard");
		ObfuscationPart3.map.put("func_96124_cp", "getTeam");
		ObfuscationPart3.map.put("func_96296_a", "getValidValues");
		ObfuscationPart3.map.put("func_96297_d", "getFriendlyName");
		ObfuscationPart3.map.put("func_96300_b", "getValueByName");
		ObfuscationPart3.map.put("func_96301_b", "isFancyStyling");
		ObfuscationPart3.map.put("func_96302_c", "isColor");
		ObfuscationPart3.map.put("func_96333_a", "joinNiceStringFromCollection");
		ObfuscationPart3.map.put("func_96441_U", "getScoreboard");
		ObfuscationPart3.map.put("func_96443_a", "setWorldScoreboard");
		ObfuscationPart3.map.put("func_96456_a", "sendScoreboard");
		ObfuscationPart3.map.put("func_96496_a", "teamsToNbt");
		ObfuscationPart3.map.put("func_96497_d", "fillInDisplaySlots");
		ObfuscationPart3.map.put("func_96498_a", "readTeams");
		ObfuscationPart3.map.put("func_96499_a", "setScoreboard");
		ObfuscationPart3.map.put("func_96500_c", "readScores");
		ObfuscationPart3.map.put("func_96501_b", "readObjectives");
		ObfuscationPart3.map.put("func_96502_a", "loadTeamPlayers");
		ObfuscationPart3.map.put("func_96503_e", "scoresToNbt");
		ObfuscationPart3.map.put("func_96504_c", "readDisplayConfig");
		ObfuscationPart3.map.put("func_96505_b", "objectivesToNbt");
		ObfuscationPart3.map.put("func_96508_e", "getTeam");
		ObfuscationPart3.map.put("func_96509_i", "getPlayersTeam");
		ObfuscationPart3.map.put("func_96510_d", "getObjectivesForEntity");
		ObfuscationPart3.map.put("func_96511_d", "removeTeam");
		ObfuscationPart3.map.put("func_96512_b", "removePlayerFromTeam");
		ObfuscationPart3.map.put("func_96513_c", "broadcastTeamRemove");
		ObfuscationPart3.map.put("func_96514_c", "getScoreObjectives");
		ObfuscationPart3.map.put("func_96516_a", "broadcastScoreUpdate");
		ObfuscationPart3.map.put("func_96517_b", "getObjectiveDisplaySlot");
		ObfuscationPart3.map.put("func_96518_b", "getObjective");
		ObfuscationPart3.map.put("func_96519_k", "removeObjective");
		ObfuscationPart3.map.put("func_96520_a", "getObjectivesFromCriteria");
		ObfuscationPart3.map.put("func_96522_a", "onScoreObjectiveAdded");
		ObfuscationPart3.map.put("func_96523_a", "broadcastTeamCreated");
		ObfuscationPart3.map.put("func_96524_g", "removePlayerFromTeams");
		ObfuscationPart3.map.put("func_96525_g", "getTeams");
		ObfuscationPart3.map.put("func_96526_d", "getObjectiveNames");
		ObfuscationPart3.map.put("func_96527_f", "createTeam");
		ObfuscationPart3.map.put("func_96528_e", "getScores");
		ObfuscationPart3.map.put("func_96529_a", "getOrCreateScore");
		ObfuscationPart3.map.put("func_96530_a", "setObjectiveInDisplaySlot");
		ObfuscationPart3.map.put("func_96531_f", "getTeamNames");
		ObfuscationPart3.map.put("func_96532_b", "onObjectiveDisplayNameChanged");
		ObfuscationPart3.map.put("func_96533_c", "onScoreObjectiveRemoved");
		ObfuscationPart3.map.put("func_96534_i", "getSortedScores");
		ObfuscationPart3.map.put("func_96535_a", "addScoreObjective");
		ObfuscationPart3.map.put("func_96536_a", "onScoreUpdated");
		ObfuscationPart3.map.put("func_96537_j", "getObjectiveDisplaySlotNumber");
		ObfuscationPart3.map.put("func_96538_b", "broadcastTeamInfoUpdate");
		ObfuscationPart3.map.put("func_96539_a", "getObjectiveInDisplaySlot");
		ObfuscationPart3.map.put("func_96546_g", "sendDisplaySlotRemovalPackets");
		ObfuscationPart3.map.put("func_96548_f", "getDestroyPackets");
		ObfuscationPart3.map.put("func_96549_e", "addObjective");
		ObfuscationPart3.map.put("func_96550_d", "getCreatePackets");
		ObfuscationPart3.map.put("func_96551_b", "markSaveDataDirty");
		ObfuscationPart3.map.put("func_96552_h", "getObjectiveDisplaySlotCount");
		ObfuscationPart3.map.put("func_96559_d", "getYOffset");
		ObfuscationPart3.map.put("func_96560_a", "getScoreMap");
		ObfuscationPart3.map.put("func_96631_a", "attemptDamageItem");
		ObfuscationPart3.map.put("func_96636_a", "getName");
		ObfuscationPart3.map.put("func_96637_b", "isReadOnly");
		ObfuscationPart3.map.put("func_96645_d", "getObjective");
		ObfuscationPart3.map.put("func_96646_b", "decreaseScore");
		ObfuscationPart3.map.put("func_96647_c", "setScorePoints");
		ObfuscationPart3.map.put("func_96648_a", "incrementScore");
		ObfuscationPart3.map.put("func_96649_a", "increaseScore");
		ObfuscationPart3.map.put("func_96650_f", "getScoreScoreboard");
		ObfuscationPart3.map.put("func_96652_c", "getScorePoints");
		ObfuscationPart3.map.put("func_96653_e", "getPlayerName");
		ObfuscationPart3.map.put("func_96660_a", "setAllowFriendlyFire");
		ObfuscationPart3.map.put("func_96661_b", "getName");
		ObfuscationPart3.map.put("func_96662_c", "setSuffix");
		ObfuscationPart3.map.put("func_96663_f", "getSuffix");
		ObfuscationPart3.map.put("func_96664_a", "setDisplayName");
		ObfuscationPart3.map.put("func_96665_g", "getAllowFriendlyFire");
		ObfuscationPart3.map.put("func_96666_b", "setPrefix");
		ObfuscationPart3.map.put("func_96667_a", "formatPlayerName");
		ObfuscationPart3.map.put("func_96668_e", "getPrefix");
		ObfuscationPart3.map.put("func_96669_c", "getDisplayName");
		ObfuscationPart3.map.put("func_96670_d", "getMembershipCollection");
		ObfuscationPart3.map.put("func_96678_d", "getDisplayName");
		ObfuscationPart3.map.put("func_96679_b", "getName");
		ObfuscationPart3.map.put("func_96680_c", "getCriteria");
		ObfuscationPart3.map.put("func_96681_a", "setDisplayName");
		ObfuscationPart3.map.put("func_96682_a", "getScoreboard");
		ObfuscationPart3.map.put("func_98034_c", "isInvisibleToPlayer");
		ObfuscationPart3.map.put("func_98042_n", "setTransferTicker");
		ObfuscationPart3.map.put("func_98043_aE", "canTransfer");
		ObfuscationPart3.map.put("func_98052_bS", "canPickUpLoot");
		ObfuscationPart3.map.put("func_98053_h", "setCanPickUpLoot");
		ObfuscationPart3.map.put("func_98054_a", "setScaleForAge");
		ObfuscationPart3.map.put("func_98055_j", "setScale");
		ObfuscationPart3.map.put("func_98150_a", "getAtlasSprite");
		ObfuscationPart3.map.put("func_98267_a", "broadcastEvent");
		ObfuscationPart3.map.put("func_98268_b", "setDelayToMin");
		ObfuscationPart3.map.put("func_98270_a", "readFromNBT");
		ObfuscationPart3.map.put("func_98271_a", "getSpawnerWorld");
		ObfuscationPart3.map.put("func_98273_j", "resetTimer");
		ObfuscationPart3.map.put("func_98278_g", "updateSpawner");
		ObfuscationPart3.map.put("func_98279_f", "isActivated");
		ObfuscationPart3.map.put("func_98297_h", "getSeeFriendlyInvisiblesEnabled");
		ObfuscationPart3.map.put("func_98298_a", "setFriendlyFlags");
		ObfuscationPart3.map.put("func_98299_i", "getFriendlyFlags");
		ObfuscationPart3.map.put("func_98300_b", "setSeeFriendlyInvisiblesEnabled");
		ObfuscationPart3.map.put("func_98306_d", "readGlyphSizes");
		ObfuscationPart3.map.put("func_99999_d", "run");
	}

}
